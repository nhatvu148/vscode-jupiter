{"Export.STL":{"prefix":"STL","text":"*Name:* Export.STL  \n*Desc:* export stl  \n *JVer:* 5.0  \n *Arg1:* strFile (string)  \n *Arg2:* crlPart (cursor list)  \n *Arg3:* dScale (double)  \n *Arg4:* bFilterIndex (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"FileMenu.AddJTDB":{"prefix":"AddJTDB","text":"*Name:* FileMenu.AddJTDB  \n*Desc:* add jtdb into model  \n *JVer:* 5.0  \n *Arg1:* strFileName (string)  \n *Arg2:* strMethod (string)  \n *Arg3:* strTargetModel (string)  \n *Arg4:* strOption (string)  \n *Arg5:* iInputNode (integer)  \n *Arg6:* iInputElem (integer)  \n *Arg7:* iInputPart (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"FileMenu.Save":{"prefix":"Save","text":"*Name:* FileMenu.Save  \n*Desc:* Save file  \n *JVer:* 5.0  \n *Arg1:* strPath (string)  \n *Arg2:* strHistoryTree (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"FileMenu.LoadDB":{"prefix":"LoadDB","text":"*Name:* FileMenu.LoadDB  \n*Desc:* Load JTDB file  \n *JVer:* 5.0  \n *Arg1:* strPath (string)  \n *Arg2:* bUseTmpTable (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"HGTMufflerModeling.CreateBeadWeld":{"prefix":"CreateBeadWeld","text":"*Name:* HGTMufflerModeling.CreateBeadWeld  \n*Desc:* create bead weld  \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Arg2:* crlPrjtedEdge (cursor list)  \n *Arg3:* crlPart (cursor list)  \n *Arg4:* dTol (double)  \n *Arg5:* dRatio (double)  \n *Arg6:* crRefElem (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"ImportCAD.Spatial":{"prefix":"Spatial","text":"*Name:* ImportCAD.Spatial  \n*Desc:* Command use for ImportCAD Spatial  \n *JVer:* 5.0  \n *Arg1:* strlPath (string list)  \n *Arg2:* cadSpatialParamData (CAD_SPATIAL_PARAM_DATA)  \n *Arg3:* bIsNXDirect (bool)  \n *Arg4:* bSetFaceColor (bool)  \n *Arg5:* strCsvFilePath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"ImportCAD.TechnoStarGeometry":{"prefix":"TechnoStarGeometry","text":"*Name:* ImportCAD.TechnoStarGeometry  \n*Desc:* Import Geometry bdf file  \n *JVer:* 5.0  \n *Arg1:* strlPath (string list)  \n *Arg2:* bUseUnit (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"ImportCAD.CreoDirect":{"prefix":"CreoDirect","text":"*Name:* ImportCAD.CreoDirect  \n*Desc:* Command use for ImportCAD CreoDirect  \n *JVer:* 5.0  \n *Arg1:* vecPath (vector)  \n *Arg2:* cadProeParamData (CAD_PROE_PARAM_DATA)  \n *Return:* 1 success, 0 fail (int)  \n "},"ImportCAD.Elysium":{"prefix":"Elysium","text":"*Name:* ImportCAD.Elysium  \n*Desc:* Command use for ImportCAD Elysium  \n *JVer:* 5.0  \n *Arg1:* strlPath (string list)  \n *Arg2:* cadElysiumParamData (CAD_ELYSIUM_PARAM_DATA)  \n *Arg3:* bFaceColor (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"ImportMesh.NastranBdf":{"prefix":"NastranBdf","text":"*Name:* ImportMesh.NastranBdf  \n*Desc:* Command use for ImportMesh NastranBdf  \n *JVer:* 5.0  \n *Arg1:* strlFilePaths (string list)  \n *Arg2:* iImportType (integer)  \n *Arg3:* dFaceAngle (double)  \n *Arg4:* dEdgeAngle (double)  \n *Arg5:* bReadNameComment (bool)  \n *Arg6:* iCreateDup1DElemAnswer (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"ImportMesh.AbaqusINP":{"prefix":"AbaqusINP","text":"*Name:* ImportMesh.AbaqusINP  \n*Desc:* Command use for ImportMesh AbaqusINP  \n *JVer:* 5.0  \n *Arg1:* strlFilePaths (string list)  \n *Arg2:* dFaceAngle (double)  \n *Arg3:* dEdgeAngle (double)  \n *Arg4:* iImportType (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"ImportMesh.LSDYNA":{"prefix":"LSDYNA","text":"*Name:* ImportMesh.LSDYNA  \n*Desc:* Command use for ImportMesh LSDYNA  \n *JVer:* 5.0  \n *Arg1:* strlPath (string list)  \n *Arg2:* dFaceAngle (double)  \n *Arg3:* dEdgeAngle (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"ImportMesh.ADVCADX":{"prefix":"ADVCADX","text":"*Name:* ImportMesh.ADVCADX  \n*Desc:* Command use for ImportMesh ADVCADX  \n *JVer:* 5.0  \n *Arg1:* strPath (string)  \n *Arg2:* dFaceAngle (double)  \n *Arg3:* dEdgeAngle (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"ImportMesh.Universal":{"prefix":"Universal","text":"*Name:* ImportMesh.Universal  \n*Desc:* Command use for ImportMesh Universal  \n *JVer:* 5.0  \n *Arg1:* strPath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"ImportMesh.AnsysDat":{"prefix":"AnsysDat","text":"*Name:* ImportMesh.AnsysDat  \n*Desc:* Command use for ImportMesh AnsysDat  \n *JVer:* 5.0  \n *Arg1:* strlPath (string list)  \n *Arg2:* dFaceAngle (double)  \n *Arg3:* dEdgeAngle (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"ImportMesh.TSVPre":{"prefix":"TSVPre","text":"*Name:* ImportMesh.TSVPre  \n*Desc:* Convert a old TSV-Pre/Designer file into one or more jtdb files.  \n *JVer:* 5.0  \n *Arg1:* strImportPath (string)  \n *Arg2:* strExportPath (string)  \n *Arg3:* ilModelIndex (int list)  \n *Arg4:* iMerge (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Utility.FindEntities":{"prefix":"FindEntities","text":"*Name:* Utility.FindEntities  \n*Desc:* Search entity by ID, Name ...etc  \n *JVer:* 5.0  \n *Arg1:* strTarget (string)  \n *Arg2:* strFindType (string)  \n *Arg3:* bFindMatch (bool)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Command use for Utility MeasureDistanceBy2Edges  \n *JVer:* 5.0  \n *Arg1:* crEdgeFirst (cursor)  \n *Arg2:* crEdgeLast (cursor)  \n *Arg3:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* AC boundary method 1  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* bIsMergePart (bool)  \n *Arg3:* bIsRenumber (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"ACModeling.Create.Convex":{"prefix":"Convex","text":"*Name:* ACModeling.Create.Convex  \n*Desc:* Create Convex In Boundary  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* dMeshSize (double)  \n *Arg3:* dOffset (double)  \n *Arg4:* dRadius (double)  \n *Arg5:* iDAxisGround (integer)  \n *Arg6:* dScale (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"ACModeling.CloseHoleAuto":{"prefix":"CloseHoleAuto","text":"*Name:* ACModeling.CloseHoleAuto  \n*Desc:* ACModeling CloseHoleAuto  \n *JVer:* 5.0  \n *Arg1:* crlClosedHoleParts (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"ACModeling.Cut":{"prefix":"Cut","text":"*Name:* ACModeling.Cut  \n*Desc:* cut for ACModeling  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.AbaqusStep.DynamicStep":{"prefix":"DynamicStep","text":"*Name:* Analysis.AbaqusStep.DynamicStep  \n*Desc:* Command use for Analysis AbaqusStep DynamicStep  \n *JVer:* 5.0  \n *Arg1:* abaqusDynamic (ABAQUS_DYNAMIC)  \n *Arg2:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.AbaqusStep.TransientStep":{"prefix":"TransientStep","text":"*Name:* Analysis.AbaqusStep.TransientStep  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDesp (string)  \n *Arg3:* iEnableAutomatic (integer)  \n *Arg4:* iMaxInc (integer)  \n *Arg5:* dInitSize (double)  \n *Arg6:* dMinSize (double)  \n *Arg7:* dMaxSize (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.AbaqusStep.CoupledTDStep":{"prefix":"CoupledTDStep","text":"*Name:* Analysis.AbaqusStep.CoupledTDStep  \n*Desc:* create abaqus step of coupled Temp-Displacement  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDesp (string)  \n *Arg3:* iEnableAutomatic (integer)  \n *Arg4:* iMaxInc (integer)  \n *Arg5:* dInitSize (double)  \n *Arg6:* dMinSize (double)  \n *Arg7:* dMaxSize (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.AbaqusStep.DynamicExplicitStep":{"prefix":"DynamicExplicitStep","text":"*Name:* Analysis.AbaqusStep.DynamicExplicitStep  \n*Desc:* create abaqus step of dynamic explicit  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDesp (string)  \n *Arg3:* iEnableAutomatic (integer)  \n *Arg4:* iIncrmtEstimator (integer)  \n *Arg5:* abaqusPair1 (ABAQUS_PAIR)  \n *Arg6:* dTimeScalfactor (double)  \n *Arg7:* abaqusPair2 (ABAQUS_PAIR)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.AbaqusStep.ModalStep":{"prefix":"ModalStep","text":"*Name:* Analysis.AbaqusStep.ModalStep  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDesp (string)  \n *Arg3:* iEigenSolver (integer)  \n *Arg4:* iNFreqRequestbchecked (integer)  \n *Arg5:* ilNFreqRequestTList (int list)  \n *Arg6:* iFreqShiftbchecked (integer)  \n *Arg7:* ilFreqShiftTList (int list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.AbaqusStep.StaticRiskStep":{"prefix":"StaticRiskStep","text":"*Name:* Analysis.AbaqusStep.StaticRiskStep  \n*Desc:* Abaqus Static Risk Step  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDesp (string)  \n *Arg3:* iEnableAutomatic (integer)  \n *Arg4:* iMaxInc (integer)  \n *Arg5:* dInitSize (double)  \n *Arg6:* dMinSize (double)  \n *Arg7:* dMaxSize (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.AbaqusStep.SteadyStateStep":{"prefix":"SteadyStateStep","text":"*Name:* Analysis.AbaqusStep.SteadyStateStep  \n*Desc:* Abaqus Steady State Step  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDesp (string)  \n *Arg3:* iEnableAutomatic (integer)  \n *Arg4:* iMaxInc (integer)  \n *Arg5:* iNitSize (integer)  \n *Arg6:* dMinSize (double)  \n *Arg7:* dMaxSize (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ACTRAN.ExportBdf":{"prefix":"ExportBdf","text":"*Name:* Analysis.ACTRAN.ExportBdf  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* strPath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ACTRAN.Run":{"prefix":"Run","text":"*Name:* Analysis.ACTRAN.Run  \n*Desc:* Command use for Analysis ACTRAN Run  \n *JVer:* 5.0  \n *Arg1:* actranAnalysis (ACTRAN_ANALYSIS)  \n *Arg2:* crlTarget (cursor list)  \n *Arg3:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ACTRAN.CreateEdat":{"prefix":"CreateEdat","text":"*Name:* Analysis.ACTRAN.CreateEdat  \n*Desc:* Command use for Analysis ACTRAN CreateEdat  \n *JVer:* 5.0  \n *Arg1:* actranAnalysis (ACTRAN_ANALYSIS)  \n *Arg2:* crlTarget (cursor list)  \n *Arg3:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Analysis.Abaqus":{"prefix":"Abaqus","text":"*Name:* Analysis.Analysis.Abaqus  \n*Desc:* Command use for Analysis Abaqus  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* bRBE2toMPC (bool)  \n *Arg3:* bRenameProcess (bool)  \n *Arg4:* iCodeType (integer)  \n *Arg5:* iSurfDefType (integer)  \n *Arg6:* iUnit (integer)  \n *Arg7:* iWriteType (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Analysis.AbaqusSteadyStateStep":{"prefix":"AbaqusSteadyStateStep","text":"*Name:* Analysis.Analysis.AbaqusSteadyStateStep  \n*Desc:* Command use for Analysis AbaqusSteadyStateStep  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDesp (string)  \n *Arg3:* bAutomatic (bool)  \n *Arg4:* maxInc ([])  \n *Arg5:* initSize ([])  \n *Arg6:* minSize ([])  \n *Arg7:* maxSize ([])  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Analysis.AbaqusStaticRiskStep":{"prefix":"AbaqusStaticRiskStep","text":"*Name:* Analysis.Analysis.AbaqusStaticRiskStep  \n*Desc:* Command use for Analysis AbaqusStaticRiskStep  \n *JVer:* 5.0  \n *Arg1:* m_strName ([])  \n *Arg2:* m_strDesp ([])  \n *Arg3:* m_bAutomatic ([])  \n *Arg4:* m_maxInc ([])  \n *Arg5:* m_initSize ([])  \n *Arg6:* m_minSize ([])  \n *Arg7:* m_maxSize ([])  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Ansys.HeadTransferSteady":{"prefix":"HeadTransferSteady","text":"*Name:* Analysis.Ansys.HeadTransferSteady  \n*Desc:* Set parameters  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iJobdataAnatype (integer)  \n *Arg3:* iJobdataSoltype (integer)  \n *Arg4:* strJobdataJobname (string)  \n *Arg5:* strJobdataJobdescription (string)  \n *Arg6:* bBasicdataBoutputdisplacements (bool)  \n *Arg7:* bBasicdataBoutputreactionload (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Ansys.LinearStatic":{"prefix":"LinearStatic","text":"*Name:* Analysis.Ansys.LinearStatic  \n*Desc:* Create and export Ansys job for Linear Static Structural  \n *JVer:* 5.0  \n *Arg1:* strJobName (string)  \n *Arg2:* iJobdataAnatype (integer)  \n *Arg3:* iJobdataSoltype (integer)  \n *Arg4:* strJobdataJobname (string)  \n *Arg5:* strJobdataJobdescription (string)  \n *Arg6:* bBasicdataBoutputdisplacements (bool)  \n *Arg7:* bBasicdataBoutputreactionload (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Ansys.NormalModes":{"prefix":"NormalModes","text":"*Name:* Analysis.Ansys.NormalModes  \n*Desc:* Create and export Ansys job for Normal Modes Structural  \n *JVer:* 5.0  \n *Arg1:* strJobName (string)  \n *Arg2:* iJobdataAnatype (integer)  \n *Arg3:* iJobdataSoltype (integer)  \n *Arg4:* strJobdataJobname (string)  \n *Arg5:* strJobdataJobdescription (string)  \n *Arg6:* bBasicdataBoutputdisplacements (bool)  \n *Arg7:* bBasicdataBoutputreactionload (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Ansys.Harmonic":{"prefix":"Harmonic","text":"*Name:* Analysis.Ansys.Harmonic  \n*Desc:* Create and export Ansys job for Harmonic Structural  \n *JVer:* 5.0  \n *Arg1:* strJobName (string)  \n *Arg2:* iJobdataAnatype (integer)  \n *Arg3:* iJobdataSoltype (integer)  \n *Arg4:* strJobdataJobname (string)  \n *Arg5:* strJobdataJobdescription (string)  \n *Arg6:* bBasicdataBoutputdisplacements (bool)  \n *Arg7:* bBasicdataBoutputreactionload (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Ansys.Steady":{"prefix":"Steady","text":"*Name:* Analysis.Ansys.Steady  \n*Desc:* Create and export Ansys job for Steady Heat Transfer  \n *JVer:* 5.0  \n *Arg1:* strJobName (string)  \n *Arg2:* iJobdataAnatype (integer)  \n *Arg3:* iJobdataSoltype (integer)  \n *Arg4:* strJobdataJobname (string)  \n *Arg5:* strJobdataJobdescription (string)  \n *Arg6:* bBasicdataBoutputdisplacements (bool)  \n *Arg7:* bBasicdataBoutputreactionload (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Nastran.ModalTransientResponse":{"prefix":"ModalTransientResponse","text":"*Name:* Analysis.Nastran.ModalTransientResponse  \n*Desc:* Export Nastran Modal Transient Response  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* bDummyPropAutoAssign (bool)  \n *Arg6:* iDummyPropMaterialID (integer)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Nastran.LinearBuckling":{"prefix":"LinearBuckling","text":"*Name:* Analysis.Nastran.LinearBuckling  \n*Desc:* Export Nastran Linear Buckling  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* bDummyPropAutoAssign (bool)  \n *Arg6:* iDummyPropMaterialID (integer)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Nastran.Transient":{"prefix":"Transient","text":"*Name:* Analysis.Nastran.Transient  \n*Desc:* Export Nastran Transient  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* bDummyPropAutoAssign (bool)  \n *Arg6:* iDummyPropMaterialID (integer)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Nastran.SteadyState":{"prefix":"SteadyState","text":"*Name:* Analysis.Nastran.SteadyState  \n*Desc:* Export Nastran Steady State  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* bDummyPropAutoAssign (bool)  \n *Arg6:* iDummyPropMaterialID (integer)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Nastran.ModalFrequencyResponse":{"prefix":"ModalFrequencyResponse","text":"*Name:* Analysis.Nastran.ModalFrequencyResponse  \n*Desc:* Export Nastran Modal Frequency Response  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* bDummyPropAutoAssign (bool)  \n *Arg6:* iDummyPropMaterialID (integer)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Nastran.LinearStatic":{"prefix":"LinearStatic","text":"*Name:* Analysis.Nastran.LinearStatic  \n*Desc:* Export Nastran Linear Static  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* bDummyPropAutoAssign (bool)  \n *Arg6:* iDummyPropMaterialID (integer)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Nastran.NormalModes":{"prefix":"NormalModes","text":"*Name:* Analysis.Nastran.NormalModes  \n*Desc:* Export Nastran Normal Modes  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* bDummyPropAutoAssign (bool)  \n *Arg6:* iDummyPropMaterialID (integer)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Permas.Job":{"prefix":"Job","text":"*Name:* Analysis.Permas.Job  \n*Desc:* permas output  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* iType (integer)  \n *Arg4:* crEdit (cursor)  \n *Arg5:* crlTarget (cursor list)  \n *Arg6:* bElStress (bool)  \n *Arg7:* bElStress (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSolver.ExportDynamisBdf":{"prefix":"ExportDynamisBdf","text":"*Name:* Analysis.TSSolver.ExportDynamisBdf  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* strPath (string)  \n *Arg2:* crJob (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSolver.Job":{"prefix":"Job","text":"*Name:* Analysis.TSSolver.Job  \n*Desc:* Create TS-Solver Job  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSolver.LinearBucking":{"prefix":"LinearBucking","text":"*Name:* Analysis.TSSolver.LinearBucking  \n*Desc:* Export TS-Solver Linear Bucking  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* crEdit (cursor)  \n *Arg6:* strPath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSolver.LinearStatic":{"prefix":"LinearStatic","text":"*Name:* Analysis.TSSolver.LinearStatic  \n*Desc:* Export TS-Solver Linear Static  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* crEdit (cursor)  \n *Arg6:* strPath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSolver.NonlinearStatic":{"prefix":"NonlinearStatic","text":"*Name:* Analysis.TSSolver.NonlinearStatic  \n*Desc:* Export TS-Solver Nonlinear Static  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* crEdit (cursor)  \n *Arg6:* strPath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSolver.NormalModes":{"prefix":"NormalModes","text":"*Name:* Analysis.TSSolver.NormalModes  \n*Desc:* Export TS-Solver Normal Modes  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* crEdit (cursor)  \n *Arg6:* strPath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSolver.NonlinearFrequency":{"prefix":"NonlinearFrequency","text":"*Name:* Analysis.TSSolver.NonlinearFrequency  \n*Desc:* Export TS-Solver Nonlinear Frequency  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* crEdit (cursor)  \n *Arg6:* strPath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSolver.ModalTransientResponse":{"prefix":"ModalTransientResponse","text":"*Name:* Analysis.TSSolver.ModalTransientResponse  \n*Desc:* Export TS-Solver Modal Transient Response  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* crEdit (cursor)  \n *Arg6:* strPath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSolver.TransientHeatTransfer":{"prefix":"TransientHeatTransfer","text":"*Name:* Analysis.TSSolver.TransientHeatTransfer  \n*Desc:* Export TS-Solver Transient Heat Transfer  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* crEdit (cursor)  \n *Arg6:* strPath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSolver.ModalFrequencyResponse":{"prefix":"ModalFrequencyResponse","text":"*Name:* Analysis.TSSolver.ModalFrequencyResponse  \n*Desc:* Export TS-Solver Modal Frequency Response  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* crEdit (cursor)  \n *Arg6:* strPath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSolver.SteadyStateHeatTransfer":{"prefix":"SteadyStateHeatTransfer","text":"*Name:* Analysis.TSSolver.SteadyStateHeatTransfer  \n*Desc:* Export TS-Solver Steady State Heat Transfer  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* crEdit (cursor)  \n *Arg6:* strPath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSS.TransientHeatTransfer":{"prefix":"TransientHeatTransfer","text":"*Name:* Analysis.TSSS.TransientHeatTransfer  \n*Desc:* Export TS-SS Transient Heat Transfer  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* iRadialReturn (integer)  \n *Arg6:* listNastranNonlinear ([])  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSS.LinearStatic":{"prefix":"LinearStatic","text":"*Name:* Analysis.TSSS.LinearStatic  \n*Desc:* Export TS-SS Linear Static  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* iRadialReturn (integer)  \n *Arg6:* listNastranNonlinear ([])  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSS.NonlinearStatic":{"prefix":"NonlinearStatic","text":"*Name:* Analysis.TSSS.NonlinearStatic  \n*Desc:* Export TS-SS Nonlinear Static  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* iRadialReturn (integer)  \n *Arg6:* listNastranNonlinear ([])  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSS.NormalModes":{"prefix":"NormalModes","text":"*Name:* Analysis.TSSS.NormalModes  \n*Desc:* Export TS-SS Normal Modes  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* iRadialReturn (integer)  \n *Arg6:* listNastranNonlinear ([])  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSS.LinearBuckling":{"prefix":"LinearBuckling","text":"*Name:* Analysis.TSSS.LinearBuckling  \n*Desc:* Export TS-SS Linear Buckling  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* iRadialReturn (integer)  \n *Arg6:* listNastranNonlinear ([])  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSS.ModalFrequencyResponse":{"prefix":"ModalFrequencyResponse","text":"*Name:* Analysis.TSSS.ModalFrequencyResponse  \n*Desc:* Export TS-SS Modal Frequency Response  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* iRadialReturn (integer)  \n *Arg6:* listNastranNonlinear ([])  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.TSSS.SteadyStateHeatTransfer":{"prefix":"SteadyStateHeatTransfer","text":"*Name:* Analysis.TSSS.SteadyStateHeatTransfer  \n*Desc:* Export TS-SS Steady State Heat Transfer  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* iRadialReturn (integer)  \n *Arg6:* listNastranNonlinear ([])  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.Abaqus":{"prefix":"Abaqus","text":"*Name:* Analysis.Abaqus  \n*Desc:* abaqus exporting  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* bRBE2toMPC (bool)  \n *Arg3:* bRenameProcess (bool)  \n *Arg4:* iCodeType (integer)  \n *Arg5:* iSurfDefType (integer)  \n *Arg6:* iUnit (integer)  \n *Arg7:* iWriteType (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ExportAnsys":{"prefix":"ExportAnsys","text":"*Name:* Analysis.ExportAnsys  \n*Desc:* Find faces in part by typical description  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crAnsysJob (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ExportAbaqus":{"prefix":"ExportAbaqus","text":"*Name:* Analysis.ExportAbaqus  \n*Desc:* export inp file  \n *JVer:* 5.0  \n *Arg1:* crAbaJob (cursor)  \n *Arg2:* crlSelectPart (cursor list)  \n *Arg3:* strInpPath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ModifyLbcToStep":{"prefix":"ModifyLbcToStep","text":"*Name:* Analysis.ModifyLbcToStep  \n*Desc:* Abaqus analysis output data setting  \n *JVer:* 5.0  \n *Arg1:* listAbaqusLbcStepInfo ([])  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ExportAdx":{"prefix":"ExportAdx","text":"*Name:* Analysis.ExportAdx  \n*Desc:* export adx file  \n *JVer:* 5.0  \n *Arg1:* crJob (cursor)  \n *Arg2:* strPath (string)  \n *Arg3:* iNumType (integer)  \n *Arg4:* iUiWidth (integer)  \n *Arg5:* iUiPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ExportLsdyna":{"prefix":"ExportLsdyna","text":"*Name:* Analysis.ExportLsdyna  \n*Desc:* Analysis LSDYNA ExportLsdyna  \n *JVer:* 5.0  \n *Arg1:* strPath (string)  \n *Arg2:* crJob (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.NastranJob":{"prefix":"NastranJob","text":"*Name:* Analysis.NastranJob  \n*Desc:* Create nastran Job  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* nastranAnalysis (NASTRAN_ANALYSIS)  \n *Arg5:* bDummyPropAutoAssign (bool)  \n *Arg6:* iDummyPropMaterialID (integer)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.LSDYNAJob":{"prefix":"LSDYNAJob","text":"*Name:* Analysis.LSDYNAJob  \n*Desc:* Create analysis LSDYNA job  \n *JVer:* 5.0  \n *Arg1:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ADVC.MakeProcess.Static":{"prefix":"Static","text":"*Name:* Analysis.ADVC.MakeProcess.Static  \n*Desc:* create static process  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iGeomNonlinear (integer)  \n *Arg3:* advcStructTimeStep (ADVC_STRUCT_TIME_STEP)  \n *Arg4:* bConvergence (bool)  \n *Arg5:* advcConvergence (ADVC_CONVERGENCE)  \n *Arg6:* bContact (bool)  \n *Arg7:* advcContactIter (ADVC_CONTACT_ITER)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ADVC.MakeProcess.Creep":{"prefix":"Creep","text":"*Name:* Analysis.ADVC.MakeProcess.Creep  \n*Desc:* create creep process  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iGeomNonlinear (integer)  \n *Arg3:* advcStructTimeStep (ADVC_STRUCT_TIME_STEP)  \n *Arg4:* bConvergence (bool)  \n *Arg5:* advcConvergence (ADVC_CONVERGENCE)  \n *Arg6:* bContact (bool)  \n *Arg7:* advcContactIter (ADVC_CONTACT_ITER)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ADVC.MakeProcess.Dynamic":{"prefix":"Dynamic","text":"*Name:* Analysis.ADVC.MakeProcess.Dynamic  \n*Desc:* create dynamic process  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iGeomNonlinear (integer)  \n *Arg3:* advcStructTimeStep (ADVC_STRUCT_TIME_STEP)  \n *Arg4:* bConvergence (bool)  \n *Arg5:* advcConvergence (ADVC_CONVERGENCE)  \n *Arg6:* bContact (bool)  \n *Arg7:* advcContactIter (ADVC_CONTACT_ITER)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ADVC.MakeProcess.EigenValue":{"prefix":"EigenValue","text":"*Name:* Analysis.ADVC.MakeProcess.EigenValue  \n*Desc:* create advc eigen value process  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* bEigenValue (bool)  \n *Arg3:* iNumberOfModes (integer)  \n *Arg4:* iEigenvecNorm (integer)  \n *Arg5:* dShift (double)  \n *Arg6:* dCgcgpiTol (double)  \n *Arg7:* dCgcgpiEigTol (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ADVC.MakeProcess.DynamicExplicit":{"prefix":"DynamicExplicit","text":"*Name:* Analysis.ADVC.MakeProcess.DynamicExplicit  \n*Desc:* create dynamic explicit process.  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iGeomNonlinear (integer)  \n *Arg3:* advcStructTimeStep (ADVC_STRUCT_TIME_STEP)  \n *Arg4:* bConvergence (bool)  \n *Arg5:* advcConvergence (ADVC_CONVERGENCE)  \n *Arg6:* bContact (bool)  \n *Arg7:* advcContactIter (ADVC_CONTACT_ITER)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ADVC.MakeProcess.ModalFreqResp":{"prefix":"ModalFreqResp","text":"*Name:* Analysis.ADVC.MakeProcess.ModalFreqResp  \n*Desc:* create modal frequency response process of ADVC  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strRefEigenDir (string)  \n *Arg3:* dRefLowFreq (double)  \n *Arg4:* dRefHighFreq (double)  \n *Arg5:* crModalDampingRatio (cursor)  \n *Arg6:* crExcitationFreq (cursor)  \n *Arg7:* bAutoFreqInterval (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ADVC.MakeProcess.ResponseSpectrum":{"prefix":"ResponseSpectrum","text":"*Name:* Analysis.ADVC.MakeProcess.ResponseSpectrum  \n*Desc:* create advc response spectrum process  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strRefEigenDir (string)  \n *Arg3:* dRefLowFreq (double)  \n *Arg4:* dRefHighFreq (double)  \n *Arg5:* iPropMethod (integer)  \n *Arg6:* iSpttype (integer)  \n *Arg7:* dSptFactor0 (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ADVC.MakeProcess.SteadyState":{"prefix":"SteadyState","text":"*Name:* Analysis.ADVC.MakeProcess.SteadyState  \n*Desc:* create advc heat transfer steady state process  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iEndType (integer)  \n *Arg3:* dMaxTime (double)  \n *Arg4:* iFixedOrAuto (integer)  \n *Arg5:* dMaxChange (double)  \n *Arg6:* dInitDt (double)  \n *Arg7:* iDefineMaxDt (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ADVC.MakeProcess.Transient":{"prefix":"Transient","text":"*Name:* Analysis.ADVC.MakeProcess.Transient  \n*Desc:* create advc heat transfer transient process  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iEndType (integer)  \n *Arg3:* dMaxTime (double)  \n *Arg4:* dSteadyRate (double)  \n *Arg5:* iFixedOrAuto (integer)  \n *Arg6:* dMaxChange (double)  \n *Arg7:* dInitDt (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ADVC.MakeProcess.Fatigue":{"prefix":"Fatigue","text":"*Name:* Analysis.ADVC.MakeProcess.Fatigue  \n*Desc:* create advc fatigue process  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* bFatigue (bool)  \n *Arg3:* iMethod (integer)  \n *Arg4:* iStressAxis (integer)  \n *Arg5:* iSafetyType (integer)  \n *Arg6:* dSearchResolution (double)  \n *Arg7:* dSafetyMax (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ADVC.MakeProcess.RandomResponse":{"prefix":"RandomResponse","text":"*Name:* Analysis.ADVC.MakeProcess.RandomResponse  \n*Desc:* create advc random response process  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strRefEigenDir (string)  \n *Arg3:* dRefLowFreq (double)  \n *Arg4:* dRefHighFreq (double)  \n *Arg5:* crModalDampingRatio (cursor)  \n *Arg6:* crExcitationFreq (cursor)  \n *Arg7:* bAutoFreqInterval (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ADVC.Structure":{"prefix":"Structure","text":"*Name:* Analysis.ADVC.Structure  \n*Desc:* create advc job  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* iEJobType (integer)  \n *Arg4:* crlProcessSequence (cursor list)  \n *Arg5:* crlElemLocationGroup (cursor list)  \n *Arg6:* crlNodeLocationGroup (cursor list)  \n *Arg7:* bWriteGroup (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Analysis.ADVC.HeatTransfer":{"prefix":"HeatTransfer","text":"*Name:* Analysis.ADVC.HeatTransfer  \n*Desc:* create advc job  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strDescription (string)  \n *Arg3:* iEJobType (integer)  \n *Arg4:* crlProcessSequence (cursor list)  \n *Arg5:* crlElemLocationGroup (cursor list)  \n *Arg6:* crlNodeLocationGroup (cursor list)  \n *Arg7:* bWriteGroup (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Assemble.SeparateFaces.AllSharedNodes":{"prefix":"AllSharedNodes","text":"*Name:* Assemble.SeparateFaces.AllSharedNodes  \n*Desc:* create by all shared nodes  \n *JVer:* 5.0  \n *Return:* 1 success, 0 fail (int)  \n "},"Assemble.SeparateFaces.Shell":{"prefix":"Shell","text":"*Name:* Assemble.SeparateFaces.Shell  \n*Desc:* Separate Faces for Shell  \n *JVer:* 5.0  \n *Arg1:* iType (integer)  \n *Arg2:* crlEntity (cursor list)  \n *Arg3:* bCreateGroup (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assemble.SeparateFaces.Solid":{"prefix":"Solid","text":"*Name:* Assemble.SeparateFaces.Solid  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* bCreateGroup (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assemble.Boolean":{"prefix":"Boolean","text":"*Name:* Assemble.Boolean  \n*Desc:* Make Boolean between Parts  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* iBooleanType (integer)  \n *Arg3:* dToleranceAlignment (double)  \n *Arg4:* bLeaveOriginalBodies (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assemble.AssembleFace":{"prefix":"AssembleFace","text":"*Name:* Assemble.AssembleFace  \n*Desc:* create assemble face  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* dTolerance (double)  \n *Arg4:* iFitEdge (integer)  \n *Arg5:* iMeshSetting (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assemble.FullLayer":{"prefix":"FullLayer","text":"*Name:* Assemble.FullLayer  \n*Desc:* assemble full layer  \n *JVer:* 5.0  \n *Arg1:* crPart (cursor)  \n *Arg2:* dLayerWidth (double)  \n *Arg3:* iLayer (integer)  \n *Arg4:* bUsePyramid (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assemble.CylinderLayer":{"prefix":"CylinderLayer","text":"*Name:* Assemble.CylinderLayer  \n*Desc:* Assemble cylinder layer  \n *JVer:* 5.0  \n *Arg1:* crFace (cursor)  \n *Arg2:* crNode (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assemble.SharedFace":{"prefix":"SharedFace","text":"*Name:* Assemble.SharedFace  \n*Desc:* Create assemble shared face  \n *JVer:* 5.0  \n *Return:* 1 success, 0 fail (int)  \n "},"Assemble.AssembleFaces":{"prefix":"AssembleFaces","text":"*Name:* Assemble.AssembleFaces  \n*Desc:* Assemble AssembleFaces  \n *JVer:* 5.0  \n *Arg1:* ilPairFaceToMakeShareFace (int list)  \n *Arg2:* dTolerance (double)  \n *Arg3:* iTypeConnectPos (integer)  \n *Arg4:* bUseSnapInput (bool)  \n *Arg5:* dSnapTolerance (double)  \n *Arg6:* bFitEdge (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assemble.GeneralLayer":{"prefix":"GeneralLayer","text":"*Name:* Assemble.GeneralLayer  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* dWidth (double)  \n *Arg3:* iLayer (integer)  \n *Arg4:* bSeparatePart (bool)  \n *Arg5:* bForceStitchToSide (bool)  \n *Arg6:* bSmoothingEdge (bool)  \n *Arg7:* bNoImprint (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Assemble.AddRib":{"prefix":"AddRib","text":"*Name:* Assemble.AddRib  \n*Desc:* create Rib  \n *JVer:* 5.0  \n *Arg1:* crPart (cursor)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* veclPoints (vector list)  \n *Arg4:* dWidth (double)  \n *Arg5:* dDepth (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assemble.FindMatingFace":{"prefix":"FindMatingFace","text":"*Name:* Assemble.FindMatingFace  \n*Desc:* Find Mating Face For Assemble Faces  \n *JVer:* 5.0  \n *Arg1:* crlMasterFaces (cursor list)  \n *Arg2:* crlSlaveFaces (cursor list)  \n *Arg3:* crlPart (cursor list)  \n *Arg4:* dTolerance (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assemble.AddBoss":{"prefix":"AddBoss","text":"*Name:* Assemble.AddBoss  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crPart (cursor)  \n *Arg2:* iType (integer)  \n *Arg3:* bMerge (bool)  \n *Arg4:* posOrgCenter (position)  \n *Arg5:* vecOrgDirection (vector)  \n *Arg6:* crCoord (cursor)  \n *Arg7:* iAxis (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Assembly.RightClick.AddToReference":{"prefix":"AddToReference","text":"*Name:* Assembly.RightClick.AddToReference  \n*Desc:* Add Reference to Body  \n *JVer:* 5.0  \n *Arg1:* crSrcPart (cursor)  \n *Arg2:* crDestPart (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assembly.RightClick.Suppress":{"prefix":"Suppress","text":"*Name:* Assembly.RightClick.Suppress  \n*Desc:* Suppress/ Unsuppress part on Tree Assembly  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assembly.RightClick.UnSuppress":{"prefix":"UnSuppress","text":"*Name:* Assembly.RightClick.UnSuppress  \n*Desc:* Command use for Assembly RightClick UnSuppress  \n *JVer:* 5.0  \n *Arg1:* taParts ([])  \n *Return:* 1 success, 0 fail (int)  \n "},"Assembly.RightClick.RestoreOriginalPart":{"prefix":"RestoreOriginalPart","text":"*Name:* Assembly.RightClick.RestoreOriginalPart  \n*Desc:* Restore body  \n *JVer:* 5.0  \n *Arg1:* crlBodies (cursor list)  \n *Arg2:* bKeepShareFace (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assembly.RightClick.Rename":{"prefix":"Rename","text":"*Name:* Assembly.RightClick.Rename  \n*Desc:* Rename item  \n *JVer:* 5.0  \n *Arg1:* strNewName (string)  \n *Arg2:* crItem (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assembly.RightClick.ChangeEntityColor":{"prefix":"ChangeEntityColor","text":"*Name:* Assembly.RightClick.ChangeEntityColor  \n*Desc:* Command use for Assembly RightClick ChangeEntityColor  \n *JVer:* 5.0  \n *Arg1:* crlEntity (cursor list)  \n *Arg2:* iColor (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assembly.RightClick.AddSubAssembly":{"prefix":"AddSubAssembly","text":"*Name:* Assembly.RightClick.AddSubAssembly  \n*Desc:* Add sub assembly  \n *JVer:* 5.0  \n *Arg1:* crInst (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assembly.RightClick.ChangeBodyColor":{"prefix":"ChangeBodyColor","text":"*Name:* Assembly.RightClick.ChangeBodyColor  \n*Desc:* Change Body Color  \n *JVer:* 5.0  \n *Arg1:* listPartColorPair ([])  \n *Arg2:* bResetFaceColor (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Assembly.RightClick.ChangeMeshLineColor":{"prefix":"ChangeMeshLineColor","text":"*Name:* Assembly.RightClick.ChangeMeshLineColor  \n*Desc:* Change Entity color  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* iColor (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.BoundaryTemperature.Constant":{"prefix":"Constant","text":"*Name:* BoundaryConditions.BoundaryTemperature.Constant  \n*Desc:* Create boundary temperature  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dFTemp (double)  \n *Arg3:* crTable (cursor)  \n *Arg4:* crlTarget (cursor list)  \n *Arg5:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.BoundaryTemperature.SurfaceMapping":{"prefix":"SurfaceMapping","text":"*Name:* BoundaryConditions.BoundaryTemperature.SurfaceMapping  \n*Desc:* Create mapping boundary temperature  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlTarget (cursor list)  \n *Arg3:* iMAPPos (integer)  \n *Arg4:* iViewCp (integer)  \n *Arg5:* iCp (integer)  \n *Arg6:* iSrcType (integer)  \n *Arg7:* iMappedCpIndexArr0 (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Convection.Constant":{"prefix":"Constant","text":"*Name:* BoundaryConditions.Convection.Constant  \n*Desc:* Create lbc of convection  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dExtTemp (double)  \n *Arg3:* crTableTimeTemp (cursor)  \n *Arg4:* dDcoef (double)  \n *Arg5:* crTableTimeCoeff (cursor)  \n *Arg6:* crTableTempCoeff (cursor)  \n *Arg7:* crlTarget (cursor list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Convection.SurfaceMapping":{"prefix":"SurfaceMapping","text":"*Name:* BoundaryConditions.Convection.SurfaceMapping  \n*Desc:* Create lbc of convection Surface Mapping  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlTarget (cursor list)  \n *Arg3:* iPos (integer)  \n *Arg4:* iViewCp (integer)  \n *Arg5:* iCp (integer)  \n *Arg6:* iSrcType (integer)  \n *Arg7:* iMappedCpIndex0 (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.EnforcedLoads.Acceleration":{"prefix":"Acceleration","text":"*Name:* BoundaryConditions.EnforcedLoads.Acceleration  \n*Desc:* Set enforced acceleration  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iDwDof (integer)  \n *Arg3:* dFVel1 (double)  \n *Arg4:* dFVel2 (double)  \n *Arg5:* dFVel3 (double)  \n *Arg6:* dFVel4 (double)  \n *Arg7:* dFVel5 (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.EnforcedLoads.Velocity":{"prefix":"Velocity","text":"*Name:* BoundaryConditions.EnforcedLoads.Velocity  \n*Desc:* create enforced velocity  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iDwDof (integer)  \n *Arg3:* dFVel0 (double)  \n *Arg4:* dFVel1 (double)  \n *Arg5:* dFVel2 (double)  \n *Arg6:* dFVel3 (double)  \n *Arg7:* dFVel4 (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.EnforcedLoads.Displacement":{"prefix":"Displacement","text":"*Name:* BoundaryConditions.EnforcedLoads.Displacement  \n*Desc:* create enforced displacement  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iDwDof (integer)  \n *Arg3:* dFDisp0 (double)  \n *Arg4:* dFDisp1 (double)  \n *Arg5:* dFDisp2 (double)  \n *Arg6:* dFDisp3 (double)  \n *Arg7:* dFDisp4 (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.HeatFlux.SurfaceFlux":{"prefix":"SurfaceFlux","text":"*Name:* BoundaryConditions.HeatFlux.SurfaceFlux  \n*Desc:* create surface flux  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dFflux (double)  \n *Arg3:* iDistributionMethod (integer)  \n *Arg4:* crTable (cursor)  \n *Arg5:* crlTarget (cursor list)  \n *Arg6:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.HeatFlux.SurfaceMapping":{"prefix":"SurfaceMapping","text":"*Name:* BoundaryConditions.HeatFlux.SurfaceMapping  \n*Desc:* Create mapping heat flux  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlTarget (cursor list)  \n *Arg3:* iMAPPos (integer)  \n *Arg4:* iViewCp (integer)  \n *Arg5:* iCp (integer)  \n *Arg6:* iSrcType (integer)  \n *Arg7:* iMappedCpIndexArr0 (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.HeatFlux.ConcentrateFlux":{"prefix":"ConcentrateFlux","text":"*Name:* BoundaryConditions.HeatFlux.ConcentrateFlux  \n*Desc:* Command use for BoundaryConditions HeatFlux ConcentrateFlux  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* stData (LBC_CONCENTRATE_FLUX_DATA)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.InitialElementalValue.InitialStress":{"prefix":"InitialStress","text":"*Name:* BoundaryConditions.InitialElementalValue.InitialStress  \n*Desc:* create mapping stress  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iDimension (integer)  \n *Arg3:* iElemCs (integer)  \n *Arg4:* dSXX (double)  \n *Arg5:* dSYY (double)  \n *Arg6:* dSXY (double)  \n *Arg7:* crTable (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.InitialTemperature.WholeMapping":{"prefix":"WholeMapping","text":"*Name:* BoundaryConditions.InitialTemperature.WholeMapping  \n*Desc:* Create initial temperature whole mapping  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iMapSourceType (integer)  \n *Arg3:* strPath (string)  \n *Arg4:* iMappingMethod (integer)  \n *Arg5:* iIsubcase (integer)  \n *Arg6:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.InitialTemperature.Constant":{"prefix":"Constant","text":"*Name:* BoundaryConditions.InitialTemperature.Constant  \n*Desc:* Command use for BoundaryConditions InitialTemperature Constant  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strFilePathName (string)  \n *Arg3:* bUseDefault (bool)  \n *Arg4:* crTable (cursor)  \n *Arg5:* crlTarget (cursor list)  \n *Arg6:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.InitialTemperature.ADVC":{"prefix":"ADVC","text":"*Name:* BoundaryConditions.InitialTemperature.ADVC  \n*Desc:* Command use for BoundaryConditions InitialTemperature ADVC  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strFilePathName (string)  \n *Arg3:* bUseDefault (bool)  \n *Arg4:* crTable (cursor)  \n *Arg5:* crlTarget (cursor list)  \n *Arg6:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.InitialTemperature.NastranPunch":{"prefix":"NastranPunch","text":"*Name:* BoundaryConditions.InitialTemperature.NastranPunch  \n*Desc:* Command use for BoundaryConditions InitialTemperature NastranPunch  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strFilePathName (string)  \n *Arg3:* bUseDefault (bool)  \n *Arg4:* crTable (cursor)  \n *Arg5:* crlTarget (cursor list)  \n *Arg6:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.LBCCopy.PropertiesCopyTranslate":{"prefix":"PropertiesCopyTranslate","text":"*Name:* BoundaryConditions.LBCCopy.PropertiesCopyTranslate  \n*Desc:* Copy property translate  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* iMatchMethod (integer)  \n *Arg3:* posVecTrans (position)  \n *Arg4:* dMagnitude (double)  \n *Arg5:* dTrandataDoffset (double)  \n *Arg6:* dTol (double)  \n *Arg7:* crCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.LBCCopy.PropertiesCopyRotate":{"prefix":"PropertiesCopyRotate","text":"*Name:* BoundaryConditions.LBCCopy.PropertiesCopyRotate  \n*Desc:* Copy property rotate  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* iMatchMethod (integer)  \n *Arg3:* posAxis (position)  \n *Arg4:* posCenter (position)  \n *Arg5:* dAngle (double)  \n *Arg6:* dTol (double)  \n *Arg7:* crCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.LBCCopy.PropertiesCopyMirror":{"prefix":"PropertiesCopyMirror","text":"*Name:* BoundaryConditions.LBCCopy.PropertiesCopyMirror  \n*Desc:* Copy property mirror  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* iMatchMethod (integer)  \n *Arg3:* poslPoints (position list)  \n *Arg4:* dOffset (double)  \n *Arg5:* dTol (double)  \n *Arg6:* crlTarget (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.LBCCopy.ConnectionCopyTranslate":{"prefix":"ConnectionCopyTranslate","text":"*Name:* BoundaryConditions.LBCCopy.ConnectionCopyTranslate  \n*Desc:* Copy connection translate  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* iMatchMethod (integer)  \n *Arg3:* posVecTrans (position)  \n *Arg4:* dMagnitude (double)  \n *Arg5:* dTrandataDoffset (double)  \n *Arg6:* dTol (double)  \n *Arg7:* crCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.LBCCopy.ConnectionCopyRotate":{"prefix":"ConnectionCopyRotate","text":"*Name:* BoundaryConditions.LBCCopy.ConnectionCopyRotate  \n*Desc:* Copy Connection rotate  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* iMatchMethod (integer)  \n *Arg3:* posAxis (position)  \n *Arg4:* posCenter (position)  \n *Arg5:* dAngle (double)  \n *Arg6:* dTol (double)  \n *Arg7:* crCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.LBCCopy.ConnectionCopyMirror":{"prefix":"ConnectionCopyMirror","text":"*Name:* BoundaryConditions.LBCCopy.ConnectionCopyMirror  \n*Desc:* Copy Connection mirror  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* iMatchMethod (integer)  \n *Arg3:* poslPoints (position list)  \n *Arg4:* dOffset (double)  \n *Arg5:* dTol (double)  \n *Arg6:* crlTarget (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.LBCCopy.GroupCopyTranslate":{"prefix":"GroupCopyTranslate","text":"*Name:* BoundaryConditions.LBCCopy.GroupCopyTranslate  \n*Desc:* Copy group translate  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* iMatchMethod (integer)  \n *Arg3:* posVecTrans (position)  \n *Arg4:* dMagnitude (double)  \n *Arg5:* dTrandataDoffset (double)  \n *Arg6:* dTol (double)  \n *Arg7:* crCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.LBCCopy.GroupCopyRotate":{"prefix":"GroupCopyRotate","text":"*Name:* BoundaryConditions.LBCCopy.GroupCopyRotate  \n*Desc:* Copy Group rotate  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* iMatchMethod (integer)  \n *Arg3:* posAxis (position)  \n *Arg4:* posCenter (position)  \n *Arg5:* dAngle (double)  \n *Arg6:* dTol (double)  \n *Arg7:* crCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.LBCCopy.GroupCopyMirror":{"prefix":"GroupCopyMirror","text":"*Name:* BoundaryConditions.LBCCopy.GroupCopyMirror  \n*Desc:* Copy Group mirror  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* iMatchMethod (integer)  \n *Arg3:* poslPoints (position list)  \n *Arg4:* dOffset (double)  \n *Arg5:* dTol (double)  \n *Arg6:* crlTarget (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.LBCCopy.LBCCopyTranslate":{"prefix":"LBCCopyTranslate","text":"*Name:* BoundaryConditions.LBCCopy.LBCCopyTranslate  \n*Desc:* Copy LBC translate  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* iMatchMethod (integer)  \n *Arg3:* posVecTrans (position)  \n *Arg4:* dMagnitude (double)  \n *Arg5:* dTrandataDoffset (double)  \n *Arg6:* dTol (double)  \n *Arg7:* crCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.LBCCopy.LBCCopyRotate":{"prefix":"LBCCopyRotate","text":"*Name:* BoundaryConditions.LBCCopy.LBCCopyRotate  \n*Desc:* Copy LBC rotate  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* iMatchMethod (integer)  \n *Arg3:* posAxis (position)  \n *Arg4:* posCenter (position)  \n *Arg5:* dAngle (double)  \n *Arg6:* dTol (double)  \n *Arg7:* crCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.LBCCopy.LBCCopyMirror":{"prefix":"LBCCopyMirror","text":"*Name:* BoundaryConditions.LBCCopy.LBCCopyMirror  \n*Desc:* Copy LBC mirror  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* iMatchMethod (integer)  \n *Arg3:* poslPoints (position list)  \n *Arg4:* dOffset (double)  \n *Arg5:* dTol (double)  \n *Arg6:* crlTarget (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Pressure.SurfaceLoads":{"prefix":"SurfaceLoads","text":"*Name:* BoundaryConditions.Pressure.SurfaceLoads  \n*Desc:* create distrubited pressure  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dlPressure (double list)  \n *Arg3:* iArrowdir (integer)  \n *Arg4:* crCoordinate (cursor)  \n *Arg5:* crlTargetFace (cursor list)  \n *Arg6:* crEditCur (cursor)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Create lbc of 2nodes pressure  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crNodeA (cursor)  \n *Arg3:* dPressureA (double)  \n *Arg4:* iNodeAUnit (integer)  \n *Arg5:* crNodeB (cursor)  \n *Arg6:* dPressureB (double)  \n *Arg7:* iNodeBUnit (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Pressure.General":{"prefix":"General","text":"*Name:* BoundaryConditions.Pressure.General  \n*Desc:* Create general pressure boundary condition  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dFpressure (double)  \n *Arg3:* iIdistribute (integer)  \n *Arg4:* crTable (cursor)  \n *Arg5:* dDphase (double)  \n *Arg6:* dDdelay (double)  \n *Arg7:* crPhaseTable (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Pressure.Quadratic":{"prefix":"Quadratic","text":"*Name:* BoundaryConditions.Pressure.Quadratic  \n*Desc:* Create Pressure quadratic  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dA (double)  \n *Arg3:* dB (double)  \n *Arg4:* crCoordinate (cursor)  \n *Arg5:* dAngleRange (double)  \n *Arg6:* iPressureDirectionMode (integer)  \n *Arg7:* dlPressureDirection (double list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Pressure.FunctionLoadToCylinderSine":{"prefix":"FunctionLoadToCylinderSine","text":"*Name:* BoundaryConditions.Pressure.FunctionLoadToCylinderSine  \n*Desc:* Command use for BoundaryConditions Pressure FunctionLoadToCylinderSine  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dA (double)  \n *Arg3:* crCoordinate (cursor)  \n *Arg4:* dAngleRange (double)  \n *Arg5:* bDistributionAxis (bool)  \n *Arg6:* iPressureDirectionMode (integer)  \n *Arg7:* bIsTotalForceAdjustment (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Pressure.Hydrostatic":{"prefix":"Hydrostatic","text":"*Name:* BoundaryConditions.Pressure.Hydrostatic  \n*Desc:* Boundary Conditions HPressure  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dFHPressure (double)  \n *Arg3:* dFDensity (double)  \n *Arg4:* iDensityUnit (integer)  \n *Arg5:* dFGravity (double)  \n *Arg6:* iGravityUnit (integer)  \n *Arg7:* iGravityDir (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Pressure.SurfaceMapping":{"prefix":"SurfaceMapping","text":"*Name:* BoundaryConditions.Pressure.SurfaceMapping  \n*Desc:* Create mapping pressure  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlTarget (cursor list)  \n *Arg3:* iMAPPos (integer)  \n *Arg4:* iViewCp (integer)  \n *Arg5:* iCp (integer)  \n *Arg6:* iSrcType (integer)  \n *Arg7:* iMappedCpIndexArr (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Submodel.SubmodelForcedFlux":{"prefix":"SubmodelForcedFlux","text":"*Name:* BoundaryConditions.Submodel.SubmodelForcedFlux  \n*Desc:* create submodel forced flux  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iSolver (integer)  \n *Arg3:* strFilePathName (string)  \n *Arg4:* iProcessNo (integer)  \n *Arg5:* iReferType (integer)  \n *Arg6:* dExtensionRange (double)  \n *Arg7:* dExtensionTol (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Submodel.ForcedTempertature":{"prefix":"ForcedTempertature","text":"*Name:* BoundaryConditions.Submodel.ForcedTempertature  \n*Desc:* create sub model forced temperature  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iSolver (integer)  \n *Arg3:* strFilePathName (string)  \n *Arg4:* iProcessNo (integer)  \n *Arg5:* iReferType (integer)  \n *Arg6:* dExtensionRange (double)  \n *Arg7:* dExtensionTol (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Submodel.ForcedDisplacement":{"prefix":"ForcedDisplacement","text":"*Name:* BoundaryConditions.Submodel.ForcedDisplacement  \n*Desc:* Boundary Conditions Lbc Submodel Forced Disp  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iSolver (integer)  \n *Arg3:* strFilePathName (string)  \n *Arg4:* iProcessNo (integer)  \n *Arg5:* bTranslationX (bool)  \n *Arg6:* bTranslationY (bool)  \n *Arg7:* bTranslationZ (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.TemperatureLoads.Constant":{"prefix":"Constant","text":"*Name:* BoundaryConditions.TemperatureLoads.Constant  \n*Desc:* create temperature load constant  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dTemperature (double)  \n *Arg3:* crTable (cursor)  \n *Arg4:* crlTarget (cursor list)  \n *Arg5:* crEdit (cursor)  \n *Arg6:* bUseDefaultTemp (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.TemperatureLoads.ADVCFile":{"prefix":"ADVCFile","text":"*Name:* BoundaryConditions.TemperatureLoads.ADVCFile  \n*Desc:* create temperature load by advc file  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strFilePathName (string)  \n *Arg3:* crTable (cursor)  \n *Arg4:* crlTarget (cursor list)  \n *Arg5:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.TemperatureLoads.NastranPunch":{"prefix":"NastranPunch","text":"*Name:* BoundaryConditions.TemperatureLoads.NastranPunch  \n*Desc:* create temperature load of nastran punch  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strFilePathName (string)  \n *Arg3:* crTable (cursor)  \n *Arg4:* crlTarget (cursor list)  \n *Arg5:* crEdit (cursor)  \n *Arg6:* bUseAsMaterialReferenceTemp (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.TemperatureLoads.WholeMapping":{"prefix":"WholeMapping","text":"*Name:* BoundaryConditions.TemperatureLoads.WholeMapping  \n*Desc:* Create mapping pressure  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlTarget (cursor list)  \n *Arg3:* iMAPPos (integer)  \n *Arg4:* iViewCp (integer)  \n *Arg5:* iCp (integer)  \n *Arg6:* iSrcType (integer)  \n *Arg7:* iMappedCpIndexArr0 (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.TemperatureLoads.LbcInitialTemperature":{"prefix":"LbcInitialTemperature","text":"*Name:* BoundaryConditions.TemperatureLoads.LbcInitialTemperature  \n*Desc:* Boundary Conditions Lbc Initial Temperature  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iType (integer)  \n *Arg3:* dFTemp (double)  \n *Arg4:* strFilePathName (string)  \n *Arg5:* bUseDefault (bool)  \n *Arg6:* crTable (cursor)  \n *Arg7:* crlTarget (cursor list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.LoadCase":{"prefix":"LoadCase","text":"*Name:* BoundaryConditions.LoadCase  \n*Desc:* create load case  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dFactor (double)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* iExportId (integer)  \n *Arg5:* dlTargetFactor (double list)  \n *Arg6:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.InsideHeatGeneration":{"prefix":"InsideHeatGeneration","text":"*Name:* BoundaryConditions.InsideHeatGeneration  \n*Desc:* Create lbc of inside heat generation  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dInsideFlux (double)  \n *Arg3:* crTable (cursor)  \n *Arg4:* crlTarget (cursor list)  \n *Arg5:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.LBCCopyMisc":{"prefix":"LBCCopyMisc","text":"*Name:* BoundaryConditions.LBCCopyMisc  \n*Desc:* Command use for BoundaryConditions LBCCopyMisc  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* iMatchMethod (integer)  \n *Arg3:* dlTransVec (double list)  \n *Arg4:* dTransMag (double)  \n *Arg5:* dTransOffset (double)  \n *Arg6:* dTransTol (double)  \n *Arg7:* crTranscrCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.LbcContactConvert":{"prefix":"LbcContactConvert","text":"*Name:* BoundaryConditions.LbcContactConvert  \n*Desc:* BoundaryConditions LbcContactConvert  \n *JVer:* 5.0  \n *Arg1:* iConvertTo (integer)  \n *Arg2:* iTieConvType (integer)  \n *Arg3:* crlTarget (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.FieldData":{"prefix":"FieldData","text":"*Name:* BoundaryConditions.FieldData  \n*Desc:* create field data table  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iType (integer)  \n *Arg3:* ilSheet (int list)  \n *Arg4:* crEdit (cursor)  \n *Arg5:* bAbaqusAmp (bool)  \n *Arg6:* iAmpType (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.FixedConstraint":{"prefix":"FixedConstraint","text":"*Name:* BoundaryConditions.FixedConstraint  \n*Desc:* create FixedConstraint  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iDwDof (integer)  \n *Arg3:* crCurCoord (cursor)  \n *Arg4:* iType (integer)  \n *Arg5:* iUsetType (integer)  \n *Arg6:* crTable (cursor)  \n *Arg7:* bAbaqusFixed (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.DofSet":{"prefix":"DofSet","text":"*Name:* BoundaryConditions.DofSet  \n*Desc:* Lbc Dof Set  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iDwDof (integer)  \n *Arg3:* crCurCoord (cursor)  \n *Arg4:* crTable (cursor)  \n *Arg5:* crlTarget (cursor list)  \n *Arg6:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.BodyLoads.CentrifugalForce.CoordinateSystems":{"prefix":"CoordinateSystems","text":"*Name:* BoundaryConditions.BodyLoads.CentrifugalForce.CoordinateSystems  \n*Desc:* create centrifugal force by coordinate system  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dFVelocity (double)  \n *Arg3:* dFAcceleration (double)  \n *Arg4:* iAxisDirection (integer)  \n *Arg5:* iVelocityUnit (integer)  \n *Arg6:* iAccelerationUnit (integer)  \n *Arg7:* crCurCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.BodyLoads.CentrifugalForce.TwoPositions":{"prefix":"TwoPositions","text":"*Name:* BoundaryConditions.BodyLoads.CentrifugalForce.TwoPositions  \n*Desc:* create centrifugal force  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dFBasePoint1 (double)  \n *Arg3:* dFBasePoint2 (double)  \n *Arg4:* dFBasePoint3 (double)  \n *Arg5:* dFTipPoint1 (double)  \n *Arg6:* dFTipPoint2 (double)  \n *Arg7:* dFTipPoint3 (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.BodyLoads.Gravity":{"prefix":"Gravity","text":"*Name:* BoundaryConditions.BodyLoads.Gravity  \n*Desc:* create gravity  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dlGravity (double list)  \n *Arg3:* crCurCoord (cursor)  \n *Arg4:* crlTarget (cursor list)  \n *Arg5:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Force.FunctionLoadCylinder.Quadratic":{"prefix":"Quadratic","text":"*Name:* BoundaryConditions.Force.FunctionLoadCylinder.Quadratic  \n*Desc:* Create Force (Quadratic) y = a*x^2 + b  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dFTotalForce (double)  \n *Arg3:* dA (double)  \n *Arg4:* dB (double)  \n *Arg5:* crCoord (cursor)  \n *Arg6:* iAngleBase (integer)  \n *Arg7:* dAngleRange (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Force.FunctionLoadCylinder.Sine":{"prefix":"Sine","text":"*Name:* BoundaryConditions.Force.FunctionLoadCylinder.Sine  \n*Desc:* Define the force load on selected entity based on the distribution of the sine function.  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dFTotalForce (double)  \n *Arg3:* dA (double)  \n *Arg4:* crCoord (cursor)  \n *Arg5:* iAngleBase (integer)  \n *Arg6:* dAngleRange (double)  \n *Arg7:* iEnArrowDir (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Force.FunctionLoadCylinder.Vector":{"prefix":"Vector","text":"*Name:* BoundaryConditions.Force.FunctionLoadCylinder.Vector  \n*Desc:* Define the force load on selected entity based on the distribution of the vector function.  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dFTotalForce (double)  \n *Arg3:* dA (double)  \n *Arg4:* dX (double)  \n *Arg5:* dY (double)  \n *Arg6:* crCoord (cursor)  \n *Arg7:* iEnDirection (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* create nonlinear force NOLIN3  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dForceScale (double)  \n *Arg3:* dMomentScale (double)  \n *Arg4:* dForcePowerA (double)  \n *Arg5:* dMomentPowerA (double)  \n *Arg6:* iForcDir (integer)  \n *Arg7:* iForceDepends (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* create NOLIN4 nonlinear force  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dForceScale (double)  \n *Arg3:* dMomentScale (double)  \n *Arg4:* dForcePowerA (double)  \n *Arg5:* dMomentPowerA (double)  \n *Arg6:* iForcDir (integer)  \n *Arg7:* iForceDepends (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Create Nonlinear Force of NOLIN1(Table)  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dForceScale (double)  \n *Arg3:* dMomentScale (double)  \n *Arg4:* iForcDir (integer)  \n *Arg5:* iForceDepends (integer)  \n *Arg6:* iMomentDir (integer)  \n *Arg7:* iMomentDepends (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Force.General":{"prefix":"General","text":"*Name:* BoundaryConditions.Force.General  \n*Desc:* create force general  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* vecForce (vector)  \n *Arg3:* DFLT_DBL ([])  \n *Arg4:* DFLT_DBL ([])  \n *Arg5:* vecMoment (vector)  \n *Arg6:* DFLT_DBL ([])  \n *Arg7:* DFLT_DBL ([])  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.Force.ForceNormalDirection":{"prefix":"ForceNormalDirection","text":"*Name:* BoundaryConditions.Force.ForceNormalDirection  \n*Desc:* Create Force (normal direction)  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* vecForce (vector)  \n *Arg3:* DFLT_DBL ([])  \n *Arg4:* DFLT_DBL ([]])  \n *Arg5:* iEnArrowDir (integer)  \n *Arg6:* iDistributionMethod (integer)  \n *Arg7:* crCurCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.InitialNodalValue.InitialAngularVelocity.Abaqus":{"prefix":"Abaqus","text":"*Name:* BoundaryConditions.InitialNodalValue.InitialAngularVelocity.Abaqus  \n*Desc:* Create lbc of initial angular velocity for abaqus  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dVelocity (double)  \n *Arg3:* strFirstCoord (string)  \n *Arg4:* strSecondCoord (string)  \n *Arg5:* crlTarget (cursor list)  \n *Arg6:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.InitialNodalValue.InitialAngularVelocity.General":{"prefix":"General","text":"*Name:* BoundaryConditions.InitialNodalValue.InitialAngularVelocity.General  \n*Desc:* Command use for BoundaryConditions InitialNodalValue InitialAngularVelocity General  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* stData (LBC_DYNAMIC_INITIAL_CONDITION_DATA)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.InitialNodalValue.Displacement":{"prefix":"Displacement","text":"*Name:* BoundaryConditions.InitialNodalValue.Displacement  \n*Desc:* Create Initial Dynamic  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iType (integer)  \n *Arg3:* vecInit (vector)  \n *Arg4:* bSelNode (bool)  \n *Arg5:* crNodeSet (cursor)  \n *Arg6:* crTable (cursor)  \n *Arg7:* crCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.InitialNodalValue.Velocity":{"prefix":"Velocity","text":"*Name:* BoundaryConditions.InitialNodalValue.Velocity  \n*Desc:* Command use for BoundaryConditions InitialNodalValue Velocity  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* stData (LBC_DYNAMIC_INITIAL_CONDITION_DATA)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"BoundaryConditions.InitialNodalValue.RotationAngle":{"prefix":"RotationAngle","text":"*Name:* BoundaryConditions.InitialNodalValue.RotationAngle  \n*Desc:* Command use for BoundaryConditions InitialNodalValue RotationAngle  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* stData (LBC_DYNAMIC_INITIAL_CONDITION_DATA)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Pretension.General":{"prefix":"General","text":"*Name:* Connections.Pretension.General  \n*Desc:* Pretension general  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iDir (integer)  \n *Arg3:* dValue (double)  \n *Arg4:* bFixLength (bool)  \n *Arg5:* crTable (cursor)  \n *Arg6:* crCoord (cursor)  \n *Arg7:* iLocalUnit (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Pretension.Abaqus":{"prefix":"Abaqus","text":"*Name:* Connections.Pretension.Abaqus  \n*Desc:* Create Pretension Abaqus  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* bFixedLenght (bool)  \n *Arg3:* crTable (cursor)  \n *Arg4:* dValue (double)  \n *Arg5:* iLocalUnit (integer)  \n *Arg6:* strNormal (string)  \n *Arg7:* dlNodePos (double list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Pretension.Advc":{"prefix":"Advc","text":"*Name:* Connections.Pretension.Advc  \n*Desc:* Create ADVC pretension  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* bFixedLength (bool)  \n *Arg3:* crEnforcedVelocity (cursor)  \n *Arg4:* dDvalue (double)  \n *Arg5:* iDirUpdateType (integer)  \n *Arg6:* dlVnormal (double list)  \n *Arg7:* dlCtrolNodePos (double list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.MassElements":{"prefix":"MassElements","text":"*Name:* Connections.MassElements  \n*Desc:* Connection new mass  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlTarget (cursor list)  \n *Arg3:* dMass (double)  \n *Arg4:* iDof (integer)  \n *Arg5:* bDesigner (bool)  \n *Arg6:* crCoordinate (cursor)  \n *Arg7:* dOffset0 (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.BarBeam":{"prefix":"BarBeam","text":"*Name:* Connections.BarBeam  \n*Desc:* create Connections Bar or Beam  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iEType (integer)  \n *Arg3:* iMethod (integer)  \n *Arg4:* crProp (cursor)  \n *Arg5:* dlOrient (double list)  \n *Arg6:* crlMasterTarget (cursor list)  \n *Arg7:* crlSlaveTarget (cursor list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.GapsDetail":{"prefix":"GapsDetail","text":"*Name:* Connections.GapsDetail  \n*Desc:* Command use for Connections GapsDetail  \n *JVer:* 5.0  \n *Arg1:* crlMaster (cursor list)  \n *Arg2:* crlSlave (cursor list)  \n *Arg3:* iMethod (integer)  \n *Arg4:* iOriMode (integer)  \n *Arg5:* crCoord (cursor)  \n *Arg6:* strName (string)  \n *Arg7:* dU0 (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Plot":{"prefix":"Plot","text":"*Name:* Connections.Plot  \n*Desc:* Create 1D plot connection  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iPID (integer)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.CreateConnConm":{"prefix":"CreateConnConm","text":"*Name:* Connections.CreateConnConm  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iEType (integer)  \n *Arg3:* iMethod (integer)  \n *Arg4:* iCoordSys (integer)  \n *Arg5:* iConmId (integer)  \n *Arg6:* crMatCoord (cursor)  \n *Arg7:* dMass (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Command use for Connections RBE3  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* listRbe3TermConnection ([])  \n *Arg5:* iTypeRBE3 (integer)  \n *Arg6:* strName (string)  \n *Arg7:* crCoordSys (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.RigidWall":{"prefix":"RigidWall","text":"*Name:* Connections.RigidWall  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iObject (integer)  \n *Arg3:* iType (integer)  \n *Arg4:* iMotion (integer)  \n *Arg5:* iFriction (integer)  \n *Arg6:* iOrtho (integer)  \n *Arg7:* iForces (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Connector":{"prefix":"Connector","text":"*Name:* Connections.Connector  \n*Desc:* create Connector  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iMethod (integer)  \n *Arg3:* iConnectType (integer)  \n *Arg4:* iRefNode (integer)  \n *Arg5:* iElemCs (integer)  \n *Arg6:* crLocalCS (cursor)  \n *Arg7:* crlElasticity (cursor list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.BoltMeshingSplitOnly":{"prefix":"BoltMeshingSplitOnly","text":"*Name:* Connections.BoltMeshingSplitOnly  \n*Desc:* Command use for Connections BoltMeshingSplitOnly  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iPartcutparamImethod (integer)  \n *Arg3:* dPartcutparamDoffset (double)  \n *Arg4:* iPartcutparamBshareface (integer)  \n *Arg5:* iPartcutparamBseparateface (integer)  \n *Arg6:* iPartcutparamBsplitonly (integer)  \n *Arg7:* iPartcutparamBmakesectionface (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.BoltMeshingNotSplitOnly":{"prefix":"BoltMeshingNotSplitOnly","text":"*Name:* Connections.BoltMeshingNotSplitOnly  \n*Desc:* Command use for Connections BoltMeshingNotSplitOnly  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iPartcutparamImethod (integer)  \n *Arg3:* dPartcutparamDoffset (double)  \n *Arg4:* iPartcutparamBshareface (integer)  \n *Arg5:* iPartcutparamBseparateface (integer)  \n *Arg6:* iPartcutparamBsplitonly (integer)  \n *Arg7:* iPartcutparamBmakesectionface (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.BoltConnections.Edge.TypeC":{"prefix":"TypeC","text":"*Name:* Connections.BoltConnections.Edge.TypeC  \n*Desc:* create bolt connections by TypeC edge.  \n *JVer:* 5.0  \n *Arg1:* crlEdgeCur1 (cursor list)  \n *Arg2:* crlEdgeCur2 (cursor list)  \n *Arg3:* strRbeName (string)  \n *Arg4:* dPlaneTol (double)  \n *Arg5:* dMaxBoltHeight (double)  \n *Arg6:* iConnectionType (integer)  \n *Arg7:* iCoincidentNodes (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.BoltConnections.Edge.TypeB":{"prefix":"TypeB","text":"*Name:* Connections.BoltConnections.Edge.TypeB  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlEdgeCur1 (cursor list)  \n *Arg2:* crlEdgeCur2 (cursor list)  \n *Arg3:* strRbeName (string)  \n *Arg4:* strBarName (string)  \n *Arg5:* iShaftType (integer)  \n *Arg6:* crCurBarProperty (cursor)  \n *Arg7:* dPlaneTol (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.BoltConnections.Edge.TypeD":{"prefix":"TypeD","text":"*Name:* Connections.BoltConnections.Edge.TypeD  \n*Desc:* create bolt connection typeD  \n *JVer:* 5.0  \n *Arg1:* crlEdgeCur1 (cursor list)  \n *Arg2:* crlEdgeCur2 (cursor list)  \n *Arg3:* strMpcName (string)  \n *Arg4:* dConnRadius (double)  \n *Arg5:* dPlaneTol (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.BoltConnections.Edge.TypeA":{"prefix":"TypeA","text":"*Name:* Connections.BoltConnections.Edge.TypeA  \n*Desc:* Create Lbc TypeA Bolt Edge method  \n *JVer:* 5.0  \n *Arg1:* crlEdgeCur1 (cursor list)  \n *Arg2:* crlEdgeCur2 (cursor list)  \n *Arg3:* strRbeName (string)  \n *Arg4:* strBarName (string)  \n *Arg5:* iShaftType (integer)  \n *Arg6:* crCurBarProperty (cursor)  \n *Arg7:* dPlaneTol (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.BoltConnections.Face.TypeC":{"prefix":"TypeC","text":"*Name:* Connections.BoltConnections.Face.TypeC  \n*Desc:* Create Lbc TypeC Bolt Face method  \n *JVer:* 5.0  \n *Arg1:* crlFaceCur1 (cursor list)  \n *Arg2:* crlFaceCur2 (cursor list)  \n *Arg3:* strRbeName (string)  \n *Arg4:* dPlaneTol (double)  \n *Arg5:* dMaxBoltHeight (double)  \n *Arg6:* dMaxDiameter (double)  \n *Arg7:* dMinDiameter (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.BoltConnections.Face.TypeB":{"prefix":"TypeB","text":"*Name:* Connections.BoltConnections.Face.TypeB  \n*Desc:* Create Lbc TypeB Bolt Face method  \n *JVer:* 5.0  \n *Arg1:* crlFaceCur1 (cursor list)  \n *Arg2:* crlFaceCur2 (cursor list)  \n *Arg3:* strRbeName (string)  \n *Arg4:* strBarName (string)  \n *Arg5:* iShaftType (integer)  \n *Arg6:* crCurBarProperty (cursor)  \n *Arg7:* dPlaneTol (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.BoltConnections.Face.TypeA":{"prefix":"TypeA","text":"*Name:* Connections.BoltConnections.Face.TypeA  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlFaceCur1 (cursor list)  \n *Arg2:* crlFaceCur2 (cursor list)  \n *Arg3:* strRbeName (string)  \n *Arg4:* strBarName (string)  \n *Arg5:* iShaftType (integer)  \n *Arg6:* crCurBarProperty (cursor)  \n *Arg7:* dPlaneTol (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.Abaqus.ContactTable":{"prefix":"ContactTable","text":"*Name:* Connections.Contacts.Abaqus.ContactTable  \n*Desc:* Create LBC contact abaqus manual face  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iContactMethod (integer)  \n *Arg3:* iContactType (integer)  \n *Arg4:* iAlg (integer)  \n *Arg5:* dAdjustVal (double)  \n *Arg6:* dExtensionZone (double)  \n *Arg7:* dMaxPenetration (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.Abaqus.ManualGroup":{"prefix":"ManualGroup","text":"*Name:* Connections.Contacts.Abaqus.ManualGroup  \n*Desc:* Create LBC contact abaqus manual group  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iContactMethod (integer)  \n *Arg3:* iContactType (integer)  \n *Arg4:* iAlg (integer)  \n *Arg5:* dAdjustVal (double)  \n *Arg6:* dExtensionZone (double)  \n *Arg7:* dMaxPenetration (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.Abaqus.ManualFace":{"prefix":"ManualFace","text":"*Name:* Connections.Contacts.Abaqus.ManualFace  \n*Desc:* Create LBC contact abaqus manual face  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iContactMethod (integer)  \n *Arg3:* iContactType (integer)  \n *Arg4:* iAlg (integer)  \n *Arg5:* dAdjustVal (double)  \n *Arg6:* dExtensionZone (double)  \n *Arg7:* dMaxPenetration (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.Abaqus.ContactGroupByMatrix":{"prefix":"ContactGroupByMatrix","text":"*Name:* Connections.Contacts.Abaqus.ContactGroupByMatrix  \n*Desc:* Create LBC contact abaqus group by matrix  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iContactMethod (integer)  \n *Arg3:* iContactType (integer)  \n *Arg4:* iAlg (integer)  \n *Arg5:* dAdjustVal (double)  \n *Arg6:* dExtensionZone (double)  \n *Arg7:* dMaxPenetration (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.Abaqus.ContactShareFace":{"prefix":"ContactShareFace","text":"*Name:* Connections.Contacts.Abaqus.ContactShareFace  \n*Desc:* Create LBC contact abaqus manual group  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iContactMethod (integer)  \n *Arg3:* iContactType (integer)  \n *Arg4:* iAlg (integer)  \n *Arg5:* dAdjustVal (double)  \n *Arg6:* dExtensionZone (double)  \n *Arg7:* dMaxPenetration (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.ADVC.ContactClearance":{"prefix":"ContactClearance","text":"*Name:* Connections.Contacts.ADVC.ContactClearance  \n*Desc:* contact clearance for ADVC contact  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* dClearanceVal (double)  \n *Arg3:* iLocalUnit (integer)  \n *Arg4:* iSolverType (integer)  \n *Arg5:* crlTarget (cursor list)  \n *Arg6:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.ADVC.ManualGroup":{"prefix":"ManualGroup","text":"*Name:* Connections.Contacts.ADVC.ManualGroup  \n*Desc:* create ADVC contact Manual Group  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iContactType (integer)  \n *Arg3:* iSlidingType (integer)  \n *Arg4:* iInitialState (integer)  \n *Arg5:* dInitialStateTol (double)  \n *Arg6:* dKineticFrictionCoef (double)  \n *Arg7:* dExponentialCoef (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.ADVC.ManualFace":{"prefix":"ManualFace","text":"*Name:* Connections.Contacts.ADVC.ManualFace  \n*Desc:* create ADVC contact by manual face  \n *JVer:* 5.0  \n *Arg1:* crlFaceMaster (cursor list)  \n *Arg2:* crlFaceSlave (cursor list)  \n *Arg3:* strName (string)  \n *Arg4:* iContactType (integer)  \n *Arg5:* iSlidingType (integer)  \n *Arg6:* iInitialState (integer)  \n *Arg7:* dInitialStateTol (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.ADVC.Contact":{"prefix":"Contact","text":"*Name:* Connections.Contacts.ADVC.Contact  \n*Desc:* Command use for Connections Contacts ADVC Contact  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iType (integer)  \n *Arg3:* slidingType (0)  \n *Arg4:* InitialState (0)  \n *Arg5:* initialStateTol (DFLT_DBL)  \n *Arg6:* kineticFrictionCoef (DFLT_DBL)  \n *Arg7:* exponentialCoef (DFLT_DBL)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.ADVC.ContactShareFace":{"prefix":"ContactShareFace","text":"*Name:* Connections.Contacts.ADVC.ContactShareFace  \n*Desc:* create ADVC Contact Share Face  \n *JVer:* 5.0  \n *Arg1:* crlShareFace (cursor list)  \n *Arg2:* strName (string)  \n *Arg3:* iContactType (integer)  \n *Arg4:* iSlidingType (integer)  \n *Arg5:* iInitialState (integer)  \n *Arg6:* dInitialStateTol (double)  \n *Arg7:* dKineticFrictionCoef (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.ADVC.ContactTable":{"prefix":"ContactTable","text":"*Name:* Connections.Contacts.ADVC.ContactTable  \n*Desc:* create ADVC Contact Table  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iContactType (integer)  \n *Arg3:* iSlidingType (integer)  \n *Arg4:* iInitialState (integer)  \n *Arg5:* dInitialStateTol (double)  \n *Arg6:* dKineticFrictionCoef (double)  \n *Arg7:* dExponentialCoef (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.ADVC.ContactGroupByMatrix":{"prefix":"ContactGroupByMatrix","text":"*Name:* Connections.Contacts.ADVC.ContactGroupByMatrix  \n*Desc:* create ADVC contact Group By Matrix  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iContactType (integer)  \n *Arg3:* iSlidingType (integer)  \n *Arg4:* iInitialState (integer)  \n *Arg5:* dInitialStateTol (double)  \n *Arg6:* dKineticFrictionCoef (double)  \n *Arg7:* dExponentialCoef (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.Ansys.ManualGroup":{"prefix":"ManualGroup","text":"*Name:* Connections.Contacts.Ansys.ManualGroup  \n*Desc:* create contact ansys Manual Group  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iMethod (integer)  \n *Arg3:* iType (integer)  \n *Arg4:* iContactAlgorithm (integer)  \n *Arg5:* ansysContact (ANSYS_CONTACT)  \n *Arg6:* crplTarget (cursor pair list)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.Ansys.ManualFace":{"prefix":"ManualFace","text":"*Name:* Connections.Contacts.Ansys.ManualFace  \n*Desc:* create contacts of Ansys Manual Face  \n *JVer:* 5.0  \n *Arg1:* crlFaceMaster (cursor list)  \n *Arg2:* crlFaceSlave (cursor list)  \n *Arg3:* strName (string)  \n *Arg4:* iMethod (integer)  \n *Arg5:* iType (integer)  \n *Arg6:* iContactAlgorithm (integer)  \n *Arg7:* ansysContact (ANSYS_CONTACT)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.Ansys.ContactGroupByMatrix":{"prefix":"ContactGroupByMatrix","text":"*Name:* Connections.Contacts.Ansys.ContactGroupByMatrix  \n*Desc:* create contact ansys Group By Matrix  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iMethod (integer)  \n *Arg3:* iType (integer)  \n *Arg4:* iContactAlgorithm (integer)  \n *Arg5:* ansysContact (ANSYS_CONTACT)  \n *Arg6:* crplTarget (cursor pair list)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.Ansys.ContactShareFace":{"prefix":"ContactShareFace","text":"*Name:* Connections.Contacts.Ansys.ContactShareFace  \n*Desc:* create contact ansys Share Face  \n *JVer:* 5.0  \n *Arg1:* crlShareFace (cursor list)  \n *Arg2:* strName (string)  \n *Arg3:* iMethod (integer)  \n *Arg4:* iType (integer)  \n *Arg5:* iContactAlgorithm (integer)  \n *Arg6:* ansysContact (ANSYS_CONTACT)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.Ansys.ContactTable":{"prefix":"ContactTable","text":"*Name:* Connections.Contacts.Ansys.ContactTable  \n*Desc:* create contact ansys Contact Table  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iMethod (integer)  \n *Arg3:* iType (integer)  \n *Arg4:* iContactAlgorithm (integer)  \n *Arg5:* ansysContact (ANSYS_CONTACT)  \n *Arg6:* crplTarget (cursor pair list)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.MSCNastran.ManualGroup":{"prefix":"ManualGroup","text":"*Name:* Connections.Contacts.MSCNastran.ManualGroup  \n*Desc:* create contacts of MSC Nastran  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* tssolverContact (NASTRAN_CONTACT)  \n *Arg3:* crplTarget (cursor pair list)  \n *Arg4:* crEdit (cursor)  \n *Arg5:* iColor (integer)  \n *Arg6:* iMethod (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.MSCNastran.ContactGroupByMatrix":{"prefix":"ContactGroupByMatrix","text":"*Name:* Connections.Contacts.MSCNastran.ContactGroupByMatrix  \n*Desc:* create contacts of MSC Nastran Contact Group By Matrix  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* nastranContact (NASTRAN_CONTACT)  \n *Arg3:* crplTarget (cursor pair list)  \n *Arg4:* crEdit (cursor)  \n *Arg5:* iColor (integer)  \n *Arg6:* iMethod (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.MSCNastran.ManualFace":{"prefix":"ManualFace","text":"*Name:* Connections.Contacts.MSCNastran.ManualFace  \n*Desc:* create contacts of MSC Nastran Manual Face  \n *JVer:* 5.0  \n *Arg1:* crlFaceMaster (cursor list)  \n *Arg2:* crlFaceSlave (cursor list)  \n *Arg3:* strName (string)  \n *Arg4:* nastranContact (NASTRAN_CONTACT)  \n *Arg5:* crEdit (cursor)  \n *Arg6:* iColor (integer)  \n *Arg7:* iMethod (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.MSCNastran.ContactShareFace":{"prefix":"ContactShareFace","text":"*Name:* Connections.Contacts.MSCNastran.ContactShareFace  \n*Desc:* create contacts of MSC Nastran Contact Share Face  \n *JVer:* 5.0  \n *Arg1:* crlShareFace (cursor list)  \n *Arg2:* strName (string)  \n *Arg3:* nastranContact (NASTRAN_CONTACT)  \n *Arg4:* crEdit (cursor)  \n *Arg5:* iColor (integer)  \n *Arg6:* iMethod (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.MSCNastran.ContactTable":{"prefix":"ContactTable","text":"*Name:* Connections.Contacts.MSCNastran.ContactTable  \n*Desc:* create contacts of MSC Nastran Contact Table  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* nastranContact (NASTRAN_CONTACT)  \n *Arg3:* crplTarget (cursor pair list)  \n *Arg4:* crEdit (cursor)  \n *Arg5:* iColor (integer)  \n *Arg6:* iMethod (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.NXNastran.ManualFace":{"prefix":"ManualFace","text":"*Name:* Connections.Contacts.NXNastran.ManualFace  \n*Desc:* Create Contact NXNastran Manual Face  \n *JVer:* 5.0  \n *Arg1:* crlFaceMaster (cursor list)  \n *Arg2:* crlFaceSlave (cursor list)  \n *Arg3:* strName (string)  \n *Arg4:* iContactType (integer)  \n *Arg5:* iContactAlg (integer)  \n *Arg6:* dNorPenFactor (double)  \n *Arg7:* dTanPenFactor (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.NXNastran.ContactShareFace":{"prefix":"ContactShareFace","text":"*Name:* Connections.Contacts.NXNastran.ContactShareFace  \n*Desc:* Create Contact NXNastran Contact Share Face  \n *JVer:* 5.0  \n *Arg1:* crlShareFace (cursor list)  \n *Arg2:* strName (string)  \n *Arg3:* iContactType (integer)  \n *Arg4:* iContactAlg (integer)  \n *Arg5:* dNorPenFactor (double)  \n *Arg6:* dTanPenFactor (double)  \n *Arg7:* dForceConTol (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.NXNastran.ContactTable":{"prefix":"ContactTable","text":"*Name:* Connections.Contacts.NXNastran.ContactTable  \n*Desc:* Create Contact NXNastran Contact Table  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iType (integer)  \n *Arg3:* iAlg (integer)  \n *Arg4:* dNorPenFactor (double)  \n *Arg5:* dTanPenFactor (double)  \n *Arg6:* dForceConTol (double)  \n *Arg7:* dMaxForceIter (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.NXNastran.ManualGroup":{"prefix":"ManualGroup","text":"*Name:* Connections.Contacts.NXNastran.ManualGroup  \n*Desc:* Create Contact NXNastran Manual Group  \n *JVer:* 5.0  \n *Arg1:* crFaceMaster (cursor)  \n *Arg2:* crFaceSlave (cursor)  \n *Arg3:* strName (string)  \n *Arg4:* iContactType (integer)  \n *Arg5:* iContactAlg (integer)  \n *Arg6:* dNorPenFactor (double)  \n *Arg7:* dTanPenFactor (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.NXNastran.ContactGroupByMatrix":{"prefix":"ContactGroupByMatrix","text":"*Name:* Connections.Contacts.NXNastran.ContactGroupByMatrix  \n*Desc:* Create Contact NXNastran Contact Group By Matrix  \n *JVer:* 5.0  \n *Arg1:* crFaceMaster (cursor)  \n *Arg2:* crFaceSlave (cursor)  \n *Arg3:* strName (string)  \n *Arg4:* iContactType (integer)  \n *Arg5:* iContactAlg (integer)  \n *Arg6:* dNorPenFactor (double)  \n *Arg7:* dTanPenFactor (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.TSSolver.ManualFace":{"prefix":"ManualFace","text":"*Name:* Connections.Contacts.TSSolver.ManualFace  \n*Desc:* Create TSSolver Contact  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* nastranContact (TSSOLVER_CONTACT)  \n *Arg3:* crplTarget (cursor pair list)  \n *Arg4:* crEdit (cursor)  \n *Arg5:* iColor (integer)  \n *Arg6:* iMethod (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.TSSolver.Auto":{"prefix":"Auto","text":"*Name:* Connections.Contacts.TSSolver.Auto  \n*Desc:* find contact  \n *JVer:* 5.0  \n *Arg1:* strlNames (string list)  \n *Arg2:* crllMasterFaceTargets (cursor list list)  \n *Arg3:* crllSlaveFaceTargets (cursor list list)  \n *Arg4:* crlContactTypes (cursor list)  \n *Arg5:* dlInterferenceClosures (double list)  \n *Arg6:* dlFrictionCoefficients (double list)  \n *Arg7:* blInitialAdjustments (bool list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.TSSolver.ManualGroup":{"prefix":"ManualGroup","text":"*Name:* Connections.Contacts.TSSolver.ManualGroup  \n*Desc:* Create TSSolver Contact  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* tssolverContact (TSSOLVER_CONTACT)  \n *Arg3:* crplTarget (cursor pair list)  \n *Arg4:* crEdit (cursor)  \n *Arg5:* iColor (integer)  \n *Arg6:* iMethod (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.TSSS.ManualFace":{"prefix":"ManualFace","text":"*Name:* Connections.Contacts.TSSS.ManualFace  \n*Desc:* Create Contact TSSS Manual Face  \n *JVer:* 5.0  \n *Arg1:* crlFaceMaster (cursor list)  \n *Arg2:* crlFaceSlave (cursor list)  \n *Arg3:* strName (string)  \n *Arg4:* nastranContact (SUNSHINE_CONTACT)  \n *Arg5:* crEdit (cursor)  \n *Arg6:* iColor (integer)  \n *Arg7:* iMethod (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.TSSS.ManualGroup":{"prefix":"ManualGroup","text":"*Name:* Connections.Contacts.TSSS.ManualGroup  \n*Desc:* Create Contact TSSS Manual FaceGroup  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* tssolverContact (SUNSHINE_CONTACT)  \n *Arg3:* crplTarget (cursor pair list)  \n *Arg4:* crEdit (cursor)  \n *Arg5:* iColor (integer)  \n *Arg6:* iMethod (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.TSSS.ContactTable":{"prefix":"ContactTable","text":"*Name:* Connections.Contacts.TSSS.ContactTable  \n*Desc:* Create Contact TSSS Manual FaceGroup  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* nastranContact (SUNSHINE_CONTACT)  \n *Arg3:* crplTarget (cursor pair list)  \n *Arg4:* crEdit (cursor)  \n *Arg5:* iColor (integer)  \n *Arg6:* iMethod (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.CheckPattern":{"prefix":"CheckPattern","text":"*Name:* Connections.Contacts.CheckPattern  \n*Desc:* check contact Pattern  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* bShowMismatch (bool)  \n *Arg3:* bShowMatch (bool)  \n *Arg4:* dTol (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.NXNastranGeneral":{"prefix":"NXNastranGeneral","text":"*Name:* Connections.Contacts.NXNastranGeneral  \n*Desc:* Command use for Connections Contacts NXNastranGeneral  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iPiType (integer)  \n *Arg3:* iPiAlg (integer)  \n *Arg4:* dPdNorPenFactor (double)  \n *Arg5:* dPdTanPenFactor (double)  \n *Arg6:* dPdForceConTol (double)  \n *Arg7:* dPdMaxForceIter (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Contacts.ExportCheckReport":{"prefix":"ExportCheckReport","text":"*Name:* Connections.Contacts.ExportCheckReport  \n*Desc:* Command use for Connections Contacts ExportCheckReport  \n *JVer:* 5.0  \n *Arg1:* strFullPath (string)  \n *Arg2:* dZoomFactor (double)  \n *Arg3:* iFitBy (integer)  \n *Arg4:* iListBy (integer)  \n *Arg5:* iListOrder (integer)  \n *Arg6:* iFormat (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Gaps.TwoNodes":{"prefix":"TwoNodes","text":"*Name:* Connections.Gaps.TwoNodes  \n*Desc:* create gap connection  \n *JVer:* 5.0  \n *Arg1:* crlMaster (cursor list)  \n *Arg2:* crlSlave (cursor list)  \n *Arg3:* iMethod (integer)  \n *Arg4:* iOriMode (integer)  \n *Arg5:* crCoord (cursor)  \n *Arg6:* strName (string)  \n *Arg7:* dU0 (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Gaps.TwoEdges":{"prefix":"TwoEdges","text":"*Name:* Connections.Gaps.TwoEdges  \n*Desc:* create gap connection  \n *JVer:* 5.0  \n *Arg1:* crlMaster (cursor list)  \n *Arg2:* crlSlave (cursor list)  \n *Arg3:* iMethod (integer)  \n *Arg4:* iOriMode (integer)  \n *Arg5:* crCoord (cursor)  \n *Arg6:* strName (string)  \n *Arg7:* dU0 (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.Gaps.TwoFaces":{"prefix":"TwoFaces","text":"*Name:* Connections.Gaps.TwoFaces  \n*Desc:* create gap connection  \n *JVer:* 5.0  \n *Arg1:* crlMaster (cursor list)  \n *Arg2:* crlSlave (cursor list)  \n *Arg3:* iMethod (integer)  \n *Arg4:* iOriMode (integer)  \n *Arg5:* crCoord (cursor)  \n *Arg6:* strName (string)  \n *Arg7:* dU0 (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.MPC.Equation.MultiNodes":{"prefix":"MultiNodes","text":"*Name:* Connections.MPC.Equation.MultiNodes  \n*Desc:* Command use for Connections MPC Equation MultiNodes  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlMaster (cursor list)  \n *Arg3:* crlSlave (cursor list)  \n *Arg4:* listMpcConnection ([])  \n *Arg5:* dSearchTol (double)  \n *Arg6:* dValue (double)  \n *Arg7:* iMPCType (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.MPC.Equation.TwoFace":{"prefix":"TwoFace","text":"*Name:* Connections.MPC.Equation.TwoFace  \n*Desc:* Command use for Connections MPC Equation TwoFace  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlMaster (cursor list)  \n *Arg3:* crlSlave (cursor list)  \n *Arg4:* listMpcConnection ([])  \n *Arg5:* dSearchTol (double)  \n *Arg6:* dValue (double)  \n *Arg7:* iMPCType (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.MPC.Equation.SemiAuto":{"prefix":"SemiAuto","text":"*Name:* Connections.MPC.Equation.SemiAuto  \n*Desc:* Command use for Connections MPC Equation SemiAuto  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlMaster (cursor list)  \n *Arg3:* crlSlave (cursor list)  \n *Arg4:* listMpcConnection ([])  \n *Arg5:* dSearchTol (double)  \n *Arg6:* dValue (double)  \n *Arg7:* iMPCType (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.MPC.General.NodeToNode":{"prefix":"NodeToNode","text":"*Name:* Connections.MPC.General.NodeToNode  \n*Desc:* Command use for Connections MPC General NodeToNode  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlMaster (cursor list)  \n *Arg3:* crlSlave (cursor list)  \n *Arg4:* listMpcConnection ([])  \n *Arg5:* dSearchTol (double)  \n *Arg6:* dValue (double)  \n *Arg7:* iMPCType (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.MPC.General.NodeToEdges":{"prefix":"NodeToEdges","text":"*Name:* Connections.MPC.General.NodeToEdges  \n*Desc:* Command use for Connections MPC General NodeToEdges  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlMaster (cursor list)  \n *Arg3:* crlSlave (cursor list)  \n *Arg4:* listMpcConnection ([])  \n *Arg5:* dSearchTol (double)  \n *Arg6:* dValue (double)  \n *Arg7:* iMPCType (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.MPC.General.NodeToFaces":{"prefix":"NodeToFaces","text":"*Name:* Connections.MPC.General.NodeToFaces  \n*Desc:* Command use for Connections MPC General NodeToFaces  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlMaster (cursor list)  \n *Arg3:* crlSlave (cursor list)  \n *Arg4:* listMpcConnection ([])  \n *Arg5:* dSearchTol (double)  \n *Arg6:* dValue (double)  \n *Arg7:* iMPCType (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.MPC.General.TwoEdges":{"prefix":"TwoEdges","text":"*Name:* Connections.MPC.General.TwoEdges  \n*Desc:* Command use for Connections MPC General TwoEdges  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlMaster (cursor list)  \n *Arg3:* crlSlave (cursor list)  \n *Arg4:* listMpcConnection ([])  \n *Arg5:* dSearchTol (double)  \n *Arg6:* dValue (double)  \n *Arg7:* iMPCType (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.MPC.General.FacesToFaces":{"prefix":"FacesToFaces","text":"*Name:* Connections.MPC.General.FacesToFaces  \n*Desc:* Command use for Connections MPC General FacesToFaces  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlMaster (cursor list)  \n *Arg3:* crlSlave (cursor list)  \n *Arg4:* listMpcConnection ([])  \n *Arg5:* dSearchTol (double)  \n *Arg6:* dValue (double)  \n *Arg7:* iMPCType (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.MPC.General.NodesToNodes":{"prefix":"NodesToNodes","text":"*Name:* Connections.MPC.General.NodesToNodes  \n*Desc:* Command use for Connections MPC General NodesToNodes  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlMaster (cursor list)  \n *Arg3:* crlSlave (cursor list)  \n *Arg4:* listMpcConnection ([])  \n *Arg5:* dSearchTol (double)  \n *Arg6:* dValue (double)  \n *Arg7:* iMPCType (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.MPC.General.TwoFaces":{"prefix":"TwoFaces","text":"*Name:* Connections.MPC.General.TwoFaces  \n*Desc:* Command use for Connections MPC General TwoFaces  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlMaster (cursor list)  \n *Arg3:* crlSlave (cursor list)  \n *Arg4:* listMpcConnection ([])  \n *Arg5:* dSearchTol (double)  \n *Arg6:* dValue (double)  \n *Arg7:* iMPCType (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.MPC.General.NodeToAny":{"prefix":"NodeToAny","text":"*Name:* Connections.MPC.General.NodeToAny  \n*Desc:* Command use for Connections MPC General NodeToAny  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlMaster (cursor list)  \n *Arg3:* crlSlave (cursor list)  \n *Arg4:* listMpcConnection ([])  \n *Arg5:* dSearchTol (double)  \n *Arg6:* dValue (double)  \n *Arg7:* iMPCType (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.MPC.General.NodesWithTolerance":{"prefix":"NodesWithTolerance","text":"*Name:* Connections.MPC.General.NodesWithTolerance  \n*Desc:* Command use for Connections MPC General NodesWithTolerance  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlMaster (cursor list)  \n *Arg3:* crlSlave (cursor list)  \n *Arg4:* listMpcConnection ([])  \n *Arg5:* dSearchTol (double)  \n *Arg6:* dValue (double)  \n *Arg7:* iMPCType (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.RigidElements.RBar.OneToOne":{"prefix":"OneToOne","text":"*Name:* Connections.RigidElements.RBar.OneToOne  \n*Desc:* create RBar  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* iMethod (integer)  \n *Arg5:* iUlDOFs (integer)  \n *Arg6:* dTol (double)  \n *Arg7:* crCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.RigidElements.RBar.OneToMany":{"prefix":"OneToMany","text":"*Name:* Connections.RigidElements.RBar.OneToMany  \n*Desc:* create RBar  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* iMethod (integer)  \n *Arg5:* iUlDOFs (integer)  \n *Arg6:* dTol (double)  \n *Arg7:* crCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.RigidElements.RBar.OneToOneNodesWithTolerance":{"prefix":"OneToOneNodesWithTolerance","text":"*Name:* Connections.RigidElements.RBar.OneToOneNodesWithTolerance  \n*Desc:* create RBar  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* iMethod (integer)  \n *Arg5:* iUlDOFs (integer)  \n *Arg6:* dTol (double)  \n *Arg7:* crCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.RigidElements.RBE2.OneToMany":{"prefix":"OneToMany","text":"*Name:* Connections.RigidElements.RBE2.OneToMany  \n*Desc:* create RBE2  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* iEType (integer)  \n *Arg5:* strName (string)  \n *Arg6:* crCoordSys (cursor)  \n *Arg7:* dTolerance (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.RigidElements.RBE2.OneToOne":{"prefix":"OneToOne","text":"*Name:* Connections.RigidElements.RBE2.OneToOne  \n*Desc:* create RBE2  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* iEType (integer)  \n *Arg5:* strName (string)  \n *Arg6:* crCoordSys (cursor)  \n *Arg7:* dTolerance (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.RigidElements.RBE2.OneToOneNodesWithTolerance":{"prefix":"OneToOneNodesWithTolerance","text":"*Name:* Connections.RigidElements.RBE2.OneToOneNodesWithTolerance  \n*Desc:* create RBE2  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* iEType (integer)  \n *Arg5:* strName (string)  \n *Arg6:* crCoordSys (cursor)  \n *Arg7:* dTolerance (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.RigidElements.RBE2.ToCenter":{"prefix":"ToCenter","text":"*Name:* Connections.RigidElements.RBE2.ToCenter  \n*Desc:* create RBE2  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* iEType (integer)  \n *Arg5:* strName (string)  \n *Arg6:* crCoordSys (cursor)  \n *Arg7:* dTolerance (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.RigidElements.RBE2.ToCircleCenter":{"prefix":"ToCircleCenter","text":"*Name:* Connections.RigidElements.RBE2.ToCircleCenter  \n*Desc:* create RBE2  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* iEType (integer)  \n *Arg5:* strName (string)  \n *Arg6:* crCoordSys (cursor)  \n *Arg7:* dTolerance (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.RigidElements.RBE3.OneToMany":{"prefix":"OneToMany","text":"*Name:* Connections.RigidElements.RBE3.OneToMany  \n*Desc:* Create RBE3  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* listRbe3TermConnection ([])  \n *Arg5:* iTypeRBE3 (integer)  \n *Arg6:* strName (string)  \n *Arg7:* crCoordSys (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.RigidElements.RBE3.OneToOne":{"prefix":"OneToOne","text":"*Name:* Connections.RigidElements.RBE3.OneToOne  \n*Desc:* Create RBE3  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* listRbe3TermConnection ([])  \n *Arg5:* iTypeRBE3 (integer)  \n *Arg6:* strName (string)  \n *Arg7:* crCoordSys (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.RigidElements.RBE3.ToCenter":{"prefix":"ToCenter","text":"*Name:* Connections.RigidElements.RBE3.ToCenter  \n*Desc:* Create RBE3  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* listRbe3TermConnection ([])  \n *Arg5:* iTypeRBE3 (integer)  \n *Arg6:* strName (string)  \n *Arg7:* crCoordSys (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.RigidElements.RBE3.ToCircleCenter":{"prefix":"ToCircleCenter","text":"*Name:* Connections.RigidElements.RBE3.ToCircleCenter  \n*Desc:* Create RBE3  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* listRbe3TermConnection ([])  \n *Arg5:* iTypeRBE3 (integer)  \n *Arg6:* strName (string)  \n *Arg7:* crCoordSys (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.RigidElements.RBarGeneral":{"prefix":"RBarGeneral","text":"*Name:* Connections.RigidElements.RBarGeneral  \n*Desc:* Command use for Connections RigidElements RBarGeneral  \n *JVer:* 5.0  \n *Arg1:* rbarConnection (RBAR_CONNECTION)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* iUlDOFs (integer)  \n *Arg5:* dTol (double)  \n *Arg6:* crCoord (cursor)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Command use for Connections RigidElements RBE2General  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* iEType (integer)  \n *Arg5:* strName (string)  \n *Arg6:* crCoordSys (cursor)  \n *Arg7:* dTolerance (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Command use for Connections RigidElements RBE3General  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* listRbe3TermConnection ([])  \n *Arg5:* iTypeRBE3 (integer)  \n *Arg6:* strName (string)  \n *Arg7:* crCoordSys (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Create Damper Connection  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* strName (string)  \n *Arg3:* crlMasterTarget (cursor list)  \n *Arg4:* crlSlaveTarget (cursor list)  \n *Arg5:* crCoordSys (cursor)  \n *Arg6:* iGround (integer)  \n *Arg7:* dTolerance (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.SpringsDampers.BushGeneral":{"prefix":"BushGeneral","text":"*Name:* Connections.SpringsDampers.BushGeneral  \n*Desc:* Command use for Connections SpringsDampers BushGeneral  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* strName (string)  \n *Arg3:* crlMaster (cursor list)  \n *Arg4:* crlSlave (cursor list)  \n *Arg5:* crCoord (cursor)  \n *Arg6:* dTol (double)  \n *Arg7:* iGround (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.SpringsDampers.Bush.TwoNodes":{"prefix":"TwoNodes","text":"*Name:* Connections.SpringsDampers.Bush.TwoNodes  \n*Desc:* Create bush connection  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* strName (string)  \n *Arg3:* crlMaster (cursor list)  \n *Arg4:* crlSlave (cursor list)  \n *Arg5:* crCoord (cursor)  \n *Arg6:* dTol (double)  \n *Arg7:* iGround (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.SpringsDampers.Bush.AnyEntities":{"prefix":"AnyEntities","text":"*Name:* Connections.SpringsDampers.Bush.AnyEntities  \n*Desc:* Create bush connection  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* strName (string)  \n *Arg3:* crlMaster (cursor list)  \n *Arg4:* crlSlave (cursor list)  \n *Arg5:* crCoord (cursor)  \n *Arg6:* dTol (double)  \n *Arg7:* iGround (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.SpringsDampers.Bush.OnetoOne":{"prefix":"OnetoOne","text":"*Name:* Connections.SpringsDampers.Bush.OnetoOne  \n*Desc:* Create bush connection  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* strName (string)  \n *Arg3:* crlMaster (cursor list)  \n *Arg4:* crlSlave (cursor list)  \n *Arg5:* crCoord (cursor)  \n *Arg6:* dTol (double)  \n *Arg7:* iGround (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.SpringsDampers.Spring.GroundedSpring":{"prefix":"GroundedSpring","text":"*Name:* Connections.SpringsDampers.Spring.GroundedSpring  \n*Desc:* Grounded Spring connection  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* strName (string)  \n *Arg3:* crlMasterTarget (cursor list)  \n *Arg4:* crlSlaveTarget (cursor list)  \n *Arg5:* crCoordSys (cursor)  \n *Arg6:* iSpringType (integer)  \n *Arg7:* iGround (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.SpringsDampers.Spring.Nodeswithtolerance.sameDoFs":{"prefix":"sameDoFs","text":"*Name:* Connections.SpringsDampers.Spring.Nodeswithtolerance.sameDoFs  \n*Desc:* Spring connection Nodes with tolerance same DOFs  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* strName (string)  \n *Arg3:* crlMasterTarget (cursor list)  \n *Arg4:* crlSlaveTarget (cursor list)  \n *Arg5:* crCoordSys (cursor)  \n *Arg6:* iSpringType (integer)  \n *Arg7:* iGround (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.SpringsDampers.Spring.Nodeswithtolerance.differentDoFs":{"prefix":"differentDoFs","text":"*Name:* Connections.SpringsDampers.Spring.Nodeswithtolerance.differentDoFs  \n*Desc:* Spring connection Nodes with tolerance different DOFs  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* strName (string)  \n *Arg3:* crlMasterTarget (cursor list)  \n *Arg4:* crlSlaveTarget (cursor list)  \n *Arg5:* crCoordSys (cursor)  \n *Arg6:* iSpringType (integer)  \n *Arg7:* iGround (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.SpringsDampers.Spring.OneToOne.sameDoFs":{"prefix":"sameDoFs","text":"*Name:* Connections.SpringsDampers.Spring.OneToOne.sameDoFs  \n*Desc:* Spring connection One to One same DOFs  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* strName (string)  \n *Arg3:* crlMasterTarget (cursor list)  \n *Arg4:* crlSlaveTarget (cursor list)  \n *Arg5:* crCoordSys (cursor)  \n *Arg6:* iSpringType (integer)  \n *Arg7:* iGround (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Connections.SpringsDampers.Spring.OneToOne.differentDoFs":{"prefix":"differentDoFs","text":"*Name:* Connections.SpringsDampers.Spring.OneToOne.differentDoFs  \n*Desc:* Spring connection One to One different DOFs  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* strName (string)  \n *Arg3:* crlMasterTarget (cursor list)  \n *Arg4:* crlSlaveTarget (cursor list)  \n *Arg5:* crCoordSys (cursor)  \n *Arg6:* iSpringType (integer)  \n *Arg7:* iGround (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Designer.LBC.TemperatureLoad":{"prefix":"TemperatureLoad","text":"*Name:* Designer.LBC.TemperatureLoad  \n*Desc:* create temperature load Desiner  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iDnType (integer)  \n *Arg3:* dFTemp (double)  \n *Arg4:* strDstrFilePathName (string)  \n *Arg5:* crDcrTable (cursor)  \n *Arg6:* crlTarget (cursor list)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Designer.Load.Moment":{"prefix":"Moment","text":"*Name:* Designer.Load.Moment  \n*Desc:* Create moment  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* dlVecMomentXYZ (double list)  \n *Arg4:* crCoord (cursor)  \n *Arg5:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Designer.ContactMerge":{"prefix":"ContactMerge","text":"*Name:* Designer.ContactMerge  \n*Desc:* Build contact for designer  \n *JVer:* 5.0  \n *Arg1:* crlTarget (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Designer.Material":{"prefix":"Material","text":"*Name:* Designer.Material  \n*Desc:* Command use for Designer Material  \n *JVer:* 5.0  \n *Arg1:* strMatName (string)  \n *Arg2:* strPropName (string)  \n *Arg3:* dThickness (double)  \n *Arg4:* crlTarget (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"EngReliability.SubModelBC":{"prefix":"SubModelBC","text":"*Name:* EngReliability.SubModelBC  \n*Desc:* create mapping forced displacement  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlTarget (cursor list)  \n *Arg3:* iPos (integer)  \n *Arg4:* iViewCp (integer)  \n *Arg5:* iCp (integer)  \n *Arg6:* iSrcType (integer)  \n *Arg7:* iMappedCpIndexArr0 (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* crlPart (cursor list)  \n *Arg3:* dLayerWidth (double)  \n *Arg4:* iLayerNumber (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Bar.TwoNodes":{"prefix":"TwoNodes","text":"*Name:* Geometry.Bar.TwoNodes  \n*Desc:* Create Bar Body  \n *JVer:* 5.0  \n *Arg1:* strPartName (string)  \n *Arg2:* iMeshCount (integer)  \n *Arg3:* crStartNode (cursor)  \n *Arg4:* crEndNode (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Bar.Arc":{"prefix":"Arc","text":"*Name:* Geometry.Bar.Arc  \n*Desc:* Create Edge by spline  \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* crPart (cursor)  \n *Arg3:* strBarName (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Bar.Spline":{"prefix":"Spline","text":"*Name:* Geometry.Bar.Spline  \n*Desc:* Create Edge by spline  \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* crPart (cursor)  \n *Arg3:* strBarName (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.BodyCut.XXYYOnOnePoint":{"prefix":"XXYYOnOnePoint","text":"*Name:* Geometry.BodyCut.XXYYOnOnePoint  \n*Desc:* Cut body by one point  \n *JVer:* 5.0  \n *Arg1:* crPart (cursor)  \n *Arg2:* posCutPos (position)  \n *Arg3:* iType (integer)  \n *Arg4:* dOffset (double)  \n *Arg5:* bSplit (bool)  \n *Arg6:* bSectionFace (bool)  \n *Arg7:* bShateFace (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.BodyCut.BySurface":{"prefix":"BySurface","text":"*Name:* Geometry.BodyCut.BySurface  \n*Desc:* Cut body by surface  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crCutter (cursor)  \n *Arg3:* bSplitOnly (bool)  \n *Arg4:* bMakeSectionFace (bool)  \n *Arg5:* bShareFace (bool)  \n *Arg6:* bSeparateFace (bool)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Body Cut by 3 Points  \n *JVer:* 5.0  \n *Arg1:* crPart (cursor)  \n *Arg2:* poslPosition (position list)  \n *Arg3:* dOffset (double)  \n *Arg4:* bSplitonly (bool)  \n *Arg5:* bMakesectionface (bool)  \n *Arg6:* bShareface (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.BreakEntity.StlPart":{"prefix":"StlPart","text":"*Name:* Geometry.BreakEntity.StlPart  \n*Desc:* break STL part  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* iMinNoOfFaces (integer)  \n *Arg3:* iMethod (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.BreakEntity.Face":{"prefix":"Face","text":"*Name:* Geometry.BreakEntity.Face  \n*Desc:* break entity for face  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.BreakEntity.Edge":{"prefix":"Edge","text":"*Name:* Geometry.BreakEntity.Edge  \n*Desc:* Break selected edge  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* crlEdge (cursor list)  \n *Arg4:* crlNode (cursor list)  \n *Arg5:* bAutoByAngle (bool)  \n *Arg6:* dEdgeAngle (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.BreakEntity.Part":{"prefix":"Part","text":"*Name:* Geometry.BreakEntity.Part  \n*Desc:* Separate Part  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.DeleteEntity.Part":{"prefix":"Part","text":"*Name:* Geometry.DeleteEntity.Part  \n*Desc:* Delete Part  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.DeleteEntity.Edge":{"prefix":"Edge","text":"*Name:* Geometry.DeleteEntity.Edge  \n*Desc:* Delete Edge  \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.DeleteEntity.Vertex":{"prefix":"Vertex","text":"*Name:* Geometry.DeleteEntity.Vertex  \n*Desc:* delete vertex  \n *JVer:* 5.0  \n *Arg1:* crlVertex (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.DeleteEntity.Face":{"prefix":"Face","text":"*Name:* Geometry.DeleteEntity.Face  \n*Desc:* Delete Face  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* bKeepSolid (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.Line":{"prefix":"Line","text":"*Name:* Geometry.Edge.Line  \n*Desc:* Imprint line 2 point  \n *JVer:* 5.0  \n *Arg1:* poslPositions (position list)  \n *Arg2:* crlTargetFace (cursor list)  \n *Arg3:* bBreakFace (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.Spline":{"prefix":"Spline","text":"*Name:* Geometry.Edge.Spline  \n*Desc:* Imprint a Spline on a face  \n *JVer:* 5.0  \n *Arg1:* veclAprroxiPositions (vector list)  \n *Arg2:* crlTargetFace (cursor list)  \n *Arg3:* bBreakFace (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.PlanarLine":{"prefix":"PlanarLine","text":"*Name:* Geometry.Edge.PlanarLine  \n*Desc:* Imprint Planar Line  \n *JVer:* 5.0  \n *Arg1:* veclPosition (vector list)  \n *Arg2:* crlTargetFace (cursor list)  \n *Arg3:* crLocalCoord (cursor)  \n *Arg4:* iType (integer)  \n *Arg5:* bBreakFace (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.Circle":{"prefix":"Circle","text":"*Name:* Geometry.Edge.Circle  \n*Desc:* Imprint Cirlcle Line S  \n *JVer:* 5.0  \n *Arg1:* veclPositions (vector list)  \n *Arg2:* crlTargetFace (cursor list)  \n *Arg3:* dInRadius (double)  \n *Arg4:* dOutRadius (double)  \n *Arg5:* iNoOfLayer (integer)  \n *Arg6:* iNoOfDiv (integer)  \n *Arg7:* bBreakFace (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.PerpendicularLineOfEdge":{"prefix":"PerpendicularLineOfEdge","text":"*Name:* Geometry.Edge.PerpendicularLineOfEdge  \n*Desc:* Imprint the perpendicular line of edge  \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* dOffset (double)  \n *Arg4:* bReakFace (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.ExtendLine":{"prefix":"ExtendLine","text":"*Name:* Geometry.Edge.ExtendLine  \n*Desc:* make edge by extend line  \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Arg2:* iMethod (integer)  \n *Arg3:* iEnd (integer)  \n *Arg4:* iNoFittingPoints (integer)  \n *Arg5:* iDiv (integer)  \n *Arg6:* iEnableBreakFace (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.ElementEdges":{"prefix":"ElementEdges","text":"*Name:* Geometry.Edge.ElementEdges  \n*Desc:* Create Edge by element edges  \n *JVer:* 5.0  \n *Arg1:* crplElemEdge (cursor pair list)  \n *Arg2:* bBreakEdge (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.Angle":{"prefix":"Angle","text":"*Name:* Geometry.Edge.Angle  \n*Desc:* create new adge by convert angle  \n *JVer:* 5.0  \n *Arg1:* crpPair (cursor pair)  \n *Arg2:* dAngle (double)  \n *Arg3:* bCurvature (bool)  \n *Arg4:* bBreakFace (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.NodeShortestPath":{"prefix":"NodeShortestPath","text":"*Name:* Geometry.Edge.NodeShortestPath  \n*Desc:* create edge by 2 nodes shortest path  \n *JVer:* 5.0  \n *Arg1:* crFirstNode (cursor)  \n *Arg2:* crSecondNode (cursor)  \n *Arg3:* iEnableBreakFace (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.OffsetLine":{"prefix":"OffsetLine","text":"*Name:* Geometry.Edge.OffsetLine  \n*Desc:* Imprint geometry edge offset line  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* crlEdge (cursor list)  \n *Arg3:* bBreakFace (bool)  \n *Arg4:* dOffsetDistance (double)  \n *Arg5:* iNumberLayer (integer)  \n *Arg6:* bMerge (bool)  \n *Arg7:* bExtend (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.SplineFreeEdges":{"prefix":"SplineFreeEdges","text":"*Name:* Geometry.Edge.SplineFreeEdges  \n*Desc:* Create Edge by spline  \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* iEnableArc (integer)  \n *Arg3:* crPart (cursor)  \n *Arg4:* strBarName (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.ClosedLine":{"prefix":"ClosedLine","text":"*Name:* Geometry.Edge.ClosedLine  \n*Desc:* imprint closed line  \n *JVer:* 5.0  \n *Arg1:* veclPositions (vector list)  \n *Arg2:* crlTargetFace (cursor list)  \n *Arg3:* iEnableBreakFace (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.PerpendicularCylinderLine":{"prefix":"PerpendicularCylinderLine","text":"*Name:* Geometry.Edge.PerpendicularCylinderLine  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* iMethod (integer)  \n *Arg4:* dOffset (double)  \n *Arg5:* bOppositeSide (bool)  \n *Arg6:* bBreakFace (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.IntersectionLine":{"prefix":"IntersectionLine","text":"*Name:* Geometry.Edge.IntersectionLine  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlFaces (cursor list)  \n *Arg2:* bBreakFace (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.ProjectLine":{"prefix":"ProjectLine","text":"*Name:* Geometry.Edge.ProjectLine  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Arg2:* crlFaces (cursor list)  \n *Arg3:* crlNode (cursor list)  \n *Arg4:* bBreakFace (bool)  \n *Arg5:* iType (integer)  \n *Arg6:* bCheckGap (bool)  \n *Arg7:* dGap (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Edge.PerpendicularLineToEdge":{"prefix":"PerpendicularLineToEdge","text":"*Name:* Geometry.Edge.PerpendicularLineToEdge  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crNode (cursor)  \n *Arg2:* crEdge (cursor)  \n *Arg3:* crlFace (cursor list)  \n *Arg4:* bBreakFace (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Extract.FindFeatureFillet":{"prefix":"FindFeatureFillet","text":"*Name:* Geometry.Extract.FindFeatureFillet  \n*Desc:* Command use for Geometry Extract FindFeatureFillet  \n *JVer:* 5.0  \n *Arg1:* body ([])  \n *Arg2:* face ([])  \n *Arg3:* minAngle ([])  \n *Arg4:* maxAngle ([])  \n *Arg5:* minFaceWidth ([])  \n *Arg6:* maxFaceWidth ([])  \n *Arg7:* minCurveRadius ([])  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.ExtractSurfaces.ExtractRefSurface":{"prefix":"ExtractRefSurface","text":"*Name:* Geometry.ExtractSurfaces.ExtractRefSurface  \n*Desc:* Command use for Geometry ExtractSurfaces ExtractRefSurface  \n *JVer:* 5.0  \n *Arg1:* listFace ([])  \n *Arg2:* dAngle (double)  \n *Arg3:* strName (string)  \n *Arg4:* isMergePart (False)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.ExtractSurfaces.ExtractSurfaces":{"prefix":"ExtractSurfaces","text":"*Name:* Geometry.ExtractSurfaces.ExtractSurfaces  \n*Desc:* Command use for Geometry ExtractSurfaces  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* dAngle (double)  \n *Arg3:* strName (string)  \n *Arg4:* bMergePart (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Face.FourEdges":{"prefix":"FourEdges","text":"*Name:* Geometry.Face.FourEdges  \n*Desc:* Create face by four edges  \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Face.FromMesh":{"prefix":"FromMesh","text":"*Name:* Geometry.Face.FromMesh  \n*Desc:* Create geometry face from mesh face  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Face.CreateSmoothFace":{"prefix":"CreateSmoothFace","text":"*Name:* Geometry.Face.CreateSmoothFace  \n*Desc:* Geometry Face CreateSmoothFace  \n *JVer:* 5.0  \n *Arg1:* bInterPoration (bool)  \n *Arg2:* crlTarget (cursor list)  \n *Arg3:* iElemGeneration (integer)  \n *Arg4:* dGradation (double)  \n *Arg5:* iEnableFaceSmooth (integer)  \n *Arg6:* crTargetPart (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Face.Edges":{"prefix":"Edges","text":"*Name:* Geometry.Face.Edges  \n*Desc:* Create Face From Edges  \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Arg2:* crlPart (cursor list)  \n *Arg3:* crlNode (cursor list)  \n *Arg4:* bSharedFace (bool)  \n *Arg5:* bSmoothFace (bool)  \n *Arg6:* bCreatePart (bool)  \n *Arg7:* bImproved (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Face.Elements":{"prefix":"Elements","text":"*Name:* Geometry.Face.Elements  \n*Desc:* Create Face By Elements  \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Arg2:* bShareFace (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.FindFeature.DelCircChamfer":{"prefix":"DelCircChamfer","text":"*Name:* Geometry.FindFeature.DelCircChamfer  \n*Desc:* Delete Circ Chamfer  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* dMaxThick (double)  \n *Arg3:* dMinThick (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.FindFeature.Fillet":{"prefix":"Fillet","text":"*Name:* Geometry.FindFeature.Fillet  \n*Desc:* Find feature in part by typical description  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* dMinAngle (double)  \n *Arg4:* dMaxAngle (double)  \n *Arg5:* dMinFaceWidth (double)  \n *Arg6:* dMaxFaceWidth (double)  \n *Arg7:* dMinCurveRadius (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.FindFeature.Faces":{"prefix":"Faces","text":"*Name:* Geometry.FindFeature.Faces  \n*Desc:* Command use for Geometry FindFeature Faces  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlEdge (cursor list)  \n *Arg3:* bCylinder (bool)  \n *Arg4:* bDisc (bool)  \n *Arg5:* bFourCorners (bool)  \n *Arg6:* dMinThickness (double)  \n *Arg7:* dMaxThickness (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.FindFeature.Edges":{"prefix":"Edges","text":"*Name:* Geometry.FindFeature.Edges  \n*Desc:* Command use for Geometry FindFeature Edges  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlEdge (cursor list)  \n *Arg3:* bCylinder (bool)  \n *Arg4:* bDisc (bool)  \n *Arg5:* bFourCorners (bool)  \n *Arg6:* dMinThickness (double)  \n *Arg7:* dMaxThickness (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.MergeEntities.Faces":{"prefix":"Faces","text":"*Name:* Geometry.MergeEntities.Faces  \n*Desc:* Merge faces  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* bMergeEdge (bool)  \n *Arg3:* bRemoveNonBoundEdge (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.MergeEntities.TinyFacesMerge":{"prefix":"TinyFacesMerge","text":"*Name:* Geometry.MergeEntities.TinyFacesMerge  \n*Desc:* merge tiny faces  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* dMinFaceWidth (double)  \n *Arg4:* dMaxFaceWidth (double)  \n *Arg5:* dFaceAngle (double)  \n *Arg6:* bReferLocalSetting (bool)  \n *Arg7:* bConnectFace (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.MergeEntities.CBarParts":{"prefix":"CBarParts","text":"*Name:* Geometry.MergeEntities.CBarParts  \n*Desc:* Merge CBar Parts  \n *JVer:* 5.0  \n *Arg1:* crlCBarPart (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.MergeEntities.Edges":{"prefix":"Edges","text":"*Name:* Geometry.MergeEntities.Edges  \n*Desc:* Merge Edge  \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.MergeEntities.Parts":{"prefix":"Parts","text":"*Name:* Geometry.MergeEntities.Parts  \n*Desc:* Merge Part  \n *JVer:* 5.0  \n *Arg1:* dTolerance (double)  \n *Arg2:* bRemovesharefaceflag (bool)  \n *Arg3:* crlPart (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.MergeEntities.PartFaces":{"prefix":"PartFaces","text":"*Name:* Geometry.MergeEntities.PartFaces  \n*Desc:* Merge by Part Faces  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* bAngle (bool)  \n *Arg4:* dTolAngle (double)  \n *Arg5:* bWidth (bool)  \n *Arg6:* dTolWidth (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Part.Cube":{"prefix":"Cube","text":"*Name:* Geometry.Part.Cube  \n*Desc:* create cube part  \n *JVer:* 5.0  \n *Arg1:* dlOrigin (double list)  \n *Arg2:* 0 ([])  \n *Arg3:* 0 ([]])  \n *Arg4:* dlLength (double list)  \n *Arg5:* 0 ([].0)  \n *Arg6:* 0 ([].0)  \n *Arg7:* ilNodeCnt (int list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Part.Wedge":{"prefix":"Wedge","text":"*Name:* Geometry.Part.Wedge  \n*Desc:* Create Wedge Body  \n *JVer:* 5.0  \n *Arg1:* vecOrigin (vector)  \n *Arg2:* 0.0 ([])  \n *Arg3:* 0.0 ([]])  \n *Arg4:* vecLength (vector)  \n *Arg5:* 0.0 ([]1)  \n *Arg6:* 0.0 ([]1])  \n *Arg7:* vecNodeCount (vector)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Part.Sphere":{"prefix":"Sphere","text":"*Name:* Geometry.Part.Sphere  \n*Desc:* create Sphere part  \n *JVer:* 5.0  \n *Arg1:* dlOrigin (double list)  \n *Arg2:* 0 ([])  \n *Arg3:* 0 ([]])  \n *Arg4:* dRadius (double)  \n *Arg5:* iLatitudeNodeCnt (integer)  \n *Arg6:* iLongitudeNodeCnt (integer)  \n *Arg7:* strPartName (string)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Part.Torus":{"prefix":"Torus","text":"*Name:* Geometry.Part.Torus  \n*Desc:* create Torus part  \n *JVer:* 5.0  \n *Arg1:* dlOrigin (double list)  \n *Arg2:* 0 ([])  \n *Arg3:* 0 ([]])  \n *Arg4:* dInnerRadius (double)  \n *Arg5:* dRingRadius (double)  \n *Arg6:* iLatitudeNodeCnt (integer)  \n *Arg7:* iLongitudeNodeCnt (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Part.Elems":{"prefix":"Elems","text":"*Name:* Geometry.Part.Elems  \n*Desc:* create part from element  \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Arg2:* strPartName (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Part.Cylinder":{"prefix":"Cylinder","text":"*Name:* Geometry.Part.Cylinder  \n*Desc:* create cylinder part  \n *JVer:* 5.0  \n *Arg1:* dlOrigin (double list)  \n *Arg2:* dTopRadius (double)  \n *Arg3:* dBotRadius (double)  \n *Arg4:* dHeight (double)  \n *Arg5:* iCircleNodeCnt (integer)  \n *Arg6:* iAxisNodeCnt (integer)  \n *Arg7:* strName (string)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Part.Tube":{"prefix":"Tube","text":"*Name:* Geometry.Part.Tube  \n*Desc:* create tube part  \n *JVer:* 5.0  \n *Arg1:* dlOrigin (double list)  \n *Arg2:* dTopInnerRadius (double)  \n *Arg3:* dTopOuterRadius (double)  \n *Arg4:* dBotInnerRadius (double)  \n *Arg5:* dBotOuterRadius (double)  \n *Arg6:* dHeight (double)  \n *Arg7:* iCircleNodeCnt (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Part.Trapezoid":{"prefix":"Trapezoid","text":"*Name:* Geometry.Part.Trapezoid  \n*Desc:* Create trapezoid part  \n *JVer:* 5.0  \n *Arg1:* dlOrigin (double list)  \n *Arg2:* dlLength (double list)  \n *Arg3:* 0.01 ([])  \n *Arg4:* 0.01 ([]])  \n *Arg5:* dTopXLength (double)  \n *Arg6:* dRadius (double)  \n *Arg7:* ilNodeCnt (int list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Part.Cone":{"prefix":"Cone","text":"*Name:* Geometry.Part.Cone  \n*Desc:* Create Cone Body  \n *JVer:* 5.0  \n *Arg1:* dlOriginXyz (double list)  \n *Arg2:* dBottomRadius (double)  \n *Arg3:* dHeight (double)  \n *Arg4:* iCircleNodeCount (integer)  \n *Arg5:* iAxisNodeCnt (integer)  \n *Arg6:* strPartName (string)  \n *Arg7:* iPartColor (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.ShowAdjacent.Faces":{"prefix":"Faces","text":"*Name:* Geometry.ShowAdjacent.Faces  \n*Desc:* Command use for Geometry ShowAdjacent Faces  \n *JVer:* 5.0  \n *Arg1:* Angle (0.0)  \n *Arg2:* IncludeStopFace (0)  \n *Arg3:* Layer (1,IsPreview)  \n *Arg4:* taStartFaceCr ([] ,taStopFaceCr)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.ShowAdjacent.Elements":{"prefix":"Elements","text":"*Name:* Geometry.ShowAdjacent.Elements  \n*Desc:* Command use for Geometry ShowAdjacent Elements  \n *JVer:* 5.0  \n *Arg1:* Angle (0.0)  \n *Arg2:* IncludeStopElem (0)  \n *Arg3:* Layer (1,IsPreview)  \n *Arg4:* taStartElemCr ([] ,taStopElemCr)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Transform.Rotation":{"prefix":"Rotation","text":"*Name:* Geometry.Transform.Rotation  \n*Desc:* Rotate the selected Part.  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* posCenter (position)  \n *Arg3:* vecAxis (vector)  \n *Arg4:* dAngle (double)  \n *Arg5:* bCreateNewPart (bool)  \n *Arg6:* bCopyLBC (bool)  \n *Arg7:* bCopyProperty (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Transform.Scaling":{"prefix":"Scaling","text":"*Name:* Geometry.Transform.Scaling  \n*Desc:* Scale Body  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* dlScaleVector (double list)  \n *Arg3:* dlScaleCentre (double list)  \n *Arg4:* crCoordinate (cursor)  \n *Arg5:* bCreateNew (bool)  \n *Arg6:* bCopyLbc (bool)  \n *Arg7:* bCopyProperty (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Transform.Mirror":{"prefix":"Mirror","text":"*Name:* Geometry.Transform.Mirror  \n*Desc:* mirror body  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* veclPoint (vector list)  \n *Arg3:* 0.0 ([])  \n *Arg4:* 0.0 ([]]])  \n *Arg5:* dOffset (double)  \n *Arg6:* bCreateNewPart (bool)  \n *Arg7:* bCopyLBC (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Transform.Position":{"prefix":"Position","text":"*Name:* Geometry.Transform.Position  \n*Desc:* transform position  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* veclPoint (vector list)  \n *Arg3:* 0.0 ([])  \n *Arg4:* 0.0 ([]]])  \n *Arg5:* bCreateNewPart (bool)  \n *Arg6:* bCopyLBC (bool)  \n *Arg7:* bCopyProperty (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Transform.Translation":{"prefix":"Translation","text":"*Name:* Geometry.Transform.Translation  \n*Desc:* Translate the selected Part.  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* poslTranslates (position list)  \n *Arg3:* crCoord (cursor)  \n *Arg4:* bCreateNewPart (bool)  \n *Arg5:* bCopyLBC (bool)  \n *Arg6:* bCopyProperty (bool)  \n *Arg7:* iCopyCount (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Transform.MatingFace":{"prefix":"MatingFace","text":"*Name:* Geometry.Transform.MatingFace  \n*Desc:* Transform MatingFace  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crSrcFace (cursor)  \n *Arg3:* crDstFace (cursor)  \n *Arg4:* crSrcEdge (cursor)  \n *Arg5:* crDstEdge (cursor)  \n *Arg6:* crSrcNode (cursor)  \n *Arg7:* crDstNode (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.Transform.CylinderFace":{"prefix":"CylinderFace","text":"*Name:* Geometry.Transform.CylinderFace  \n*Desc:* transform position  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* veclPoint (vector list)  \n *Arg3:* 0.0 ([])  \n *Arg4:* 0.0 ([]]])  \n *Arg5:* bCreateNewPart (bool)  \n *Arg6:* bCopyLBC (bool)  \n *Arg7:* bCopyProperty (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.CADTrim":{"prefix":"CADTrim","text":"*Name:* Geometry.CADTrim  \n*Desc:* CAD Trim  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* crlPart (cursor list)  \n *Arg3:* dTrimSize (double)  \n *Arg4:* dTrimAngle (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.StitchEdge":{"prefix":"StitchEdge","text":"*Name:* Geometry.StitchEdge  \n*Desc:* Stitch Edges  \n *JVer:* 5.0  \n *Arg1:* dTolerance (double)  \n *Arg2:* bKeepSlave (bool)  \n *Arg3:* crlMaster (cursor list)  \n *Arg4:* crlSlave (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.LogoRemoval":{"prefix":"LogoRemoval","text":"*Name:* Geometry.LogoRemoval  \n*Desc:* Create Face From Edges  \n *JVer:* 5.0  \n *Arg1:* crlStartFaces (cursor list)  \n *Arg2:* crlStopFaces (cursor list)  \n *Arg3:* iLayers (integer)  \n *Arg4:* bMergeFaces (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.ShellAsm":{"prefix":"ShellAsm","text":"*Name:* Geometry.ShellAsm  \n*Desc:* assemble the separated parts  \n *JVer:* 5.0  \n *Arg1:* crlPartK (cursor list)  \n *Arg2:* crlFaceK (cursor list)  \n *Arg3:* dTol (double)  \n *Arg4:* iElemType (integer)  \n *Arg5:* bSkipTiny (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.SquareUpFillet":{"prefix":"SquareUpFillet","text":"*Name:* Geometry.SquareUpFillet  \n*Desc:* Square Up Fillet  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.MakeFillet":{"prefix":"MakeFillet","text":"*Name:* Geometry.MakeFillet  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Arg2:* dRadius (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.MakeFacePlanar":{"prefix":"MakeFacePlanar","text":"*Name:* Geometry.MakeFacePlanar  \n*Desc:* Make planar faces by given plane points  \n *JVer:* 5.0  \n *Arg1:* dlPlanePt1 (double list)  \n *Arg2:* dlPlanePt2 (double list)  \n *Arg3:* dlPlanePt3 (double list)  \n *Arg4:* ilFaceIds (int list)  \n *Arg5:* iMergeFace (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.FCircleAdjustVertex":{"prefix":"FCircleAdjustVertex","text":"*Name:* Geometry.FCircleAdjustVertex  \n*Desc:* adjust vertex in circle  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.AdjustHalfCylinder":{"prefix":"AdjustHalfCylinder","text":"*Name:* Geometry.AdjustHalfCylinder  \n*Desc:* Adjust half cylinder  \n *JVer:* 5.0  \n *Arg1:* poslPoint (position list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* crCoord (cursor)  \n *Arg4:* iAxisPlane (integer)  \n *Arg5:* bDivideFace (bool)  \n *Arg6:* crlPart (cursor list)  \n *Arg7:* bMergeEdge (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.FCircVertexAdjust":{"prefix":"FCircVertexAdjust","text":"*Name:* Geometry.FCircVertexAdjust  \n*Desc:* FCirc Vertex Adjust  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* dMinRadius (double)  \n *Arg3:* bFullCylinder (bool)  \n *Arg4:* bCylinderMorethan90 (bool)  \n *Arg5:* bSkipFaceHaveLocalSetting (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.ExtractSurfaces":{"prefix":"ExtractSurfaces","text":"*Name:* Geometry.ExtractSurfaces  \n*Desc:* Extract Reference Surfaces  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* dAngle (double)  \n *Arg3:* strName (string)  \n *Arg4:* bMergePart (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.RemoveRibBoss":{"prefix":"RemoveRibBoss","text":"*Name:* Geometry.RemoveRibBoss  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* dGradiation (double)  \n *Arg3:* iContinuity (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.AdvancedShellAssembly":{"prefix":"AdvancedShellAssembly","text":"*Name:* Geometry.AdvancedShellAssembly  \n*Desc:* Test shell assembly  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* iMeshType (integer)  \n *Arg4:* bSelfIntersection (bool)  \n *Arg5:* iMethod (integer)  \n *Arg6:* dGapTol (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Geometry.ExtractRefSurface":{"prefix":"ExtractRefSurface","text":"*Name:* Geometry.ExtractRefSurface  \n*Desc:* Command use for Geometry ExtractRefSurface  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* dAngle (double)  \n *Arg3:* strName (string)  \n *Arg4:* bMergePart (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Groups.RightClick.PropertyGroup":{"prefix":"PropertyGroup","text":"*Name:* Groups.RightClick.PropertyGroup  \n*Desc:* create group of properties  \n *JVer:* 5.0  \n *Arg1:* strTmp (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Groups.RightClick.Rename":{"prefix":"Rename","text":"*Name:* Groups.RightClick.Rename  \n*Desc:* Command use for Groups RightClick Rename  \n *JVer:* 5.0  \n *Arg1:* strNewName (string)  \n *Arg2:* crItem (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Groups.RightClick.DeleteGroup":{"prefix":"DeleteGroup","text":"*Name:* Groups.RightClick.DeleteGroup  \n*Desc:* Delete Group  \n *JVer:* 5.0  \n *Arg1:* crlDelGroup (cursor list)  \n *Arg2:* bRemoveAll (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Groups.RightClick.CopyGroup":{"prefix":"CopyGroup","text":"*Name:* Groups.RightClick.CopyGroup  \n*Desc:* Copy Group  \n *JVer:* 5.0  \n *Arg1:* crlSrc (cursor list)  \n *Arg2:* strlNames (string list)  \n *Arg3:* crDest (cursor)  \n *Arg4:* bKeep (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Groups.RightClick.AddSupGroup":{"prefix":"AddSupGroup","text":"*Name:* Groups.RightClick.AddSupGroup  \n*Desc:* Add supper group  \n *JVer:* 5.0  \n *Arg1:* crSupGroupSelected (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Groups.RightClick.CreateMatGroup":{"prefix":"CreateMatGroup","text":"*Name:* Groups.RightClick.CreateMatGroup  \n*Desc:* Command use for Groups RightClick CreateMatGroup  \n *JVer:* 5.0  \n *Arg1:* strTmp (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.Sweep.Circular":{"prefix":"Circular","text":"*Name:* HexModeling.Sweep.Circular  \n*Desc:* Command use for HexModeling Sweep Circular  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* dAngle (double)  \n *Arg3:* dTol (double)  \n *Arg4:* iLayer (integer)  \n *Arg5:* vecAxisPt (vector)  \n *Arg6:* vecAxisVect (vector)  \n *Arg7:* bInterfaceElem (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.Sweep.FaceToFace":{"prefix":"FaceToFace","text":"*Name:* HexModeling.Sweep.FaceToFace  \n*Desc:* Command use for HexModeling Sweep FaceToFace  \n *JVer:* 5.0  \n *Arg1:* crSrcFace (cursor)  \n *Arg2:* crDstFace (cursor)  \n *Arg3:* bDeleteOriginalParts (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.Sweep.Layer":{"prefix":"Layer","text":"*Name:* HexModeling.Sweep.Layer  \n*Desc:* Command use for HexModeling Sweep Layer  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* dFrontWidth (double)  \n *Arg3:* dBackWidth (double)  \n *Arg4:* iFrontLayers (integer)  \n *Arg5:* iBackLayers (integer)  \n *Arg6:* iBaseFaceType (integer)  \n *Arg7:* iSeparate (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.Sweep.Linear":{"prefix":"Linear","text":"*Name:* HexModeling.Sweep.Linear  \n*Desc:* Command use for HexModeling Sweep Linear  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* dLength (double)  \n *Arg3:* iLayer (integer)  \n *Arg4:* dlSweepDirection (double list)  \n *Arg5:* bInterfaceElemFlag (bool)  \n *Arg6:* iLinearMethod (integer)  \n *Arg7:* bDeleteOriginalParts (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.Sweep.Curve":{"prefix":"Curve","text":"*Name:* HexModeling.Sweep.Curve  \n*Desc:* Command use for HexModeling Sweep Curve  \n *JVer:* 5.0  \n *Arg1:* crFace (cursor)  \n *Arg2:* crlEdge (cursor list)  \n *Arg3:* crlRefEdge (cursor list)  \n *Arg4:* dMeshSize (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.Sweep.FromMidPlane":{"prefix":"FromMidPlane","text":"*Name:* HexModeling.Sweep.FromMidPlane  \n*Desc:* Command use for HexModeling Sweep FromMidPlane  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* bRef (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.SolidElemInterface":{"prefix":"SolidElemInterface","text":"*Name:* HexModeling.SolidElemInterface  \n*Desc:* make solid elem interface  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* bFlip (bool)  \n *Arg3:* crlElms (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.BallHexa":{"prefix":"BallHexa","text":"*Name:* HexModeling.BallHexa  \n*Desc:* hexa modeling ball hexa  \n *JVer:* 5.0  \n *Arg1:* crPart (cursor)  \n *Arg2:* vecCenter (vector)  \n *Arg3:* dRadius (double)  \n *Arg4:* dMeshSize (double)  \n *Arg5:* iType (integer)  \n *Arg6:* iLayer (integer)  \n *Arg7:* bMakeCenterNode (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.BoxMesh":{"prefix":"BoxMesh","text":"*Name:* HexModeling.BoxMesh  \n*Desc:* Box hex mesh creator for parts  \n *JVer:* 5.0  \n *Arg1:* ilPartIds (int list)  \n *Arg2:* dMeshSize (double)  \n *Arg3:* strMaterialName (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.AutoSweep":{"prefix":"AutoSweep","text":"*Name:* HexModeling.AutoSweep  \n*Desc:* Hex Modeling Auto Sweep  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* dMeshSize (double)  \n *Arg3:* bLayers (bool)  \n *Arg4:* iLayers (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.Circular":{"prefix":"Circular","text":"*Name:* HexModeling.Circular  \n*Desc:* create Hexa mesh by revolving a surface  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* dAngle (double)  \n *Arg3:* dTol (double)  \n *Arg4:* iLayer (integer)  \n *Arg5:* vecAxisPt (vector)  \n *Arg6:* vecAxisVect (vector)  \n *Arg7:* bInterfaceElem (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.FaceToFace":{"prefix":"FaceToFace","text":"*Name:* HexModeling.FaceToFace  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crSrcFace (cursor)  \n *Arg2:* crDstFace (cursor)  \n *Arg3:* bDeleteOriginalParts (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.Layer":{"prefix":"Layer","text":"*Name:* HexModeling.Layer  \n*Desc:* sweep by layer  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* dFrontWidth (double)  \n *Arg3:* dBackWidth (double)  \n *Arg4:* iFrontLayers (integer)  \n *Arg5:* iBackLayers (integer)  \n *Arg6:* iBaseFaceType (integer)  \n *Arg7:* iSeparate (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.Linear":{"prefix":"Linear","text":"*Name:* HexModeling.Linear  \n*Desc:* Linear hex mesh creation  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* dLength (double)  \n *Arg3:* iLayer (integer)  \n *Arg4:* vecSweepDirection (vector)  \n *Arg5:* bInterfaceElemFlag (bool)  \n *Arg6:* iLinearMethod (integer)  \n *Arg7:* bDeleteOriginalParts (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.FromMidPlane":{"prefix":"FromMidPlane","text":"*Name:* HexModeling.FromMidPlane  \n*Desc:* HexModeling From MidPlane  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* bRef (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"HexModeling.Curve":{"prefix":"Curve","text":"*Name:* HexModeling.Curve  \n*Desc:* make hex by sweeping curve  \n *JVer:* 5.0  \n *Arg1:* crFace (cursor)  \n *Arg2:* crlEdge (cursor list)  \n *Arg3:* crlRefEdge (cursor list)  \n *Arg4:* dMeshSize (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.ImportCAD.Elysium":{"prefix":"Elysium","text":"*Name:* Home.ImportCAD.Elysium  \n*Desc:* import elysium  \n *JVer:* 5.0  \n *Arg1:* strlPath (string list)  \n *Arg2:* dChordHeightTolerance (double)  \n *Arg3:* dAngleToleranceDegree (double)  \n *Arg4:* dPointCoincidentTolerance (double)  \n *Arg5:* iConvertIsolatedCurve (integer)  \n *Arg6:* iDekCleanselfintersectingloop (integer)  \n *Arg7:* iDekVolumetopart (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.ImportCAD.Spatial":{"prefix":"Spatial","text":"*Name:* Home.ImportCAD.Spatial  \n*Desc:* import CAD by Spatial  \n *JVer:* 5.0  \n *Arg1:* strlPath (string list)  \n *Arg2:* dSurfacePlaneTolerance (double)  \n *Arg3:* dSufacePlaneAngle (double)  \n *Arg4:* dMaxFacetWidth (double)  \n *Arg5:* bNXMultipart (bool)  \n *Arg6:* bHealing (bool)  \n *Arg7:* bIsNXDirect (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.ImportCAD.Parasolid":{"prefix":"Parasolid","text":"*Name:* Home.ImportCAD.Parasolid  \n*Desc:* Import Parasolid  \n *JVer:* 5.0  \n *Arg1:* strlFiles (string list)  \n *Arg2:* dChordHeightTolerance (double)  \n *Arg3:* dAngleToleranceDegree (double)  \n *Arg4:* iConvertIsolatedCurve (integer)  \n *Arg5:* dSurfacePlaneTolerance (double)  \n *Arg6:* dSufacePlaneAngle (double)  \n *Arg7:* dMaxFacetWidth (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.ImportCAD.STL":{"prefix":"STL","text":"*Name:* Home.ImportCAD.STL  \n*Desc:* Import STL  \n *JVer:* 5.0  \n *Arg1:* strlFiles (string list)  \n *Arg2:* dChordHeightTolerance (double)  \n *Arg3:* dAngleToleranceDegree (double)  \n *Arg4:* iConvertIsolatedCurve (integer)  \n *Arg5:* dSurfacePlaneTolerance (double)  \n *Arg6:* dSufacePlaneAngle (double)  \n *Arg7:* dMaxFacetWidth (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.ImportCAD.VRML":{"prefix":"VRML","text":"*Name:* Home.ImportCAD.VRML  \n*Desc:* Import VRML  \n *JVer:* 5.0  \n *Arg1:* strlFiles (string list)  \n *Arg2:* dChordHeightTolerance (double)  \n *Arg3:* dAngleToleranceDegree (double)  \n *Arg4:* iConvertIsolatedCurve (integer)  \n *Arg5:* dSurfacePlaneTolerance (double)  \n *Arg6:* dSufacePlaneAngle (double)  \n *Arg7:* dMaxFacetWidth (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.ImportCAD.ProECreoDirect":{"prefix":"ProECreoDirect","text":"*Name:* Home.ImportCAD.ProECreoDirect  \n*Desc:* import Creo by Direct  \n *JVer:* 5.0  \n *Arg1:* strlPath (string list)  \n *Arg2:* dChordHeightTolerance (double)  \n *Arg3:* dAngleToleranceDegree (double)  \n *Arg4:* dStepMaxSize (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.ImportMesh.ADVCADX":{"prefix":"ADVCADX","text":"*Name:* Home.ImportMesh.ADVCADX  \n*Desc:* import adx files  \n *JVer:* 5.0  \n *Arg1:* strPath (string)  \n *Arg2:* dFaceAngle (double)  \n *Arg3:* dEdgeAngle (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.ImportMesh.AnsysDat":{"prefix":"AnsysDat","text":"*Name:* Home.ImportMesh.AnsysDat  \n*Desc:* Import Ansys file  \n *JVer:* 5.0  \n *Arg1:* strlPath (string list)  \n *Arg2:* dFaceAngle (double)  \n *Arg3:* dEdgeAngle (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.ImportMesh.NastranBdf":{"prefix":"NastranBdf","text":"*Name:* Home.ImportMesh.NastranBdf  \n*Desc:* import Nastran bdf file  \n *JVer:* 5.0  \n *Arg1:* strlFilePaths (string list)  \n *Arg2:* iImportType (integer)  \n *Arg3:* dFaceAngle (double)  \n *Arg4:* dEdgeAngle (double)  \n *Arg5:* bReadNameComment (bool)  \n *Arg6:* iCreateDup1DElemAnswer (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.ImportMesh.AbaqusINP":{"prefix":"AbaqusINP","text":"*Name:* Home.ImportMesh.AbaqusINP  \n*Desc:* import Abaqus INP file  \n *JVer:* 5.0  \n *Arg1:* strlFilePaths (string list)  \n *Arg2:* dFaceAngle (double)  \n *Arg3:* dEdgeAngle (double)  \n *Arg4:* iImportType (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.ImportMesh.LSDYNA":{"prefix":"LSDYNA","text":"*Name:* Home.ImportMesh.LSDYNA  \n*Desc:* Import Ls-Dyna file  \n *JVer:* 5.0  \n *Arg1:* strlPath (string list)  \n *Arg2:* dFaceAngle (double)  \n *Arg3:* dEdgeAngle (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.ImportMesh.Universal":{"prefix":"Universal","text":"*Name:* Home.ImportMesh.Universal  \n*Desc:* Import Universal  \n *JVer:* 5.0  \n *Arg1:* strPath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.Export":{"prefix":"Export","text":"*Name:* Home.Export  \n*Desc:* Export Technostar Goemtroy file  \n *JVer:* 5.0  \n *Arg1:* strFileName (string)  \n *Arg2:* crlPart (cursor list)  \n *Arg3:* bBigID (bool)  \n *Arg4:* bUseUnit (bool)  \n *Arg5:* bVert (bool)  \n *Arg6:* bEdge (bool)  \n *Arg7:* bFace (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.ToImage":{"prefix":"ToImage","text":"*Name:* Home.ToImage  \n*Desc:* Command use for Home ToImage  \n *JVer:* 5.0  \n *Arg1:* strImgPath (string)  \n *Arg2:* bWhiteBG (bool)  \n *Arg3:* bTransparentBG (bool)  \n *Arg4:* bFixedSize (bool)  \n *Arg5:* iExportWidth (integer)  \n *Arg6:* iExportHeight (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.Find":{"prefix":"Find","text":"*Name:* Home.Find  \n*Desc:* Command use for Home Find  \n *JVer:* 5.0  \n *Arg1:* strSearch (string)  \n *Arg2:* strSeletedType (string)  \n *Arg3:* bFindMatch (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.RectangularCapture":{"prefix":"RectangularCapture","text":"*Name:* Home.RectangularCapture  \n*Desc:* Command use for Home RectangularCapture  \n *JVer:* 5.0  \n *Arg1:* iLeft (integer)  \n *Arg2:* iTop (integer)  \n *Arg3:* iRight (integer)  \n *Arg4:* iBottom (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.CopyToClipboard":{"prefix":"CopyToClipboard","text":"*Name:* Home.CopyToClipboard  \n*Desc:* Command use for Home CopyToClipboard  \n *JVer:* 5.0  \n *Arg1:* bWhiteBG (bool)  \n *Arg2:* bTransparentBG (bool)  \n *Arg3:* bFixedSize (bool)  \n *Arg4:* iWidth (integer)  \n *Arg5:* iHeight (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.FullScreen":{"prefix":"FullScreen","text":"*Name:* Home.FullScreen  \n*Desc:* Command use for Home FullScreen  \n *JVer:* 5.0  \n *Return:* 1 success, 0 fail (int)  \n "},"Home.Synchronize":{"prefix":"Synchronize","text":"*Name:* Home.Synchronize  \n*Desc:* Command use for Home Synchronize  \n *JVer:* 5.0  \n *Return:* 1 success, 0 fail (int)  \n "},"MainWindow.RightClick.MergeFaces":{"prefix":"MergeFaces","text":"*Name:* MainWindow.RightClick.MergeFaces  \n*Desc:* Merge Faces  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* bIsMergeEdge (bool)  \n *Arg3:* bRemoveNonBoundEdge (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MainWindow.RightClick.SelectAllParts":{"prefix":"SelectAllParts","text":"*Name:* MainWindow.RightClick.SelectAllParts  \n*Desc:* Select all of the parts in the model  \n *JVer:* 5.0  \n *Return:* 1 success, 0 fail (int)  \n "},"MainWindow.RightClick.AssociatedPick":{"prefix":"AssociatedPick","text":"*Name:* MainWindow.RightClick.AssociatedPick  \n*Desc:* pick associated entity  \n *JVer:* 5.0  \n *Arg1:* crlInput (cursor list)  \n *Arg2:* strTarget (string)  \n *Arg3:* strConnect (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"MainWindow.RightClick.FlipElement":{"prefix":"FlipElement","text":"*Name:* MainWindow.RightClick.FlipElement  \n*Desc:* flip element  \n *JVer:* 5.0  \n *Arg1:* crlTarget (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Element.SolidElement":{"prefix":"SolidElement","text":"*Name:* MeshCleanup.Element.SolidElement  \n*Desc:* Change Topology for Solid Element  \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Arg2:* crPart (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Element.SurfaceElement":{"prefix":"SurfaceElement","text":"*Name:* MeshCleanup.Element.SurfaceElement  \n*Desc:* Change Topology Element  \n *JVer:* 5.0  \n *Arg1:* ilElement (int list)  \n *Arg2:* ilFace (int list)  \n *Arg3:* ilPart (int list)  \n *Arg4:* iCreateNewPart (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Face":{"prefix":"Face","text":"*Name:* MeshCleanup.Face  \n*Desc:* change topology face  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* crlPart (cursor list)  \n *Arg3:* bCreateNewPart (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.CorrectModel":{"prefix":"CorrectModel","text":"*Name:* MeshCleanup.CorrectModel  \n*Desc:* correct model  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* iEnableBreakEdge (integer)  \n *Arg3:* dEdgeAngle (double)  \n *Arg4:* iEnableMergeEdge (integer)  \n *Arg5:* dMergeEdgeAngle (double)  \n *Arg6:* iEnableMergePlanarFace (integer)  \n *Arg7:* iEnableRemoveExtraVertex (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.CloseHoles":{"prefix":"CloseHoles","text":"*Name:* MeshCleanup.CloseHoles  \n*Desc:* close holes  \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Arg2:* dAreaMin (double)  \n *Arg3:* dAreaMax (double)  \n *Arg4:* bMergeFace (bool)  \n *Arg5:* bMergeEdge (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.CloseGap":{"prefix":"CloseGap","text":"*Name:* MeshCleanup.CloseGap  \n*Desc:* MeshCleanup Cleanup CloseGap  \n *JVer:* 5.0  \n *Arg1:* crlPartCur (cursor list)  \n *Arg2:* dDistanceTol (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.AutoCheck":{"prefix":"AutoCheck","text":"*Name:* MeshCleanup.AutoCheck  \n*Desc:* check meshing quality  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* iElemType (integer)  \n *Arg3:* blCheckCondition (bool list)  \n *Arg4:* blElemQuality (bool list)  \n *Arg5:* dlLimitValue (double list)  \n *Arg6:* crlElem (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.ManualCheck":{"prefix":"ManualCheck","text":"*Name:* MeshCleanup.ManualCheck  \n*Desc:* MeshCleanup ManualCheck  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* iElemType (integer)  \n *Arg3:* iVeQuality (integer)  \n *Arg4:* iCheckCondition (integer)  \n *Arg5:* dLimitValue (double)  \n *Arg6:* dCFLValue (double)  \n *Arg7:* iNonManifold (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.ChangeTopology.Element.SurfaceElement":{"prefix":"SurfaceElement","text":"*Name:* MeshCleanup.ChangeTopology.Element.SurfaceElement  \n*Desc:* Command use for MeshCleanup ChangeTopology Element SurfaceElement  \n *JVer:* 5.0  \n *Arg1:* ilElement (int list)  \n *Arg2:* ilFace (int list)  \n *Arg3:* ilPart (int list)  \n *Arg4:* iCreateNewPart (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Cleanup.CloseGap":{"prefix":"CloseGap","text":"*Name:* MeshCleanup.Cleanup.CloseGap  \n*Desc:* Command use for MeshCleanup Cleanup CloseGap  \n *JVer:* 5.0  \n *Arg1:* crlPartCur (cursor list)  \n *Arg2:* dDistanceTol (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual2D.MergeElement.TwoQuadsToQuad":{"prefix":"TwoQuadsToQuad","text":"*Name:* MeshCleanup.Manual2D.MergeElement.TwoQuadsToQuad  \n*Desc:* Merge two Quad elements into one Quad element  \n *JVer:* 5.0  \n *Arg1:* crlElements (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual2D.MergeElement.TwoTrisToQuad":{"prefix":"TwoTrisToQuad","text":"*Name:* MeshCleanup.Manual2D.MergeElement.TwoTrisToQuad  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Split element 2D  \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Arg2:* crDatumNode0 (cursor)  \n *Arg3:* crDatumNode1 (cursor)  \n *Arg4:* iMethod (integer)  \n *Arg5:* iAutoExecute (integer)  \n *Arg6:* iAutoTransition (integer)  \n *Arg7:* iCADProject (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Command use for MeshCleanup Manual2D SplitElement QuadToTrans4Quads  \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Arg2:* crDatumNode0 (cursor)  \n *Arg3:* crDatumNode1 (cursor)  \n *Arg4:* iMethod (integer)  \n *Arg5:* iAutoExecute (integer)  \n *Arg6:* iAutoTransition (integer)  \n *Arg7:* iCADProject (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Command use for MeshCleanup Manual2D SplitElement QuadToTrans3Quads  \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Arg2:* crDatumNode0 (cursor)  \n *Arg3:* crDatumNode1 (cursor)  \n *Arg4:* iMethod (integer)  \n *Arg5:* iAutoExecute (integer)  \n *Arg6:* iAutoTransition (integer)  \n *Arg7:* iCADProject (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Command use for MeshCleanup Manual2D SplitElement QuadTo2Quads1Tri  \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Arg2:* crDatumNode0 (cursor)  \n *Arg3:* crDatumNode1 (cursor)  \n *Arg4:* iMethod (integer)  \n *Arg5:* iAutoExecute (integer)  \n *Arg6:* iAutoTransition (integer)  \n *Arg7:* iCADProject (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Command use for MeshCleanup Manual2D SplitElement QuadTo3Tris  \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Arg2:* crDatumNode0 (cursor)  \n *Arg3:* crDatumNode1 (cursor)  \n *Arg4:* iMethod (integer)  \n *Arg5:* iAutoExecute (integer)  \n *Arg6:* iAutoTransition (integer)  \n *Arg7:* iCADProject (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Command use for MeshCleanup Manual2D SplitElement QuadTo2Quads  \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Arg2:* crDatumNode0 (cursor)  \n *Arg3:* crDatumNode1 (cursor)  \n *Arg4:* iMethod (integer)  \n *Arg5:* iAutoExecute (integer)  \n *Arg6:* iAutoTransition (integer)  \n *Arg7:* iCADProject (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Command use for MeshCleanup Manual2D SplitElement QuadTo2Tris  \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Arg2:* crDatumNode0 (cursor)  \n *Arg3:* crDatumNode1 (cursor)  \n *Arg4:* iMethod (integer)  \n *Arg5:* iAutoExecute (integer)  \n *Arg6:* iAutoTransition (integer)  \n *Arg7:* iCADProject (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual2D.SplitElement.QuadToQuadTri":{"prefix":"QuadToQuadTri","text":"*Name:* MeshCleanup.Manual2D.SplitElement.QuadToQuadTri  \n*Desc:* Command use for MeshCleanup Manual2D SplitElement QuadToQuadTri  \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Arg2:* crDatumNode0 (cursor)  \n *Arg3:* crDatumNode1 (cursor)  \n *Arg4:* iMethod (integer)  \n *Arg5:* iAutoExecute (integer)  \n *Arg6:* iAutoTransition (integer)  \n *Arg7:* iCADProject (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Command use for MeshCleanup Manual2D SplitElement QuadTo4Tris  \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Arg2:* crDatumNode0 (cursor)  \n *Arg3:* crDatumNode1 (cursor)  \n *Arg4:* iMethod (integer)  \n *Arg5:* iAutoExecute (integer)  \n *Arg6:* iAutoTransition (integer)  \n *Arg7:* iCADProject (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual2D.Equivalence":{"prefix":"Equivalence","text":"*Name:* MeshCleanup.Manual2D.Equivalence  \n*Desc:* Equivalence Nodes  \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* iTypeEquiva (integer)  \n *Arg3:* dTolerance (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual2D.DeleteElement":{"prefix":"DeleteElement","text":"*Name:* MeshCleanup.Manual2D.DeleteElement  \n*Desc:* Delete Element  \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Arg2:* bKeepShareElem (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual2D.Split":{"prefix":"Split","text":"*Name:* MeshCleanup.Manual2D.Split  \n*Desc:* manual cleanup by split  \n *JVer:* 5.0  \n *Arg1:* crplElemEdge (cursor pair list)  \n *Arg2:* dRatio (double)  \n *Arg3:* crNodeRef (cursor)  \n *Arg4:* crProjPart (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual2D.Swap":{"prefix":"Swap","text":"*Name:* MeshCleanup.Manual2D.Swap  \n*Desc:* Swap Element Edge  \n *JVer:* 5.0  \n *Arg1:* crplElemEdge (cursor pair list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual2D.Collapse":{"prefix":"Collapse","text":"*Name:* MeshCleanup.Manual2D.Collapse  \n*Desc:* Collapse for Mesh Cleanup  \n *JVer:* 5.0  \n *Arg1:* crNodeRef (cursor)  \n *Arg2:* crNodeEq (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual2D.CreateElement":{"prefix":"CreateElement","text":"*Name:* MeshCleanup.Manual2D.CreateElement  \n*Desc:* Create element  \n *JVer:* 5.0  \n *Arg1:* iElemType (integer)  \n *Arg2:* crParentEntity (cursor)  \n *Arg3:* crlNode (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual2D.RemeshElement":{"prefix":"RemeshElement","text":"*Name:* MeshCleanup.Manual2D.RemeshElement  \n*Desc:* local surface remesh  \n *JVer:* 5.0  \n *Arg1:* crlTarget (cursor list)  \n *Arg2:* surfaceMesh (SURFACE_MESH)  \n *Arg3:* bUseSetting (bool)  \n *Arg4:* bGrading (bool)  \n *Arg5:* bFMesher (bool)  \n *Arg6:* iOverrideType (integer)  \n *Arg7:* bKeepConnection (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual3D.Collapse.CenterFaceCollapse":{"prefix":"CenterFaceCollapse","text":"*Name:* MeshCleanup.Manual3D.Collapse.CenterFaceCollapse  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual3D.Collapse.HalfEdgeCollapse":{"prefix":"HalfEdgeCollapse","text":"*Name:* MeshCleanup.Manual3D.Collapse.HalfEdgeCollapse  \n*Desc:* mash cleanup by manual for half edge collapse  \n *JVer:* 5.0  \n *Arg1:* crplElemEdge (cursor pair list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual3D.Collapse.EdgeCollapse":{"prefix":"EdgeCollapse","text":"*Name:* MeshCleanup.Manual3D.Collapse.EdgeCollapse  \n*Desc:* collapse  \n *JVer:* 5.0  \n *Arg1:* crplElemEdge (cursor pair list)  \n *Arg2:* crlNode (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual3D.DeleteNode":{"prefix":"DeleteNode","text":"*Name:* MeshCleanup.Manual3D.DeleteNode  \n*Desc:* remove node for solid element.  \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual3D.Swap":{"prefix":"Swap","text":"*Name:* MeshCleanup.Manual3D.Swap  \n*Desc:* cleanup element edge by swap  \n *JVer:* 5.0  \n *Arg1:* crplElemEdge (cursor pair list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual3D.Equivalence":{"prefix":"Equivalence","text":"*Name:* MeshCleanup.Manual3D.Equivalence  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* iMergeTowards (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual3D.Split":{"prefix":"Split","text":"*Name:* MeshCleanup.Manual3D.Split  \n*Desc:* Merge two Quad elements into one Quad element  \n *JVer:* 5.0  \n *Arg1:* crplElemEdge (cursor pair list)  \n *Arg2:* crlNode (cursor list)  \n *Arg3:* dRatioDistance (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual3D.CreateHex":{"prefix":"CreateHex","text":"*Name:* MeshCleanup.Manual3D.CreateHex  \n*Desc:* create hex8 elements  \n *JVer:* 5.0  \n *Arg1:* iParentEntityId (integer)  \n *Arg2:* crlElem (cursor list)  \n *Arg3:* iSeprateN (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual3D.CreatePenta":{"prefix":"CreatePenta","text":"*Name:* MeshCleanup.Manual3D.CreatePenta  \n*Desc:* Create penta5 element  \n *JVer:* 5.0  \n *Arg1:* iParentEntityId (integer)  \n *Arg2:* crlElem (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.Manual3D.CreateTetra":{"prefix":"CreateTetra","text":"*Name:* MeshCleanup.Manual3D.CreateTetra  \n*Desc:* create element Tet  \n *JVer:* 5.0  \n *Arg1:* iParentEntityId (integer)  \n *Arg2:* crlNode (cursor list)  \n *Arg3:* crlElem (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshCleanup.ManualCheck.Tri":{"prefix":"Tri","text":"*Name:* MeshCleanup.ManualCheck.Tri  \n*Desc:* Command use for MeshCleanup ManualCheck Tri  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* nElemType (0)  \n *Arg3:* veQuality (0)  \n *Arg4:* nCheckCondition (0)  \n *Arg5:* dLimitValue (double)  \n *Arg6:* CFLValue (0.0)  \n *Arg7:* nNonManifold (0)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.CreateElement.Hex":{"prefix":"Hex","text":"*Name:* MeshEdit.CreateElement.Hex  \n*Desc:* create hex8 elements  \n *JVer:* 5.0  \n *Arg1:* iParentEntityId (integer)  \n *Arg2:* crlElem (cursor list)  \n *Arg3:* iSeprateN (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.CreateElement.Penta":{"prefix":"Penta","text":"*Name:* MeshEdit.CreateElement.Penta  \n*Desc:* Create penta element  \n *JVer:* 5.0  \n *Arg1:* iParentEntityId (integer)  \n *Arg2:* crlElem (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.CreateElement.Tet":{"prefix":"Tet","text":"*Name:* MeshEdit.CreateElement.Tet  \n*Desc:* create element Tet  \n *JVer:* 5.0  \n *Arg1:* iParentEntityId (integer)  \n *Arg2:* crlNode (cursor list)  \n *Arg3:* crlElem (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Create element  \n *JVer:* 5.0  \n *Arg1:* iElemType (integer)  \n *Arg2:* crParentEntity (cursor)  \n *Arg3:* crlNode (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Create element  \n *JVer:* 5.0  \n *Arg1:* iElemType (integer)  \n *Arg2:* crParentEntity (cursor)  \n *Arg3:* crlNode (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.CreateNode.CircleCenter":{"prefix":"CircleCenter","text":"*Name:* MeshEdit.CreateNode.CircleCenter  \n*Desc:* create node at center of circle  \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Arg2:* iNodeID (integer)  \n *Arg3:* bImprint (bool)  \n *Arg4:* crFace (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.CreateNode.Absolute":{"prefix":"Absolute","text":"*Name:* MeshEdit.CreateNode.Absolute  \n*Desc:* create node by input direct value  \n *JVer:* 5.0  \n *Arg1:* veclNodeCoord (vector list)  \n *Arg2:* ilNewNodeID (int list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.CreateNode.Import":{"prefix":"Import","text":"*Name:* MeshEdit.CreateNode.Import  \n*Desc:* create node by importing CSV file  \n *JVer:* 5.0  \n *Arg1:* strCsvFilePath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.CreateNode.Point":{"prefix":"Point","text":"*Name:* MeshEdit.CreateNode.Point  \n*Desc:* create node point  \n *JVer:* 5.0  \n *Arg1:* iNodeID (integer)  \n *Arg2:* posPoint (position)  \n *Arg3:* bImprint (bool)  \n *Arg4:* crShape (cursor)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* create node point  \n *JVer:* 5.0  \n *Arg1:* iNodeID (integer)  \n *Arg2:* dX (double)  \n *Arg3:* dY (double)  \n *Arg4:* dZ (double)  \n *Arg5:* iNumberofNodes (integer)  \n *Arg6:* bImprint (bool)  \n *Arg7:* crlNode (cursor list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* create node point  \n *JVer:* 5.0  \n *Arg1:* iNodeID (integer)  \n *Arg2:* dX (double)  \n *Arg3:* dY (double)  \n *Arg4:* dZ (double)  \n *Arg5:* bImprint (bool)  \n *Arg6:* crlNode (cursor list)  \n *Arg7:* crlFace (cursor list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.CreateNode.ProjectToPlane":{"prefix":"ProjectToPlane","text":"*Name:* MeshEdit.CreateNode.ProjectToPlane  \n*Desc:* create node point  \n *JVer:* 5.0  \n *Arg1:* dX (double)  \n *Arg2:* dY (double)  \n *Arg3:* dZ (double)  \n *Arg4:* crlNode (cursor list)  \n *Arg5:* crlFace (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.CreateNode.CenterOfCylinder":{"prefix":"CenterOfCylinder","text":"*Name:* MeshEdit.CreateNode.CenterOfCylinder  \n*Desc:* Create node of center cylinder  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* iNodeID (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.CreateNode.CenterOfSphere":{"prefix":"CenterOfSphere","text":"*Name:* MeshEdit.CreateNode.CenterOfSphere  \n*Desc:* Create node of center sphere  \n *JVer:* 5.0  \n *Arg1:* crlNodeOrFace (cursor list)  \n *Arg2:* iNodeID (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.CreateNode.Offset":{"prefix":"Offset","text":"*Name:* MeshEdit.CreateNode.Offset  \n*Desc:* MeshEdit CreateNode CreateNodeNodeOffset  \n *JVer:* 5.0  \n *Arg1:* vecOffset (vector)  \n *Arg2:* iRep (integer)  \n *Arg3:* crlNode (cursor list)  \n *Arg4:* crCoord (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.CreateNode.CenterOfGravity":{"prefix":"CenterOfGravity","text":"*Name:* MeshEdit.CreateNode.CenterOfGravity  \n*Desc:* create node Center Of Gravity  \n *JVer:* 5.0  \n *Arg1:* iCreationType (integer)  \n *Arg2:* iNodeID (integer)  \n *Arg3:* dX (double)  \n *Arg4:* dY (double)  \n *Arg5:* dZ (double)  \n *Arg6:* crlPart (cursor list)  \n *Arg7:* crlBarPart (cursor list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.CreateNode.ProjectToLine":{"prefix":"ProjectToLine","text":"*Name:* MeshEdit.CreateNode.ProjectToLine  \n*Desc:* create node by projection to line  \n *JVer:* 5.0  \n *Arg1:* crlTa (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.CreateNode.IntersectionNode":{"prefix":"IntersectionNode","text":"*Name:* MeshEdit.CreateNode.IntersectionNode  \n*Desc:* create node by intersection node  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* crlPart (cursor list)  \n *Arg3:* crlEdge (cursor list)  \n *Arg4:* crlNode (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.Point":{"prefix":"Point","text":"*Name:* MeshEdit.MoveNode.Point  \n*Desc:* Move node(s) to an Face(Edge) Point position  \n *JVer:* 5.0  \n *Arg1:* dX (double)  \n *Arg2:* dY (double)  \n *Arg3:* dZ (double)  \n *Arg4:* ilNodeList (int list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.ProjectToLine":{"prefix":"ProjectToLine","text":"*Name:* MeshEdit.MoveNode.ProjectToLine  \n*Desc:* move node by project to line  \n *JVer:* 5.0  \n *Arg1:* crlRefNodes (cursor list)  \n *Arg2:* crlObjNodes (cursor list)  \n *Arg3:* iType (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.ProjectToPlaneElem":{"prefix":"ProjectToPlaneElem","text":"*Name:* MeshEdit.MoveNode.ProjectToPlaneElem  \n*Desc:* Move Node by Project to Plane(Elem)  \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* crlElem (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.Equalize":{"prefix":"Equalize","text":"*Name:* MeshEdit.MoveNode.Equalize  \n*Desc:* Move node by equalize  \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.NormalOffset":{"prefix":"NormalOffset","text":"*Name:* MeshEdit.MoveNode.NormalOffset  \n*Desc:* Move node(s) in Normal Direction of plane  \n *JVer:* 5.0  \n *Arg1:* dMagnitude (double)  \n *Arg2:* ilNodeList (int list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.CoincidentNodes":{"prefix":"CoincidentNodes","text":"*Name:* MeshEdit.MoveNode.CoincidentNodes  \n*Desc:* Coincident Nodes  \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* dTol (double)  \n *Arg3:* bDesOrder (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.AlongCylinder":{"prefix":"AlongCylinder","text":"*Name:* MeshEdit.MoveNode.AlongCylinder  \n*Desc:* Move node along cylinder surface  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* crlNode (cursor list)  \n *Arg3:* dIrX (double)  \n *Arg4:* dIrY (double)  \n *Arg5:* dIrZ (double)  \n *Arg6:* dCircleX (double)  \n *Arg7:* dCircleY (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Move Nodes from Node to 3 nodes created Plane  \n *JVer:* 5.0  \n *Arg1:* ilNodeList (int list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.MoveNodeOffset":{"prefix":"MoveNodeOffset","text":"*Name:* MeshEdit.MoveNode.MoveNodeOffset  \n*Desc:* Command use for MeshEdit MoveNode MoveNodeOffset  \n *JVer:* 5.0  \n *Arg1:* dDeltaX (double)  \n *Arg2:* dDeltaY (double)  \n *Arg3:* dDeltaZ (double)  \n *Arg4:* crlNode (cursor list)  \n *Arg5:* crCoord (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.RefineQuality":{"prefix":"RefineQuality","text":"*Name:* MeshEdit.MoveNode.RefineQuality  \n*Desc:* MeshEdit RefineQuality  \n *JVer:* 5.0  \n *Arg1:* iMetric (integer)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* crlElem (cursor list)  \n *Arg4:* crlNode (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.StraightenMidnodes":{"prefix":"StraightenMidnodes","text":"*Name:* MeshEdit.MoveNode.StraightenMidnodes  \n*Desc:* move node by straighten_mid_nodes  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* crlEdge (cursor list)  \n *Arg4:* crlNode (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.Offset":{"prefix":"Offset","text":"*Name:* MeshEdit.MoveNode.Offset  \n*Desc:* MeshEdit MoveNode MoveNodeOffset  \n *JVer:* 5.0  \n *Arg1:* dDeltaX (double)  \n *Arg2:* dDeltaY (double)  \n *Arg3:* dDeltaZ (double)  \n *Arg4:* crCoord (cursor)  \n *Arg5:* crlNode (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.Laplacian":{"prefix":"Laplacian","text":"*Name:* MeshEdit.MoveNode.Laplacian  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlTarget (cursor list)  \n *Arg2:* iType (integer)  \n *Arg3:* bWithCADFollow (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.AlongEdge":{"prefix":"AlongEdge","text":"*Name:* MeshEdit.MoveNode.AlongEdge  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* bMoveX (bool)  \n *Arg3:* bMoveY (bool)  \n *Arg4:* bMoveZ (bool)  \n *Arg5:* dPosX (double)  \n *Arg6:* dPosY (double)  \n *Arg7:* dPosZ (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.AlongDirection":{"prefix":"AlongDirection","text":"*Name:* MeshEdit.MoveNode.AlongDirection  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* crElem (cursor)  \n *Arg3:* crFace (cursor)  \n *Arg4:* vecDirection (vector)  \n *Arg5:* dMagnitude (double)  \n *Arg6:* bDestination (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.CADFollows":{"prefix":"CADFollows","text":"*Name:* MeshEdit.MoveNode.CADFollows  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* dMovedPosX (double)  \n *Arg3:* dMovedPosY (double)  \n *Arg4:* dMovedPosZ (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.Scale":{"prefix":"Scale","text":"*Name:* MeshEdit.MoveNode.Scale  \n*Desc:* Move node scale  \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* crlNodeOrigin (cursor list)  \n *Arg3:* crCoord (cursor)  \n *Arg4:* posDeltaXYZ (position)  \n *Arg5:* 10.0 ([])  \n *Arg6:* 10.0 ([]])  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MoveNode.Absolute":{"prefix":"Absolute","text":"*Name:* MeshEdit.MoveNode.Absolute  \n*Desc:* move node absolute  \n *JVer:* 5.0  \n *Arg1:* dDeltaX (double)  \n *Arg2:* dDeltaY (double)  \n *Arg3:* dDeltaZ (double)  \n *Arg4:* b1stCoord (True)  \n *Arg5:* b2ndCoord (True)  \n *Arg6:* b3rdCoord (True)  \n *Arg7:* crlNode (cursor list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.Face":{"prefix":"Face","text":"*Name:* MeshEdit.Face  \n*Desc:* Make Mesh deformation  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* iOffsetType (integer)  \n *Arg4:* crCoord (cursor)  \n *Arg5:* dlOffset (double list)  \n *Arg6:* 0.0 ([])  \n *Arg7:* 0.0 ([]])  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.ElementConvert":{"prefix":"ElementConvert","text":"*Name:* MeshEdit.ElementConvert  \n*Desc:* Element Conversion  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* iType (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.Deform":{"prefix":"Deform","text":"*Name:* MeshEdit.Deform  \n*Desc:* geometry deform  \n *JVer:* 5.0  \n *Arg1:* crlFacercObverse (cursor list)  \n *Arg2:* crlFaceDstReverse (cursor list)  \n *Arg3:* crlFacercReverse (cursor list)  \n *Arg4:* crlFaceDstObverse (cursor list)  \n *Arg5:* crlFaceFixed (cursor list)  \n *Arg6:* dDistEffect (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MirrorCopy":{"prefix":"MirrorCopy","text":"*Name:* MeshEdit.MirrorCopy  \n*Desc:* mirror copy of surface mesh  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.DeleteNode":{"prefix":"DeleteNode","text":"*Name:* MeshEdit.DeleteNode  \n*Desc:* Delete floating nodes in db  \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* bRemoveVertex (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.FaceImprint":{"prefix":"FaceImprint","text":"*Name:* MeshEdit.FaceImprint  \n*Desc:* import Nastran bdf file  \n *JVer:* 5.0  \n *Arg1:* crlFaces (cursor list)  \n *Arg2:* bMeshCopy (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.AdjustOrientation":{"prefix":"AdjustOrientation","text":"*Name:* MeshEdit.AdjustOrientation  \n*Desc:* Adjust Orientation  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* crlElem (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.OneNode":{"prefix":"OneNode","text":"*Name:* MeshEdit.OneNode  \n*Desc:* morphing one node  \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* crlFaceFixed (cursor list)  \n *Arg3:* bOffsetvector (bool)  \n *Arg4:* crCoord (cursor)  \n *Arg5:* dlOffset (double list)  \n *Arg6:* 1 ([])  \n *Arg7:* 0] ([])  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.SeparateNodes":{"prefix":"SeparateNodes","text":"*Name:* MeshEdit.SeparateNodes  \n*Desc:* Separate nodes  \n *JVer:* 5.0  \n *Arg1:* crlShareNodes (cursor list)  \n *Arg2:* crlTarget (cursor list)  \n *Arg3:* iKeepNodeIDsOn (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.RefineQuality":{"prefix":"RefineQuality","text":"*Name:* MeshEdit.RefineQuality  \n*Desc:* Command use for MeshEdit RefineQuality  \n *JVer:* 5.0  \n *Arg1:* iMetric (integer)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* crlElem (cursor list)  \n *Arg4:* crlNode (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.Import":{"prefix":"Import","text":"*Name:* MeshEdit.Import  \n*Desc:* Move nodes deform  \n *JVer:* 5.0  \n *Arg1:* iSolverType (integer)  \n *Arg2:* strFilePath (string)  \n *Arg3:* iStep (integer)  \n *Arg4:* dScale (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.RemoveSolidMesh":{"prefix":"RemoveSolidMesh","text":"*Name:* MeshEdit.RemoveSolidMesh  \n*Desc:* Remove Solid Mesh  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* bConvFirst (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MergeNodes":{"prefix":"MergeNodes","text":"*Name:* MeshEdit.MergeNodes  \n*Desc:* Merge nodes  \n *JVer:* 5.0  \n *Arg1:* dTolerance (double)  \n *Arg2:* iKeepType (integer)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* bGroup (bool)  \n *Arg5:* bEquivalence (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.MeshCopy":{"prefix":"MeshCopy","text":"*Name:* MeshEdit.MeshCopy  \n*Desc:* Mesh Copy Pattern  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* crlNode (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.RibThickness":{"prefix":"RibThickness","text":"*Name:* MeshEdit.RibThickness  \n*Desc:* Mesh Edit Morphing Rib Thickness  \n *JVer:* 5.0  \n *Arg1:* crlFaceMove (cursor list)  \n *Arg2:* crlFaceFixed (cursor list)  \n *Arg3:* dMove (double)  \n *Arg4:* dDistStrong (double)  \n *Arg5:* dDistWeak (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.ChangePattern":{"prefix":"ChangePattern","text":"*Name:* MeshEdit.ChangePattern  \n*Desc:* Element ChangePattern  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* iPatternType (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.SurfaceMesh":{"prefix":"SurfaceMesh","text":"*Name:* MeshEdit.SurfaceMesh  \n*Desc:* Element Conversion  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* iType (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.SolidMesh":{"prefix":"SolidMesh","text":"*Name:* MeshEdit.SolidMesh  \n*Desc:* Element Conversion  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* iType (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"MeshEdit.DividePartByRegion":{"prefix":"DividePartByRegion","text":"*Name:* MeshEdit.DividePartByRegion  \n*Desc:* Divide Part By Region  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlBoundaryParts (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.CADProjection.Part":{"prefix":"Part","text":"*Name:* Meshing.CADProjection.Part  \n*Desc:* CadProject for Part  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crCadPart (cursor)  \n *Arg3:* crMeshedPart (cursor)  \n *Arg4:* bForceProject (bool)  \n *Arg5:* bProjectCornerNodes (bool)  \n *Arg6:* bProjectMidNodes (bool)  \n *Arg7:* bIDcheck (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.CADProjection.Face":{"prefix":"Face","text":"*Name:* Meshing.CADProjection.Face  \n*Desc:* CadProject for Face  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crCadPart (cursor)  \n *Arg3:* crlMeshedFace (cursor list)  \n *Arg4:* bForceProject (bool)  \n *Arg5:* bProjectCornerNodes (bool)  \n *Arg6:* bProjectMidNodes (bool)  \n *Arg7:* bIDcheck (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.CADProjection.FaceToFace":{"prefix":"FaceToFace","text":"*Name:* Meshing.CADProjection.FaceToFace  \n*Desc:* CadProject for Fact to Face  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crlCadFace (cursor list)  \n *Arg3:* crlMeshedFace (cursor list)  \n *Arg4:* bForceProject (bool)  \n *Arg5:* bProjectCornerNodes (bool)  \n *Arg6:* bProjectMidNodes (bool)  \n *Arg7:* bIDcheck (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.CADProjection.NodeToFace":{"prefix":"NodeToFace","text":"*Name:* Meshing.CADProjection.NodeToFace  \n*Desc:* CadProject for Node to Face  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crlCadFace (cursor list)  \n *Arg3:* crlMeshedNode (cursor list)  \n *Arg4:* iDirection (integer)  \n *Arg5:* iImproveQuality (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.CADProjection.NodeToEdge":{"prefix":"NodeToEdge","text":"*Name:* Meshing.CADProjection.NodeToEdge  \n*Desc:* CadProject for Node to Edge  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crCadEdge (cursor)  \n *Arg3:* crlMeshedNode (cursor list)  \n *Arg4:* iDirection (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.LocalMeshing.FilletMapping":{"prefix":"FilletMapping","text":"*Name:* Meshing.LocalMeshing.FilletMapping  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* iIsoDiv (integer)  \n *Arg3:* dIsoSize (double)  \n *Arg4:* dIsoError (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.LocalMeshing.SelectFillet":{"prefix":"SelectFillet","text":"*Name:* Meshing.LocalMeshing.SelectFillet  \n*Desc:* Command use for Meshing LocalMeshing SelectFillet  \n *JVer:* 5.0  \n *Arg1:* crlItems (cursor list)  \n *Arg2:* dSelectWidthMin (double)  \n *Arg3:* dSelectWidthMax (double)  \n *Arg4:* dSelectRMin (double)  \n *Arg5:* dSelectRMax (double)  \n *Arg6:* dAngleMin (double)  \n *Arg7:* dAngleMax (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.LocalSetting.SearchTargetFaces":{"prefix":"SearchTargetFaces","text":"*Name:* Meshing.LocalSetting.SearchTargetFaces  \n*Desc:* Search Target Faces for Local mesh setting  \n *JVer:* 5.0  \n *Arg1:* iPartType (integer)  \n *Arg2:* dlOrigin (double list)  \n *Arg3:* 0 ([])  \n *Arg4:* 0 ([]])  \n *Arg5:* dlLength (double list)  \n *Arg6:* 0 ([].1)  \n *Arg7:* 0 ([].1])  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.Templates.TemplateCopy":{"prefix":"TemplateCopy","text":"*Name:* Meshing.Templates.TemplateCopy  \n*Desc:* Template Copy local setting  \n *JVer:* 5.0  \n *Arg1:* crlReferent (cursor list)  \n *Arg2:* crlTarget (cursor list)  \n *Arg3:* iMethod (integer)  \n *Arg4:* iCopySub (integer)  \n *Arg5:* dTolerance (double)  \n *Arg6:* strSource (string)  \n *Arg7:* strTarget (string)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.BarMeshing":{"prefix":"BarMeshing","text":"*Name:* Meshing.BarMeshing  \n*Desc:* meshing 1D edge/bar  \n *JVer:* 5.0  \n *Arg1:* crlCadEdge (cursor list)  \n *Arg2:* crlBarEdge (cursor list)  \n *Arg3:* crlBarPart (cursor list)  \n *Arg4:* dDocMeshSize (double)  \n *Arg5:* iDocNumofElem (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.GridMesh":{"prefix":"GridMesh","text":"*Name:* Meshing.GridMesh  \n*Desc:* Grid meshing  \n *JVer:* 5.0  \n *Arg1:* listGridMesh ([])  \n *Arg2:* bLocalsetting (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.SolidMeshing":{"prefix":"SolidMeshing","text":"*Name:* Meshing.SolidMeshing  \n*Desc:* Solid Meshing  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* bTet10 (bool)  \n *Arg3:* dGradingFactor (double)  \n *Arg4:* bGravCenter (bool)  \n *Arg5:* dStretchLimit (double)  \n *Arg6:* iSpeedVsQual (integer)  \n *Arg7:* iSpeedVsMem (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.SurfaceMeshing":{"prefix":"SurfaceMeshing","text":"*Name:* Meshing.SurfaceMeshing  \n*Desc:* Surface Meshing  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* surfaceMesh (SURFACE_MESH)  \n *Arg3:* bUseSetting (bool)  \n *Arg4:* bFMesher (bool)  \n *Arg5:* iThreadNum (integer)  \n *Arg6:* bRefData (bool)  \n *Arg7:* bMeshColor (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.SetAttib":{"prefix":"SetAttib","text":"*Name:* Meshing.SetAttib  \n*Desc:* set attribute  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* surfaceMesh (SURFACE_MESH)  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.LocalRemesh.Solid":{"prefix":"Solid","text":"*Name:* Meshing.LocalRemesh.Solid  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* dlCenter (double list)  \n *Arg3:* dRadius (double)  \n *Arg4:* dGradFactor (double)  \n *Arg5:* dStrechLimit (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.LocalRemesh.Surfase":{"prefix":"Surfase","text":"*Name:* Meshing.LocalRemesh.Surfase  \n*Desc:* local surface remesh  \n *JVer:* 5.0  \n *Arg1:* crlTarget (cursor list)  \n *Arg2:* surfaceMesh (SURFACE_MESH)  \n *Arg3:* bUseSetting (bool)  \n *Arg4:* bGrading (bool)  \n *Arg5:* bFMesher (bool)  \n *Arg6:* iOverrideType (integer)  \n *Arg7:* bKeepConnection (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.LocalSettings.Edge":{"prefix":"Edge","text":"*Name:* Meshing.LocalSettings.Edge  \n*Desc:* LocalSettings.Edge  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* localMesh (LOCAL_MESH)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* ilHardPointId (int list)  \n *Arg5:* veclHardPointXYZ (vector list)  \n *Arg6:* crlHardPointTarget (cursor list)  \n *Arg7:* crEditTarget (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.LocalSettings.Face":{"prefix":"Face","text":"*Name:* Meshing.LocalSettings.Face  \n*Desc:* LocalSettings.Face  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* localMesh (LOCAL_MESH)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* ilHardPointId (int list)  \n *Arg5:* veclHardPointXYZ (vector list)  \n *Arg6:* crlHardPointTarget (cursor list)  \n *Arg7:* crEditTarget (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.LocalSettings.FaceElement":{"prefix":"FaceElement","text":"*Name:* Meshing.LocalSettings.FaceElement  \n*Desc:* LocalSettings.FaceElement  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* localMesh (LOCAL_MESH)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* ilHardPointId (int list)  \n *Arg5:* veclHardPointXYZ (vector list)  \n *Arg6:* crlHardPointTarget (cursor list)  \n *Arg7:* crEditTarget (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.LocalSettings.Model":{"prefix":"Model","text":"*Name:* Meshing.LocalSettings.Model  \n*Desc:* LocalSettings.Model  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* localMesh (LOCAL_MESH)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* ilHardPointId (int list)  \n *Arg5:* veclHardPointXYZ (vector list)  \n *Arg6:* crlHardPointTarget (cursor list)  \n *Arg7:* crEditTarget (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.LocalSettings.Part":{"prefix":"Part","text":"*Name:* Meshing.LocalSettings.Part  \n*Desc:* LocalSettings.Part  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* localMesh (LOCAL_MESH)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* ilHardPointId (int list)  \n *Arg5:* veclHardPointXYZ (vector list)  \n *Arg6:* crlHardPointTarget (cursor list)  \n *Arg7:* crEditTarget (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Meshing.LocalSettings.Points":{"prefix":"Points","text":"*Name:* Meshing.LocalSettings.Points  \n*Desc:* LocalSettings.Points  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* localMesh (LOCAL_MESH)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* ilHardPointId (int list)  \n *Arg5:* veclHardPointXYZ (vector list)  \n *Arg6:* crlHardPointTarget (cursor list)  \n *Arg7:* crEditTarget (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlane.AdjustThickness":{"prefix":"AdjustThickness","text":"*Name:* MidPlane.AdjustThickness  \n*Desc:* Adjust thickness of midplane  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* dRatio (double)  \n *Arg3:* bAdjustFaceThick (bool)  \n *Arg4:* bAdjustPropThick (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlane.FaceCross":{"prefix":"FaceCross","text":"*Name:* MidPlane.FaceCross  \n*Desc:* Face Cross  \n *JVer:* 5.0  \n *Arg1:* crlBodies (cursor list)  \n *Arg2:* crlFaces (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlane.CreateThickProps":{"prefix":"CreateThickProps","text":"*Name:* MidPlane.CreateThickProps  \n*Desc:* create thick properties for mid-plane  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* dThickDiff (double)  \n *Arg3:* dMaxThick (double)  \n *Arg4:* dMinThick (double)  \n *Arg5:* crMatMembrane (cursor)  \n *Arg6:* crMatBend (cursor)  \n *Arg7:* crMatShear (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlane.FindMidPlane":{"prefix":"FindMidPlane","text":"*Name:* MidPlane.FindMidPlane  \n*Desc:* Command use for MidPlane FindMidPlane  \n *JVer:* 5.0  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlaneEdit.Edge.Nodes":{"prefix":"Nodes","text":"*Name:* MidPlaneEdit.Edge.Nodes  \n*Desc:* Edit mid-plane with edge nodes  \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlaneEdit.ExtendFace.CylinderFace":{"prefix":"CylinderFace","text":"*Name:* MidPlaneEdit.ExtendFace.CylinderFace  \n*Desc:* project an edge to face to get a new edge  \n *JVer:* 5.0  \n *Arg1:* crlExtFace (cursor list)  \n *Arg2:* crRefFace (cursor)  \n *Arg3:* crEdge (cursor)  \n *Arg4:* iExtendType (integer)  \n *Arg5:* iFaceType (integer)  \n *Arg6:* iMethod (integer)  \n *Arg7:* dParaAngleOffset (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlaneEdit.ExtendFace.PlanarFace":{"prefix":"PlanarFace","text":"*Name:* MidPlaneEdit.ExtendFace.PlanarFace  \n*Desc:* Extend Face  \n *JVer:* 5.0  \n *Arg1:* bIType (bool)  \n *Arg2:* crExtFace (cursor)  \n *Arg3:* crRefFace (cursor)  \n *Arg4:* crEdge (cursor)  \n *Arg5:* iFaceType (integer)  \n *Arg6:* iExtendType (integer)  \n *Arg7:* iMethod (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlaneEdit.Face.FaceExtendtoFace":{"prefix":"FaceExtendtoFace","text":"*Name:* MidPlaneEdit.Face.FaceExtendtoFace  \n*Desc:* add face by face extend to face  \n *JVer:* 5.0  \n *Arg1:* crlExtFaces (cursor list)  \n *Arg2:* crlRefFaces (cursor list)  \n *Arg3:* bMergeFace (bool)  \n *Arg4:* bMergeEdge (bool)  \n *Arg5:* dMergeEdgeAngle (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlaneEdit.Face.FaceExtendToIntersection":{"prefix":"FaceExtendToIntersection","text":"*Name:* MidPlaneEdit.Face.FaceExtendToIntersection  \n*Desc:* Face Extend To Intersection  \n *JVer:* 5.0  \n *Arg1:* crEdge0 (cursor)  \n *Arg2:* crEdge1 (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlaneEdit.Face.EdgesToEdges":{"prefix":"EdgesToEdges","text":"*Name:* MidPlaneEdit.Face.EdgesToEdges  \n*Desc:* add face by edges  \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Arg2:* bImprint (bool)  \n *Arg3:* bMultiEdges (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlaneEdit.Manual.vecOffset":{"prefix":"vecOffset","text":"*Name:* MidPlaneEdit.Manual.vecOffset  \n*Desc:* Command use for MidPlaneEdit Manual vecOffset  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* crPart (cursor)  \n *Arg3:* dOffset (double)  \n *Arg4:* bCyl (bool)  \n *Arg5:* strNewPartName (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlaneEdit.Manual.MidByPair":{"prefix":"MidByPair","text":"*Name:* MidPlaneEdit.Manual.MidByPair  \n*Desc:* Midplane Manual MidByPair  \n *JVer:* 5.0  \n *Arg1:* crlBaseFaces (cursor list)  \n *Arg2:* crlPairFaces (cursor list)  \n *Arg3:* crlRefFaces (cursor list)  \n *Arg4:* crPart (cursor)  \n *Arg5:* bMergeFaces (bool)  \n *Arg6:* bExtendFaces (bool)  \n *Arg7:* bHideFaces (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlaneEdit.AddItems.Edge.ProjectEdgeToFace":{"prefix":"ProjectEdgeToFace","text":"*Name:* MidPlaneEdit.AddItems.Edge.ProjectEdgeToFace  \n*Desc:* project an edge to face to get a new edge  \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* bExtendEdge (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlaneEdit.AddItems.Edge.FaceTwoFace":{"prefix":"FaceTwoFace","text":"*Name:* MidPlaneEdit.AddItems.Edge.FaceTwoFace  \n*Desc:* Exent face to face  \n *JVer:* 5.0  \n *Arg1:* crRefFace (cursor)  \n *Arg2:* crExtFace (cursor)  \n *Arg3:* iExtendType (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlaneEdit.AddItems.Face.EFExtendFreeEdge":{"prefix":"EFExtendFreeEdge","text":"*Name:* MidPlaneEdit.AddItems.Face.EFExtendFreeEdge  \n*Desc:* Create new face by extend free edge to a destination face  \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* bMergeFace (bool)  \n *Arg4:* bMergeEdge (bool)  \n *Arg5:* bUseNeighDir (bool)  \n *Arg6:* dMergeEdgeAngle (double)  \n *Arg7:* bMultiEF (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MidPlaneEdit.AddItems.Face.EFProject":{"prefix":"EFProject","text":"*Name:* MidPlaneEdit.AddItems.Face.EFProject  \n*Desc:* Creat new face by project edge to destination face  \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* bMergeFace (bool)  \n *Arg4:* bMergeEdge (bool)  \n *Arg5:* dMergeEdgeAngle (double)  \n *Arg6:* bMultiEF (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MMCCarACTools.ACModelCreationTools.MeshedFace":{"prefix":"MeshedFace","text":"*Name:* MMCCarACTools.ACModelCreationTools.MeshedFace  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlItem1 (cursor list)  \n *Arg2:* crlItem2 (cursor list)  \n *Arg3:* crlItem3 (cursor list)  \n *Arg4:* crlPart (cursor list)  \n *Arg5:* iType (integer)  \n *Arg6:* dMeshSise (double)  \n *Arg7:* bMergeTol (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MMCCarACTools.ClearanceElement.Connect":{"prefix":"Connect","text":"*Name:* MMCCarACTools.ClearanceElement.Connect  \n*Desc:* MMCCarACTools ClearanceElement Connect  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* crlElem (cursor list)  \n *Arg3:* iConnectionMethod (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"MMCCarACTools.ClearanceElement.Edit":{"prefix":"Edit","text":"*Name:* MMCCarACTools.ClearanceElement.Edit  \n*Desc:* Edit clearance elment  \n *JVer:* 5.0  \n *Arg1:* dDx (double)  \n *Arg2:* dDy (double)  \n *Arg3:* dDz (double)  \n *Arg4:* dLx (double)  \n *Arg5:* dLy (double)  \n *Arg6:* dLz (double)  \n *Arg7:* crlTarget (cursor list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MufflerHA.CreateEdge.PerpendicularLineToEdge":{"prefix":"PerpendicularLineToEdge","text":"*Name:* MufflerHA.CreateEdge.PerpendicularLineToEdge  \n*Desc:* Command use for MufflerHA CreateEdge PerpendicularLineToEdge  \n *JVer:* 5.0  \n *Arg1:* crNode (cursor)  \n *Arg2:* crEdge (cursor)  \n *Arg3:* crlFace (cursor list)  \n *Arg4:* bBreakFace (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"MufflerHA.CreateEdgeClassic.ProjectLine":{"prefix":"ProjectLine","text":"*Name:* MufflerHA.CreateEdgeClassic.ProjectLine  \n*Desc:* create edge  \n *JVer:* 5.0  \n *Arg1:* ilAiedgeidForMacro (int list)  \n *Arg2:* ilAifaceidForMacro (int list)  \n *Arg3:* bDivideFace (bool)  \n *Arg4:* crlAiparttargetForMarco (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"MufflerHA.CopyMeshCount":{"prefix":"CopyMeshCount","text":"*Name:* MufflerHA.CopyMeshCount  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlMasterEdge (cursor list)  \n *Arg2:* crlSlaveEdge (cursor list)  \n *Arg3:* strBaseName (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"MufflerT.SpecialModeling.Rod.Rod":{"prefix":"Rod","text":"*Name:* MufflerT.SpecialModeling.Rod.Rod  \n*Desc:* create rod  \n *JVer:* 5.0  \n *Arg1:* crlNode (cursor list)  \n *Arg2:* dRadius (double)  \n *Arg3:* iType (integer)  \n *Arg4:* dMeshSize (double)  \n *Arg5:* dStartDist (double)  \n *Arg6:* dWeldDist (double)  \n *Arg7:* iDivNumber (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"MuxWeld.CreateWeld.Auto":{"prefix":"Auto","text":"*Name:* MuxWeld.CreateWeld.Auto  \n*Desc:* Auto create weld  \n *JVer:* 5.0  \n *Arg1:* iIconnectattributeMethod (integer)  \n *Arg2:* strStrconnectattributeName (string)  \n *Arg3:* crlMasterTarget (cursor list)  \n *Arg4:* crlSlaveTarget (cursor list)  \n *Arg5:* iIconnectattributeCoordsys (integer)  \n *Arg6:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"MuxWeld.DefineSequence.Single":{"prefix":"Single","text":"*Name:* MuxWeld.DefineSequence.Single  \n*Desc:* Define Sequence  \n *JVer:* 5.0  \n *Arg1:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"MuxWeld.MeshingPass":{"prefix":"MeshingPass","text":"*Name:* MuxWeld.MeshingPass  \n*Desc:* sweep cross section to create welding  \n *JVer:* 5.0  \n *Arg1:* crPart (cursor)  \n *Arg2:* crlEdge (cursor list)  \n *Arg3:* dMeshSize (double)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* create Property 3D Weld Bead  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crMaterial (cursor)  \n *Arg3:* crlTarget (cursor list)  \n *Arg4:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* NSModeling NSModeling_Close_Hole  \n *JVer:* 5.0  \n *Arg1:* iType (integer)  \n *Arg2:* dMaxLength (double)  \n *Arg3:* bMergeFaces (bool)  \n *Arg4:* bSetCenterPoint (bool)  \n *Arg5:* crlNode (cursor list)  \n *Arg6:* crlPart (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"OasisAWizard.LocalMeshing.FilletMapMeshing":{"prefix":"FilletMapMeshing","text":"*Name:* OasisAWizard.LocalMeshing.FilletMapMeshing  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* dMinLength (double)  \n *Arg4:* dMaxLength (double)  \n *Arg5:* dMinRadius (double)  \n *Arg6:* dMaxRadius (double)  \n *Arg7:* bConvex (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* import Nastran op2 mesh  \n *JVer:* 5.0  \n *Arg1:* strlFilePaths (string list)  \n *Arg2:* iImportType (integer)  \n *Arg3:* dFaceAngle (double)  \n *Arg4:* dEdgeAngle (double)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* import Nastran op2 post job  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strlPaths (string list)  \n *Arg3:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Post.ImportResults.ImportTsdbMesh":{"prefix":"ImportTsdbMesh","text":"*Name:* Post.ImportResults.ImportTsdbMesh  \n*Desc:* import tsdb mesh  \n *JVer:* 5.0  \n *Arg1:* strTsdbFilePath (string)  \n *Arg2:* strBtxFilePath (string)  \n *Arg3:* iImportType (integer)  \n *Arg4:* dFaceAngle (double)  \n *Arg5:* dEdgeAngle (double)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* import Nastran HDF5Mesh file  \n *JVer:* 5.0  \n *Arg1:* strlFilePaths (string list)  \n *Arg2:* iImportType (integer)  \n *Arg3:* dFaceAngle (double)  \n *Arg4:* dEdgeAngle (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"Post.ImportResults.ADVC":{"prefix":"ADVC","text":"*Name:* Post.ImportResults.ADVC  \n*Desc:* Command use for Post ImportResults ADVC  \n *JVer:* 5.0  \n *Arg1:* strlPath (string list)  \n *Arg2:* iImportType (integer)  \n *Arg3:* dFaceAngle (double)  \n *Arg4:* dEdgeAngle (double)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Post ImportResults ADVC2PostJob  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strlResultFolderPaths (string list)  \n *Arg3:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Import Nastran HDF5PostJob file  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* strlPaths (string list)  \n *Arg3:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.ElemRelatedInfo.Shell":{"prefix":"Shell","text":"*Name:* Properties.ElemRelatedInfo.Shell  \n*Desc:* Set Shell Parameter  \n *JVer:* 5.0  \n *Arg1:* listErishellThetaProp ([])  \n *Arg2:* listErishellCsProp ([])  \n *Arg3:* listErishellZoffsProp ([])  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.ElemRelatedInfo.Conn":{"prefix":"Conn","text":"*Name:* Properties.ElemRelatedInfo.Conn  \n*Desc:* Set Shell Parameter  \n *JVer:* 5.0  \n *Arg1:* listEricontEndProp ([])  \n *Arg2:* listEricontOriVecProp ([])  \n *Arg3:* listCidProp ([])  \n *Arg4:* listEricontDamperLocProp ([])  \n *Arg5:* listOcidProp ([])  \n *Arg6:* listDamperOffsetVecs ([])  \n *Arg7:* listEricontNodeidProp ([])  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.ElemRelatedInfo.Rod":{"prefix":"Rod","text":"*Name:* Properties.ElemRelatedInfo.Rod  \n*Desc:* Set Rod Parameter  \n *JVer:* 5.0  \n *Arg1:* listEricontEndProp ([])  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.ElemRelatedInfo.Beam":{"prefix":"Beam","text":"*Name:* Properties.ElemRelatedInfo.Beam  \n*Desc:* Set Beam Parameter  \n *JVer:* 5.0  \n *Arg1:* listEribeamEndProp ([])  \n *Arg2:* listEribeamOriVecProp ([])  \n *Arg3:* listEribeamOriNodeidProp ([])  \n *Arg4:* listEribeamOffsetVecA ([])  \n *Arg5:* listEribeamOffsetVecB ([])  \n *Arg6:* listEribeamPinAProp ([])  \n *Arg7:* listEribeamPinBProp ([])  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.ElemRelatedInfo.Bar":{"prefix":"Bar","text":"*Name:* Properties.ElemRelatedInfo.Bar  \n*Desc:* Set Bar Parameter  \n *JVer:* 5.0  \n *Arg1:* listEribeamEndProp ([])  \n *Arg2:* listEribeamOriVecProp ([])  \n *Arg3:* listEribeamOriNodeidProp ([])  \n *Arg4:* listEribeamOffsetVecA ([])  \n *Arg5:* listEribeamOffsetVecB ([])  \n *Arg6:* listEribeamPinAProp ([])  \n *Arg7:* listEribeamPinBProp ([])  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.ElemRelatedInfo.Gap":{"prefix":"Gap","text":"*Name:* Properties.ElemRelatedInfo.Gap  \n*Desc:* Set Shell Parameter  \n *JVer:* 5.0  \n *Arg1:* listEricontEndProp ([])  \n *Arg2:* listEricontOriVecProp ([])  \n *Arg3:* listCidProp ([])  \n *Arg4:* listEricontDamperLocProp ([])  \n *Arg5:* listOcidProp ([])  \n *Arg6:* listDamperOffsetVecs ([])  \n *Arg7:* listEricontNodeidProp ([])  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.ElemRelatedInfo.Bush":{"prefix":"Bush","text":"*Name:* Properties.ElemRelatedInfo.Bush  \n*Desc:* Set Shell Parameter  \n *JVer:* 5.0  \n *Arg1:* listEricontEndProp ([])  \n *Arg2:* listEricontOriVecProp ([])  \n *Arg3:* listCidProp ([])  \n *Arg4:* listEricontDamperLocProp ([])  \n *Arg5:* listOcidProp ([])  \n *Arg6:* listDamperOffsetVecs ([])  \n *Arg7:* listEricontNodeidProp ([])  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Material.Add":{"prefix":"Add","text":"*Name:* Properties.Material.Add  \n*Desc:* Command use for Properties Material Add  \n *JVer:* 5.0  \n *Arg1:* strMaterialName (string)  \n *Arg2:* listMaterialProperty ([])  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Material.Modify":{"prefix":"Modify","text":"*Name:* Properties.Material.Modify  \n*Desc:* Command use for Properties Material Modify  \n *JVer:* 5.0  \n *Arg1:* strMaterialID (string)  \n *Arg2:* listMaterialProperty ([])  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Material.Delete":{"prefix":"Delete","text":"*Name:* Properties.Material.Delete  \n*Desc:* Command use for Properties Material Delete  \n *JVer:* 5.0  \n *Arg1:* strMaterialID (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Section.Import":{"prefix":"Import","text":"*Name:* Properties.Section.Import  \n*Desc:* import 1D Section  \n *JVer:* 5.0  \n *Arg1:* strImportPath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Section.ModifyGeneral":{"prefix":"ModifyGeneral","text":"*Name:* Properties.Section.ModifyGeneral  \n*Desc:* Command use for Properties Section ModifyGeneral  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crSection (cursor)  \n *Arg3:* iSecType (integer)  \n *Arg4:* iGeneralType (integer)  \n *Arg5:* dA (double)  \n *Arg6:* dB (double)  \n *Arg7:* dH (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Section.ModifyLibrary":{"prefix":"ModifyLibrary","text":"*Name:* Properties.Section.ModifyLibrary  \n*Desc:* Command use for Properties Section ModifyLibrary  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crSection (cursor)  \n *Arg3:* iType (integer)  \n *Arg4:* iLibType (integer)  \n *Arg5:* dDimSize0 (double)  \n *Arg6:* dDimSize1 (double)  \n *Arg7:* dDimSize2 (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Section.ModifySketcher":{"prefix":"ModifySketcher","text":"*Name:* Properties.Section.ModifySketcher  \n*Desc:* Command use for Properties Section ModifySketcher  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crSection (cursor)  \n *Arg3:* iType (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Section.Export":{"prefix":"Export","text":"*Name:* Properties.Section.Export  \n*Desc:* export 1D section to xml file  \n *JVer:* 5.0  \n *Arg1:* strExportSavePath (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Section.Delete":{"prefix":"Delete","text":"*Name:* Properties.Section.Delete  \n*Desc:* Properties Section Delete  \n *JVer:* 5.0  \n *Arg1:* crlSection (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Section.AddGeneral":{"prefix":"AddGeneral","text":"*Name:* Properties.Section.AddGeneral  \n*Desc:* Command use for Properties Section AddGeneral  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iSecType (integer)  \n *Arg3:* iSecGenType (integer)  \n *Arg4:* dDsecGensizeA (double)  \n *Arg5:* dDsecGensizeB (double)  \n *Arg6:* dDsecGensizeH (double)  \n *Arg7:* dDsecGensizeT1 (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Section.AddLibrary":{"prefix":"AddLibrary","text":"*Name:* Properties.Section.AddLibrary  \n*Desc:* Command use for Properties Section AddLibrary  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iSecType (integer)  \n *Arg3:* iLibType (integer)  \n *Arg4:* dDim1 (double)  \n *Arg5:* dDim2 (double)  \n *Arg6:* dDim3 (double)  \n *Arg7:* dDim4 (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Section.AddSketcher":{"prefix":"AddSketcher","text":"*Name:* Properties.Section.AddSketcher  \n*Desc:* Command use for Properties Section AddSketcher  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iSecType (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Cohesive":{"prefix":"Cohesive","text":"*Name:* Properties.Cohesive  \n*Desc:* create property 3d cohesive  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crMaterial (cursor)  \n *Arg3:* iResponse (integer)  \n *Arg4:* bSpecifyThick (bool)  \n *Arg5:* dInitialThick (double)  \n *Arg6:* crlTarget (cursor list)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Gasket":{"prefix":"Gasket","text":"*Name:* Properties.Gasket  \n*Desc:* create property 3d gasket  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crMaterial (cursor)  \n *Arg3:* dThickX (double)  \n *Arg4:* dThickY (double)  \n *Arg5:* dThickZ (double)  \n *Arg6:* crlTarget (cursor list)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Shell":{"prefix":"Shell","text":"*Name:* Properties.Shell  \n*Desc:* create shell property  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iPID (integer)  \n *Arg3:* crMatMembrane (cursor)  \n *Arg4:* crMatBend (cursor)  \n *Arg5:* crMatShear (cursor)  \n *Arg6:* crMatCoupl (cursor)  \n *Arg7:* dMatOrient1 (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.PropertyTable":{"prefix":"PropertyTable","text":"*Name:* Properties.PropertyTable  \n*Desc:* renumber property/material ID  \n *JVer:* 5.0  \n *Arg1:* listRenumberProp ([])  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Beam":{"prefix":"Beam","text":"*Name:* Properties.Beam  \n*Desc:* add property of 1D beam  \n *JVer:* 5.0  \n *Arg1:* strNewName (string)  \n *Arg2:* iPId (integer)  \n *Arg3:* crSection (cursor)  \n *Arg4:* iShapeDataType (integer)  \n *Arg5:* crMat (cursor)  \n *Arg6:* dArea (double)  \n *Arg7:* dlVecOrient (double list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Rod":{"prefix":"Rod","text":"*Name:* Properties.Rod  \n*Desc:* create 1D rod property  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iId (integer)  \n *Arg3:* crSection (cursor)  \n *Arg4:* crMat (cursor)  \n *Arg5:* dArea (double)  \n *Arg6:* dTorConst (double)  \n *Arg7:* dTorStressCoeff (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:*   \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iId (integer)  \n *Arg3:* crSection (cursor)  \n *Arg4:* crMat (cursor)  \n *Arg5:* vecOrient (vector)  \n *Arg6:* crlTarget (cursor list)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Solid":{"prefix":"Solid","text":"*Name:* Properties.Solid  \n*Desc:* create property solid  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iPID (integer)  \n *Arg3:* crMaterial (cursor)  \n *Arg4:* iCordM (integer)  \n *Arg5:* iIN (integer)  \n *Arg6:* iOutLoc (integer)  \n *Arg7:* iISOP (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Create 1D Property Sketcher Section  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iSecType (integer)  \n *Arg3:* iSecGentype (integer)  \n *Arg4:* dSecGensizeA (double)  \n *Arg5:* dSecGensizeB (double)  \n *Arg6:* dSecGensizeH (double)  \n *Arg7:* dSecGensizeT1 (double)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.Composite":{"prefix":"Composite","text":"*Name:* Properties.Composite  \n*Desc:* Create 2D Composite Material Shell Property  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iDFT (integer)  \n *Arg3:* dGE (double)  \n *Arg4:* iDLAM (integer)  \n *Arg5:* crMat (cursor)  \n *Arg6:* dNSM (double)  \n *Arg7:* iDPID (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.BAR":{"prefix":"BAR","text":"*Name:* Properties.BAR  \n*Desc:* create 1D bar property  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iId (integer)  \n *Arg3:* crSection (cursor)  \n *Arg4:* iShapeDataType (integer)  \n *Arg5:* crDatacrMat (cursor)  \n *Arg6:* dDatadArea (double)  \n *Arg7:* dlDataOrient (double list)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.ThicknessDistribution":{"prefix":"ThicknessDistribution","text":"*Name:* Properties.ThicknessDistribution  \n*Desc:* Properties view Thickness Distribution  \n *JVer:* 5.0  \n *Arg1:* dMax (double)  \n *Arg2:* dMin (double)  \n *Arg3:* iByEach (integer)  \n *Arg4:* dlThicknessValueSet (double list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Properties.RigidBody":{"prefix":"RigidBody","text":"*Name:* Properties.RigidBody  \n*Desc:* assign properties rigid body  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iId (integer)  \n *Arg3:* iRefNodeId (integer)  \n *Arg4:* crlTarget (cursor list)  \n *Arg5:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"SNOnePush.DropTest.CalcTimestep":{"prefix":"CalcTimestep","text":"*Name:* SNOnePush.DropTest.CalcTimestep  \n*Desc:* Used to calculate time step for drop test function  \n *JVer:* 5.0  \n *Arg1:* dRelevantElemRate (double)  \n *Arg2:* dChangeMassRage (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"SNOnePush.DropTest.UpdateFloor":{"prefix":"UpdateFloor","text":"*Name:* SNOnePush.DropTest.UpdateFloor  \n*Desc:* Assemble cylinder layer  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iDir (integer)  \n *Arg3:* dRopHeight (double)  \n *Arg4:* dSolutionTime (double)  \n *Arg5:* iNumberOutput (integer)  \n *Arg6:* dContactFriction (double)  \n *Arg7:* iRotAxis (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"SNOnePush.DropTest.DropRotation":{"prefix":"DropRotation","text":"*Name:* SNOnePush.DropTest.DropRotation  \n*Desc:* Assemble cylinder layer  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iDir (integer)  \n *Arg3:* dRopHeight (double)  \n *Arg4:* dSolutionTime (double)  \n *Arg5:* iNumberOutput (integer)  \n *Arg6:* dContactFriction (double)  \n *Arg7:* iRotAxis (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"SNOnePush.CADImport":{"prefix":"CADImport","text":"*Name:* SNOnePush.CADImport  \n*Desc:* import CAD model  \n *JVer:* 5.0  \n *Arg1:* dDsurfaceplaneTolerance (double)  \n *Arg2:* dDsurfaceplaneAngle (double)  \n *Arg3:* dMaxFacetWidth (double)  \n *Arg4:* bBnxMultipart (bool)  \n *Arg5:* dChordHeightTolerance (double)  \n *Arg6:* dAngleToleranceDegree (double)  \n *Arg7:* iConvertIsolatedCurve (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"SNOnePush.DropTestSNOnePush":{"prefix":"DropTestSNOnePush","text":"*Name:* SNOnePush.DropTestSNOnePush  \n*Desc:* Command use for SNOnePush DropTestSNOnePush  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iDir (integer)  \n *Arg3:* dRopHeight (double)  \n *Arg4:* dSolutionTime (double)  \n *Arg5:* iNumOutput (integer)  \n *Arg6:* dContactFriction (double)  \n *Arg7:* iRotAxis (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"SNOnePush.AutoSweepClosedLoopShaped":{"prefix":"AutoSweepClosedLoopShaped","text":"*Name:* SNOnePush.AutoSweepClosedLoopShaped  \n*Desc:* Make hexa for closed loop shaped  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* dMeshSize (double)  \n *Arg3:* dLengthSize (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"StiffCalc.Force":{"prefix":"Force","text":"*Name:* StiffCalc.Force  \n*Desc:* create NormalUnityForce  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* poslForce (position list)  \n *Arg3:* poslMoment (position list)  \n *Arg4:* iEnArrowDir (integer)  \n *Arg5:* iDistributionMethod (integer)  \n *Arg6:* crCurCoord (cursor)  \n *Arg7:* crTable (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"SZOnepushReliability.Assembly.CreateWeld":{"prefix":"CreateWeld","text":"*Name:* SZOnepushReliability.Assembly.CreateWeld  \n*Desc:* Create welding  \n *JVer:* 5.0  \n *Arg1:* crlWelds (cursor list)  \n *Arg2:* dMeshSize (double)  \n *Arg3:* iRrate (integer)  \n *Arg4:* dFilletRadius (double)  \n *Return:* 1 success, 0 fail (int)  \n "},"SZOnepushReliability.Assembly.ContactSurface":{"prefix":"ContactSurface","text":"*Name:* SZOnepushReliability.Assembly.ContactSurface  \n*Desc:* Contact surface  \n *JVer:* 5.0  \n *Arg1:* crlSrcFace (cursor list)  \n *Arg2:* crlTarPart (cursor list)  \n *Arg3:* dTolerance (double)  \n *Arg4:* iLayer (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"SZOnepushReliability.MeshEdit.FilletMapping":{"prefix":"FilletMapping","text":"*Name:* SZOnepushReliability.MeshEdit.FilletMapping  \n*Desc:* Fillet mapping  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* dMinRadius (double)  \n *Arg4:* dMaxRadius (double)  \n *Arg5:* dMinAngle (double)  \n *Arg6:* dMaxAngle (double)  \n *Arg7:* bConvex (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"SZOnepushReliability.AlignMidNode":{"prefix":"AlignMidNode","text":"*Name:* SZOnepushReliability.AlignMidNode  \n*Desc:* align mid-nodes  \n *JVer:* 5.0  \n *Arg1:* crlSource (cursor list)  \n *Arg2:* crlTarget (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Test.Connection.RRod":{"prefix":"RRod","text":"*Name:* Test.Connection.RRod  \n*Desc:* create RRod  \n *JVer:* 5.0  \n *Arg1:* rbarConnection (RBAR_CONNECTION)  \n *Arg2:* iUlDOFs (integer)  \n *Arg3:* dTol (double)  \n *Arg4:* crlMasterTarget (cursor list)  \n *Arg5:* crlSlaveTarget (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Test.Muffler.ProjectLineForWeld":{"prefix":"ProjectLineForWeld","text":"*Name:* Test.Muffler.ProjectLineForWeld  \n*Desc:* Projec line for weld  \n *JVer:* 5.0  \n *Arg1:* crlEdge (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Test.ZGeometryTest.IntersectionCheck":{"prefix":"IntersectionCheck","text":"*Name:* Test.ZGeometryTest.IntersectionCheck  \n*Desc:* Intersection check  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* crlElem (cursor list)  \n *Arg4:* iType (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Test.ZGeometryTest.ShellAssy":{"prefix":"ShellAssy","text":"*Name:* Test.ZGeometryTest.ShellAssy  \n*Desc:* Command use for Test ZGeometryTest ShellAssy  \n *JVer:* 5.0  \n *Arg1:* taPart ([])  \n *Arg2:* crlFace (cursor list)  \n *Arg3:* _iMeshType (0)  \n *Arg4:* _bSelfIntersection (False)  \n *Arg5:* _iMethod (3)  \n *Arg6:* _dGapTol (2.1)  \n *Return:* 1 success, 0 fail (int)  \n "},"Test.FindFacesInPart":{"prefix":"FindFacesInPart","text":"*Name:* Test.FindFacesInPart  \n*Desc:* Find faces in part by typical description  \n *JVer:* 5.0  \n *Arg1:* crPart (cursor)  \n *Arg2:* strIdentical (string)  \n *Return:* 1 success, 0 fail (int)  \n "},"Test.CreateElementForWelding":{"prefix":"CreateElementForWelding","text":"*Name:* Test.CreateElementForWelding  \n*Desc:* Create weld elements  \n *JVer:* 5.0  \n *Arg1:* crlSrcElems (cursor list)  \n *Arg2:* crlDstElems (cursor list)  \n *Arg3:* crlSideElems (cursor list)  \n *Arg4:* crlPart (cursor list)  \n *Arg5:* crMaterial (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Connections.Contact":{"prefix":"Contact","text":"*Name:* Tool.Connections.Contact  \n*Desc:* create contacts  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iContactType (integer)  \n *Arg3:* dInterferenceClosure (double)  \n *Arg4:* dFrictionCoefficient (double)  \n *Arg5:* iShellOffset (integer)  \n *Arg6:* iMasterShellOrientation (integer)  \n *Arg7:* iSlaveShellOrientation (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Connections.Spring":{"prefix":"Spring","text":"*Name:* Tool.Connections.Spring  \n*Desc:* Spring connection  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* strName (string)  \n *Arg3:* crlMasterTarget (cursor list)  \n *Arg4:* crlSlaveTarget (cursor list)  \n *Arg5:* crCoordSys (cursor)  \n *Arg6:* iSpringType (integer)  \n *Arg7:* iGround (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Command use for Tool Connections RBE3  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* crlMasterTarget (cursor list)  \n *Arg3:* crlSlaveTarget (cursor list)  \n *Arg4:* listRbe3TermConnection ([])  \n *Arg5:* iTypeRBE3 (integer)  \n *Arg6:* strName (string)  \n *Arg7:* crCoordSys (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Connections.Mass":{"prefix":"Mass","text":"*Name:* Tool.Connections.Mass  \n*Desc:* Properties Prop0D Mass  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* crlTargetNodes (cursor list)  \n *Arg3:* dMass (double)  \n *Arg4:* iDof (integer)  \n *Arg5:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Coordinates.CylinderFace":{"prefix":"CylinderFace","text":"*Name:* Tool.Coordinates.CylinderFace  \n*Desc:* create Coordinate by Cylinder Face  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iCoordType (integer)  \n *Arg3:* crFace (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Coordinates.ThreeNode":{"prefix":"ThreeNode","text":"*Name:* Tool.Coordinates.ThreeNode  \n*Desc:* create Coordinate by Cylinder Face  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iCoordType (integer)  \n *Arg3:* iOrder (integer)  \n *Arg4:* crlNode (cursor list)  \n *Arg5:* veclPoints (vector list)  \n *Arg6:* crRefCoord (cursor)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Coordinates.Align":{"prefix":"Align","text":"*Name:* Tool.Coordinates.Align  \n*Desc:* create Coordinate by Align  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iCoordType (integer)  \n *Arg3:* iCoordAxis (integer)  \n *Arg4:* bCreateNew (bool)  \n *Arg5:* crlNode (cursor list)  \n *Arg6:* crEdge (cursor)  \n *Arg7:* crEdit (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Coordinates.vecOffset":{"prefix":"vecOffset","text":"*Name:* Tool.Coordinates.vecOffset  \n*Desc:* Command use for Tool Coordinates vecOffset  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iCoordType (integer)  \n *Arg3:* vTranslate ([0.0,0.0,0.0])  \n *Arg4:* bCreateNew (bool)  \n *Arg5:* crRefCoord (cursor)  \n *Arg6:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Coordinates.Rotate":{"prefix":"Rotate","text":"*Name:* Tool.Coordinates.Rotate  \n*Desc:* create Coordinate by Rotate  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iCoordType (integer)  \n *Arg3:* vecRotate (vector)  \n *Arg4:* bCreateNew (bool)  \n *Arg5:* crRefCoord (cursor)  \n *Arg6:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Coordinates.AttachCircle":{"prefix":"AttachCircle","text":"*Name:* Tool.Coordinates.AttachCircle  \n*Desc:* create Coordinate by AttachCircle  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iCoordType (integer)  \n *Arg3:* crEdge (cursor)  \n *Arg4:* bCreateNew (bool)  \n *Arg5:* crRefCoord (cursor)  \n *Arg6:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Coordinates.AttachNode":{"prefix":"AttachNode","text":"*Name:* Tool.Coordinates.AttachNode  \n*Desc:* create Coordinate by AttachNode  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iCoordType (integer)  \n *Arg3:* crNode (cursor)  \n *Arg4:* bCreateNew (bool)  \n *Arg5:* crRefCoord (cursor)  \n *Arg6:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Coordinates.Face":{"prefix":"Face","text":"*Name:* Tool.Coordinates.Face  \n*Desc:* create Coordinate by Face  \n *JVer:* 5.0  \n *Arg1:* strName (string)  \n *Arg2:* iCoordType (integer)  \n *Arg3:* iOrder (integer)  \n *Arg4:* veclPoint (vector list)  \n *Arg5:* crlNode (cursor list)  \n *Arg6:* crItem (cursor)  \n *Arg7:* crRefCoord (cursor)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Group.CreateGroup":{"prefix":"CreateGroup","text":"*Name:* Tool.Group.CreateGroup  \n*Desc:* Command use for Tool Group CreateGroup  \n *JVer:* 5.0  \n *Arg1:* strGroupName (string)  \n *Arg2:* crlTarget (cursor list)  \n *Arg3:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Group.DeleteGroupEntity":{"prefix":"DeleteGroupEntity","text":"*Name:* Tool.Group.DeleteGroupEntity  \n*Desc:* Command use for Tool Group DeleteGroupEntity  \n *JVer:* 5.0  \n *Arg1:* crlDelGroup (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.ImprintEdges.Line":{"prefix":"Line","text":"*Name:* Tool.ImprintEdges.Line  \n*Desc:* imprint line edges  \n *JVer:* 5.0  \n *Arg1:* veclAvPoint (vector list)  \n *Arg2:* bDivideFace (bool)  \n *Arg3:* crlPart (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.ImprintEdges.ClosedLine":{"prefix":"ClosedLine","text":"*Name:* Tool.ImprintEdges.ClosedLine  \n*Desc:* Command use for Tool ImprintEdges ClosedLine  \n *JVer:* 5.0  \n *Arg1:* veclPositions (vector list)  \n *Arg2:* crlTargetFace (cursor list)  \n *Arg3:* iEnableBreakFace (integer)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Imprint edges  \n *JVer:* 5.0  \n *Arg1:* poslPoint (position list)  \n *Arg2:* bDivide (bool)  \n *Arg3:* crlPart (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.ElementCS":{"prefix":"ElementCS","text":"*Name:* Tool.ElementCS  \n*Desc:* create element coordinate system  \n *JVer:* 5.0  \n *Arg1:* iMethod (integer)  \n *Arg2:* iDispType (integer)  \n *Arg3:* bDispXDir (bool)  \n *Arg4:* bDispCoord (bool)  \n *Arg5:* dDispScale (double)  \n *Arg6:* crlTarget (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Measure.Angle.ProjectedNode":{"prefix":"ProjectedNode","text":"*Name:* Tool.Measure.Angle.ProjectedNode  \n*Desc:* Command use for Tool Measure Angle ProjectedNode  \n *JVer:* 5.0  \n *Arg1:* crNode (cursor)  \n *Arg2:* strTarget (string)  \n *Arg3:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Measure.Angle.TwoNodesAxis":{"prefix":"TwoNodesAxis","text":"*Name:* Tool.Measure.Angle.TwoNodesAxis  \n*Desc:* Command use for Tool Measure Angle TwoNodesAxis  \n *JVer:* 5.0  \n *Arg1:* crNode1 (cursor)  \n *Arg2:* crNode2 (cursor)  \n *Arg3:* dlAxis (double list)  \n *Arg4:* strTarget (string)  \n *Arg5:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Command use for Tool Measure Angle By2Axis  \n *JVer:* 5.0  \n *Arg1:* xyz1 ([0)  \n *Arg2:* 0 ([])  \n *Arg3:* 0 ([])  \n *Arg4:* xyz2 ([0)  \n *Arg5:* 0 ([])  \n *Arg6:* 0 ([])  \n *Arg7:* target (\"Angle\")  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Measure.Distance.Edge":{"prefix":"Edge","text":"*Name:* Tool.Measure.Distance.Edge  \n*Desc:* Command use for Tool Measure Distance Edge  \n *JVer:* 5.0  \n *Arg1:* crEdge (cursor)  \n *Arg2:* iOption (integer)  \n *Arg3:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Measure.Distance.EdgeNode":{"prefix":"EdgeNode","text":"*Name:* Tool.Measure.Distance.EdgeNode  \n*Desc:* Command use for Tool Measure Distance EdgeNode  \n *JVer:* 5.0  \n *Arg1:* crPoint (cursor)  \n *Arg2:* crEdge (cursor)  \n *Arg3:* iOption (integer)  \n *Arg4:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Measure.Distance.TwoPoints":{"prefix":"TwoPoints","text":"*Name:* Tool.Measure.Distance.TwoPoints  \n*Desc:* Command use for Tool Measure Distance TwoPoints  \n *JVer:* 5.0  \n *Arg1:* posPoint1 (position)  \n *Arg2:* posPoint2 (position)  \n *Arg3:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Measure.Distance.LineNode":{"prefix":"LineNode","text":"*Name:* Tool.Measure.Distance.LineNode  \n*Desc:* Command use for Tool Measure Distance LineNode  \n *JVer:* 5.0  \n *Arg1:* crlTargetNode (cursor list)  \n *Arg2:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Command use for Tool Measure Distance Plane3NodesToNode  \n *JVer:* 5.0  \n *Arg1:* crNode (cursor)  \n *Arg2:* crNode (cursor)  \n *Arg3:* crNode (cursor)  \n *Arg4:* crNode (cursor)  \n *Arg5:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Measure.Distance.TwoEdges":{"prefix":"TwoEdges","text":"*Name:* Tool.Measure.Distance.TwoEdges  \n*Desc:* Command use for Tool Measure Distance TwoEdges  \n *JVer:* 5.0  \n *Arg1:* crEdge1 (cursor)  \n *Arg2:* crEdge2 (cursor)  \n *Arg3:* iOptions (integer)  \n *Arg4:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Measure.Distance.PlaneElemToNode":{"prefix":"PlaneElemToNode","text":"*Name:* Tool.Measure.Distance.PlaneElemToNode  \n*Desc:* Command use for Tool Measure Distance PlaneElemToNode  \n *JVer:* 5.0  \n *Arg1:* crNode (cursor)  \n *Arg2:* crElem (cursor)  \n *Arg3:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Measure.Distance.TwoNodes":{"prefix":"TwoNodes","text":"*Name:* Tool.Measure.Distance.TwoNodes  \n*Desc:* Command use for Tool Measure Distance TwoNodes  \n *JVer:* 5.0  \n *Arg1:* crNode1 (cursor)  \n *Arg2:* crNode2 (cursor)  \n *Arg3:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Measure.Distance.FaceNode":{"prefix":"FaceNode","text":"*Name:* Tool.Measure.Distance.FaceNode  \n*Desc:* Command use for Tool Measure Distance FaceNode  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* crlNode (cursor list)  \n *Arg3:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Measure.Mass.ByMaterial":{"prefix":"ByMaterial","text":"*Name:* Tool.Measure.Mass.ByMaterial  \n*Desc:* Command use for Tool Measure Mass ByMaterial  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* strDensity (string)  \n *Arg3:* strTarget (string)  \n *Arg4:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Measure.Radius.ByThreeNodes":{"prefix":"ByThreeNodes","text":"*Name:* Tool.Measure.Radius.ByThreeNodes  \n*Desc:* Command use for Tool Measure Radius ByThreeNodes  \n *JVer:* 5.0  \n *Arg1:* crNode1_3 (cursor)  \n *Arg2:* crNode2_3 (cursor)  \n *Arg3:* crNode3_3 (cursor)  \n *Arg4:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* Command use for Tool Measure Radius MeasureRadiusBy3Nodes  \n *JVer:* 5.0  \n *Arg1:* crNode1_3 (cursor)  \n *Arg2:* crNode2_3 (cursor)  \n *Arg3:* crNode3_3 (cursor)  \n *Arg4:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.Measure.Volume":{"prefix":"Volume","text":"*Name:* Tool.Measure.Volume  \n*Desc:* Command use for Tool Measure Volume  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.MeshQuality.Manual.CleanTetCollapse":{"prefix":"CleanTetCollapse","text":"*Name:* Tool.MeshQuality.Manual.CleanTetCollapse  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Arg2:* iKeep (integer)  \n *Arg3:* iCheckCondition (integer)  \n *Arg4:* dLimitValue (double)  \n *Arg5:* iCleanupMode (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tool.MeshQuality.Manual.CleaningVolumeMesh":{"prefix":"CleaningVolumeMesh","text":"*Name:* Tool.MeshQuality.Manual.CleaningVolumeMesh  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlElem (cursor list)  \n *Arg3:* dLimitVolume (double)  \n *Arg4:* iMode (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Toolbar.Undo":{"prefix":"Undo","text":"*Name:* Toolbar.Undo  \n*Desc:* Undo  \n *JVer:* 5.0  \n *Arg1:* iCntUndo (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Toolbar.Redo":{"prefix":"Redo","text":"*Name:* Toolbar.Redo  \n*Desc:* Redo  \n *JVer:* 5.0  \n *Arg1:* iCntRedo (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.BySelection.SelectionOrder":{"prefix":"SelectionOrder","text":"*Name:* Tools.BySelection.SelectionOrder  \n*Desc:* Renumber by selection order  \n *JVer:* 5.0  \n *Arg1:* crlTarget (cursor list)  \n *Arg2:* iType (integer)  \n *Arg3:* iMethod (integer)  \n *Arg4:* iStartID (integer)  \n *Arg5:* iIncrementStep (integer)  \n *Arg6:* bAscending (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.BySelection.Position":{"prefix":"Position","text":"*Name:* Tools.BySelection.Position  \n*Desc:* Renumber by position  \n *JVer:* 5.0  \n *Arg1:* crlTarget (cursor list)  \n *Arg2:* iType (integer)  \n *Arg3:* iMethod (integer)  \n *Arg4:* iStartID (integer)  \n *Arg5:* iIncrementStep (integer)  \n *Arg6:* bAscending1 (bool)  \n *Arg7:* bAscending2 (bool)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.BySelection.OriginalID":{"prefix":"OriginalID","text":"*Name:* Tools.BySelection.OriginalID  \n*Desc:* Renumber by original ID  \n *JVer:* 5.0  \n *Arg1:* crlTarget (cursor list)  \n *Arg2:* iType (integer)  \n *Arg3:* iMethod (integer)  \n *Arg4:* iStartID (integer)  \n *Arg5:* iIncrementStep (integer)  \n *Arg6:* bAscending (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Group.DeleteGroupEntity":{"prefix":"DeleteGroupEntity","text":"*Name:* Tools.Group.DeleteGroupEntity  \n*Desc:* Delete Entity in Group  \n *JVer:* 5.0  \n *Arg1:* crlDelGroup (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Group.CreateGroup":{"prefix":"CreateGroup","text":"*Name:* Tools.Group.CreateGroup  \n*Desc:* Command use for Tools Group CreateGroup  \n *JVer:* 5.0  \n *Arg1:* strGroupName (string)  \n *Arg2:* crlTarget (cursor list)  \n *Arg3:* crEdit (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.TotalLoad.LBC":{"prefix":"LBC","text":"*Name:* Tools.TotalLoad.LBC  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlTarget (cursor list)  \n *Arg2:* crCoordinate (cursor)  \n *Arg3:* strOutput (string)  \n *Arg4:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.TotalLoad.Model":{"prefix":"Model","text":"*Name:* Tools.TotalLoad.Model  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlTarget (cursor list)  \n *Arg2:* crCoordinate (cursor)  \n *Arg3:* strOutput (string)  \n *Arg4:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.TotalLoad.Node":{"prefix":"Node","text":"*Name:* Tools.TotalLoad.Node  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlTarget (cursor list)  \n *Arg2:* crCoordinate (cursor)  \n *Arg3:* strOutput (string)  \n *Arg4:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.TotalLoad.Part":{"prefix":"Part","text":"*Name:* Tools.TotalLoad.Part  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlTarget (cursor list)  \n *Arg2:* crCoordinate (cursor)  \n *Arg3:* strOutput (string)  \n *Arg4:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.TotalLoad.Face":{"prefix":"Face","text":"*Name:* Tools.TotalLoad.Face  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crlTarget (cursor list)  \n *Arg2:* crCoordinate (cursor)  \n *Arg3:* strOutput (string)  \n *Arg4:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.NodeCS":{"prefix":"NodeCS","text":"*Name:* Tools.NodeCS  \n*Desc:* create Node CS  \n *JVer:* 5.0  \n *Arg1:* crlInst (cursor list)  \n *Arg2:* crCoordSystem (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.NodeCSGroup":{"prefix":"NodeCSGroup","text":"*Name:* Tools.NodeCSGroup  \n*Desc:* Command use for Tools NodeCSGroup  \n *JVer:* 5.0  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.DisplacementCS":{"prefix":"DisplacementCS","text":"*Name:* Tools.DisplacementCS  \n*Desc:* displace coordinate  \n *JVer:* 5.0  \n *Arg1:* crlInst (cursor list)  \n *Arg2:* crCoordSystem (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Connections":{"prefix":"Connections","text":"*Name:* Tools.Connections  \n*Desc:* renumber connection  \n *JVer:* 5.0  \n *Arg1:* listConnectRenumberTool ([])  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.GroupByDCS":{"prefix":"GroupByDCS","text":"*Name:* Tools.GroupByDCS  \n*Desc:* Command use for Tools GroupByDCS  \n *JVer:* 5.0  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Renumber":{"prefix":"Renumber","text":"*Name:* Tools.Renumber  \n*Desc:* Set renumber data  \n *JVer:* 5.0  \n *Arg1:* listRenumberItem ([])  \n *Arg2:* bAssignProp (bool)  \n *Arg3:* bSurfCornerFirst (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.RenumberByConnection":{"prefix":"RenumberByConnection","text":"*Name:* Tools.RenumberByConnection  \n*Desc:* Renumber by selection  \n *JVer:* 5.0  \n *Arg1:* connectRenumberTool (CONNECT_RENUMBER_TOOL)  \n *Arg2:* crlTarget (cursor list)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.RenumberByFile":{"prefix":"RenumberByFile","text":"*Name:* Tools.RenumberByFile  \n*Desc:* Renumber By File  \n *JVer:* 5.0  \n *Arg1:* strCSVPath (string)  \n *Arg2:* iConfilctStrategy (integer)  \n *Arg3:* bNeedToUpdateCount (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.ModelInfo":{"prefix":"ModelInfo","text":"*Name:* Tools.ModelInfo  \n*Desc:* export model info file  \n *JVer:* 5.0  \n *Arg1:* strPath (string)  \n *Arg2:* strPath (string)  \n *Arg3:* listMeshPartInfoTool ([])  \n *Arg4:* bPropertyAssignedPart (bool)  \n *Arg5:* bPropertyAssignedSummary (bool)  \n *Arg6:* iModelNode (integer)  \n *Arg7:* iNmodelnodeWithprop (integer)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Section":{"prefix":"Section","text":"*Name:* Tools.Section  \n*Desc:* Command use for Tools Section  \n *JVer:* 5.0  \n *Arg1:* bSection (bool)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Angle.TwoNodesAxis":{"prefix":"TwoNodesAxis","text":"*Name:* Tools.Measure.Angle.TwoNodesAxis  \n*Desc:* Measure the angle created by 2 nodes and Axis.  \n *JVer:* 5.0  \n *Arg1:* crNode1 (cursor)  \n *Arg2:* crNode2 (cursor)  \n *Arg3:* dlAxis (double list)  \n *Arg4:* strTarget (string)  \n *Arg5:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Angle.ThreeNodes":{"prefix":"ThreeNodes","text":"*Name:* Tools.Measure.Angle.ThreeNodes  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crNode1 (cursor)  \n *Arg2:* crNode2 (cursor)  \n *Arg3:* crNode3 (cursor)  \n *Arg4:* strTarget (string)  \n *Arg5:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Angle.ProjectedNode":{"prefix":"ProjectedNode","text":"*Name:* Tools.Measure.Angle.ProjectedNode  \n*Desc:* measure angle on projected node  \n *JVer:* 5.0  \n *Arg1:* crNode (cursor)  \n *Arg2:* strTarget (string)  \n *Arg3:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Angle.TwoElemEdges":{"prefix":"TwoElemEdges","text":"*Name:* Tools.Measure.Angle.TwoElemEdges  \n*Desc:*   \n *JVer:* 5.0  \n *Arg1:* crpElemEdge1 (cursor pair)  \n *Arg2:* crpElemEdge2 (cursor pair)  \n *Arg3:* strTarget (string)  \n *Arg4:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Angle.TwoAxis":{"prefix":"TwoAxis","text":"*Name:* Tools.Measure.Angle.TwoAxis  \n*Desc:* Measure the angle created by 2 Axis.  \n *JVer:* 5.0  \n *Arg1:* dlXyz1 (double list)  \n *Arg2:* 0 ([])  \n *Arg3:* 0 ([])  \n *Arg4:* dlXyz2 (double list)  \n *Arg5:* 0 ([])  \n *Arg6:* 0 ([])  \n *Arg7:* strTarget (string)  \n ... please read PSJ Command document for other args ...  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Angle.TwoEdges":{"prefix":"TwoEdges","text":"*Name:* Tools.Measure.Angle.TwoEdges  \n*Desc:* Measure the angle created by 2 edges.  \n *JVer:* 5.0  \n *Arg1:* crEdge1 (cursor)  \n *Arg2:* crEdge2 (cursor)  \n *Arg3:* strTarget (string)  \n *Arg4:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Area.Element":{"prefix":"Element","text":"*Name:* Tools.Measure.Area.Element  \n*Desc:* Command use for Tools Measure Area Element  \n *JVer:* 5.0  \n *Arg1:* crlElem (cursor list)  \n *Arg2:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Area.Face":{"prefix":"Face","text":"*Name:* Tools.Measure.Area.Face  \n*Desc:* Command use for Tools Measure Area Face  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Area.Body":{"prefix":"Body","text":"*Name:* Tools.Measure.Area.Body  \n*Desc:* Command use for Tools Measure Area Body  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Distance.TwoEdges":{"prefix":"TwoEdges","text":"*Name:* Tools.Measure.Distance.TwoEdges  \n*Desc:* measure the distance of two edges  \n *JVer:* 5.0  \n *Arg1:* crEdge1 (cursor)  \n *Arg2:* crEdge2 (cursor)  \n *Arg3:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Distance.TwoNodes":{"prefix":"TwoNodes","text":"*Name:* Tools.Measure.Distance.TwoNodes  \n*Desc:* Measure Distance Two Nodes  \n *JVer:* 5.0  \n *Arg1:* crNode1 (cursor)  \n *Arg2:* crNode2 (cursor)  \n *Arg3:* strTarget (string)  \n *Arg4:* iPrecision (integer)  \n *Arg5:* crCoordinateSystem (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Distance.FaceNode":{"prefix":"FaceNode","text":"*Name:* Tools.Measure.Distance.FaceNode  \n*Desc:* Measure Distance By FaceNode  \n *JVer:* 5.0  \n *Arg1:* crlFace (cursor list)  \n *Arg2:* crlNode (cursor list)  \n *Arg3:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Distance.Edge":{"prefix":"Edge","text":"*Name:* Tools.Measure.Distance.Edge  \n*Desc:* Measure Edge Length  \n *JVer:* 5.0  \n *Arg1:* crEdge (cursor)  \n *Arg2:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Distance.TwoPoints":{"prefix":"TwoPoints","text":"*Name:* Tools.Measure.Distance.TwoPoints  \n*Desc:* measure distance 2 points  \n *JVer:* 5.0  \n *Arg1:* posPoint1 (position)  \n *Arg2:* posPoint2 (position)  \n *Arg3:* strTarget (string)  \n *Arg4:* iPrecision (integer)  \n *Arg5:* crCoordinateSystem (cursor)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Distance.EdgeNode":{"prefix":"EdgeNode","text":"*Name:* Tools.Measure.Distance.EdgeNode  \n*Desc:* Measure Distance From Node to Edge  \n *JVer:* 5.0  \n *Arg1:* crEdge (cursor)  \n *Arg2:* crNode (cursor)  \n *Arg3:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Distance.LineNode":{"prefix":"LineNode","text":"*Name:* Tools.Measure.Distance.LineNode  \n*Desc:* Measures the distance of a perpendicular line from a node toward the line defined by the two nodes.  \n *JVer:* 5.0  \n *Arg1:* crlTargetNode (cursor list)  \n *Arg2:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Distance.PlaneElemToNode":{"prefix":"PlaneElemToNode","text":"*Name:* Tools.Measure.Distance.PlaneElemToNode  \n*Desc:* Measure Distance between Node and plane (created by element).  \n *JVer:* 5.0  \n *Arg1:* crNode (cursor)  \n *Arg2:* crElem (cursor)  \n *Arg3:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n *Desc:* measure the distance from node to plane(defined by 3 nodes)  \n *JVer:* 5.0  \n *Arg1:* crNode (cursor)  \n *Arg2:* crNode (cursor)  \n *Arg3:* crNode (cursor)  \n *Arg4:* crNode (cursor)  \n *Arg5:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Mass.Property":{"prefix":"Property","text":"*Name:* Tools.Measure.Mass.Property  \n*Desc:* measure mass using applied property  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlCondition (cursor list)  \n *Arg3:* strTarget (string)  \n *Arg4:* bGravityCenter (bool)  \n *Arg5:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Mass.Material":{"prefix":"Material","text":"*Name:* Tools.Measure.Mass.Material  \n*Desc:* measure mass by material  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* crlCondition (cursor list)  \n *Arg3:* strDensity (string)  \n *Arg4:* strTarget (string)  \n *Arg5:* bGravityCenter (bool)  \n *Arg6:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Radius.Edge":{"prefix":"Edge","text":"*Name:* Tools.Measure.Radius.Edge  \n*Desc:* Measure edge minimum radius  \n *JVer:* 5.0  \n *Arg1:* crEdge (cursor)  \n *Arg2:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Radius.ThreeNodes":{"prefix":"ThreeNodes","text":"*Name:* Tools.Measure.Radius.ThreeNodes  \n*Desc:* Measure Radius MeasureRadiusBy3Nodes  \n *JVer:* 5.0  \n *Arg1:* crNode13 (cursor)  \n *Arg2:* crNode23 (cursor)  \n *Arg3:* crNode33 (cursor)  \n *Arg4:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "},"Tools.Measure.Volume":{"prefix":"Volume","text":"*Name:* Tools.Measure.Volume  \n*Desc:* measure volume of parts  \n *JVer:* 5.0  \n *Arg1:* crlPart (cursor list)  \n *Arg2:* iPrecision (integer)  \n *Return:* 1 success, 0 fail (int)  \n "}}